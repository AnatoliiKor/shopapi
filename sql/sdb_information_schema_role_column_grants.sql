INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_class', 'relrewrite', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'foreign_server_options', 'foreign_server_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_basebackup', 'pid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_indexes', 'idx_blks_hit', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'character_maximum_length', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database_conflicts', 'confl_tablespace', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_user_tables', 'idx_tup_fetch', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_indexes', 'indexrelid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'table_privileges', 'table_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_servers', 'authorization_identifier', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats_ext', 'tablename', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats', 'inherited', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routines', 'module_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_udt_usage', 'udt_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggfinalextra', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_activity', 'datid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_indexes', 'indexrelid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_cast', 'castmethod', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database_conflicts', 'confl_snapshot', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_data_wrappers', 'oid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats', 'most_common_elems', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_indexes', 'idx_tup_fetch', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'constraint_table_usage', 'constraint_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_user_functions', 'schemaname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_archiver', 'last_archived_wal', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stavalues3', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'identity_cycle', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_data_wrappers', 'foreign_data_wrapper_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_servers', 'foreign_server_version', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_data_wrappers', 'library_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_tables', 'idx_blks_read', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'specific_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_amproc', 'amprocrighttype', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_namespace', 'nspacl', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_statio_sys_indexes', 'relid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_routine_grants', 'routine_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_locks', 'mode', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_language', 'lanacl', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'analyze_count', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_activity', 'query', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_prepared_xacts', 'prepared', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_hba_file_rules', 'database', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_xact_sys_tables', 'n_tup_ins', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'schema_level_routine', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'oid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_available_extension_versions', 'relocatable', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_amproc', 'amproc', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_cluster', 'cluster_index_relid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_class', 'reltoastrelid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'element_types', 'udt_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'domains', 'scope_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sequences', 'start_value', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'interval_precision', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_activity', 'state', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'proowner', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'table_privileges', 'grantee', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'analyze_count', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_wal_receiver', 'conninfo', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'data_type', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'information_schema_catalog_name', 'catalog_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'attrelid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_index', 'indislive', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggers', 'action_condition', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic_ext', 'stxkeys', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_user_tables', 'seq_scan', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'collation_character_set_applicability', 'character_set_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_dict', 'dicttemplate', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'table_constraints', 'initially_deferred', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_create_index', 'command', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_data_wrappers', 'fdwoptions', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database', 'tup_inserted', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'attislocal', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_indexes', 'schemaname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'column_options', 'table_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_policy', 'polpermissive', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats', 'elem_count_histogram', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_collation', 'collprovider', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'object_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_foreign_data_wrapper', 'fdwvalidator', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_slru', 'stats_reset', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_tables', 'foreign_server_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relforcerowsecurity', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_foreign_server', 'oid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggminvtransfn', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'schemata', 'catalog_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_sys_tables', 'n_tup_upd', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routines', 'external_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_replication', 'flush_lag', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'schemata', 'default_character_set_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_trigger', 'tgconstrrelid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_tables', 'toast_blks_read', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic_ext', 'stxkeys', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_sequences', 'blks_read', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_auth_members', 'member', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_partitioned_table', 'partdefid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_ssl', 'bits', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'is_result', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_trigger', 'tgfoid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'schemata', 'sql_path', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'dtd_identifier', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_index', 'indexprs', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'tables', 'user_defined_type_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_user_mapping', 'oid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'numeric_precision', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_vacuum', 'heap_blks_vacuumed', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'check_constraint_routine_usage', 'constraint_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typbasetype', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_proc', 'pronamespace', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'pronargs', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_matviews', 'hasindexes', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_available_extensions', 'comment', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'proname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'referential_constraints', 'constraint_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_publication', 'pubtruncate', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attrdef', 'oid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_slru', 'blks_zeroed', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shadow', 'usename', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'key_column_usage', 'ordinal_position', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database_conflicts', 'confl_tablespace', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routines', 'scope_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_event_trigger', 'oid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'character_set_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'data_type_privileges', 'object_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domain_udt_usage', 'udt_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'udt_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_type', 'typcategory', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typelem', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_namespace', 'nspname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_vacuum', 'datid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'vacuum_count', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'collation_character_set_applicability', 'collation_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_partitioned_table', 'partstrat', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'n_tup_hot_upd', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggtransfn', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'attbyval', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_extension', 'extconfig', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_wal_receiver', 'latest_end_lsn', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_policies', 'qual', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_indexes', 'idx_blks_read', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_available_extension_versions', 'superuser', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'character_set_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'tables', 'is_insertable_into', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'domain_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_roles', 'rolname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_slru', 'blks_zeroed', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_amproc', 'amprocrighttype', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'attinhcount', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_default_acl', 'oid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'triggers', 'event_manipulation', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'user_mapping_options', 'foreign_server_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'parameter_mode', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic_ext', 'stxstattarget', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_sequences', 'schemaname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_servers', 'foreign_server_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggered_update_columns', 'trigger_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typmodout', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_slru', 'blks_zeroed', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_analyze', 'sample_blks_total', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sequences', 'increment', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_partitioned_table', 'partstrat', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_foreign_data_wrapper', 'fdwoptions', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'is_result', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'role_table_grants', 'privilege_type', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_servers', 'foreign_server_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_tables', 'relid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_available_extension_versions', 'installed', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_user', 'passwd', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'is_instantiable', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'foreign_server_options', 'foreign_server_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_settings', 'pending_restart', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_indexes', 'indexrelid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_trigger', 'tginitdeferred', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_indexes', 'idx_blks_hit', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'numeric_precision', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_shdescription', 'description', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database_conflicts', 'confl_tablespace', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_config_map', 'mapseqno', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stavalues1', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database_conflicts', 'confl_lock', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_publication', 'pubname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'applicable_roles', 'role_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_foreign_server', 'srvoptions', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'character_set_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'attnum', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'collations', 'collation_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'contype', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_rewrite', 'is_instead', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stats', 'histogram_bounds', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_user_mappings', 'srvid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relacl', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_init_privs', 'privtype', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_cursors', 'creation_time', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'udt_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'proisstrict', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'udt_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_largeobject_metadata', 'lomacl', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_roles', 'rolpassword', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_sys_tables', 'relid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'foreign_tables', 'foreign_server_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typdefaultbin', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_gssapi', 'pid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'check_constraints', 'check_clause', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'triggered_update_columns', 'trigger_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_udt_grants', 'privilege_type', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_authid', 'rolbypassrls', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shadow', 'usecreatedb', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_activity', 'state', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'applicable_roles', 'is_grantable', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_cast', 'castmethod', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'n_tup_del', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_create_index', 'datid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'attrelid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_activity', 'client_addr', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shmem_allocations', 'allocated_size', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_slru', 'blks_read', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_settings', 'sourcefile', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'idx_scan', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routine_privileges', 'grantor', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_archiver', 'last_failed_time', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'domain_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'views', 'is_trigger_insertable_into', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_slru', 'truncates', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_mapping_options', 'option_value', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typinput', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_indexes', 'relname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_prepared_xacts', 'gid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_char_max_length', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_roles', 'rolconfig', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'table_privileges', 'table_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'sql_sizing', 'sizing_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'tables', 'user_defined_type_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_am', 'amname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'collations', 'pad_attribute', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'ordinal_position', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_usage_grants', 'object_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_amop', 'amopopr', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_create_index', 'phase', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_seclabels', 'provider', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_settings', 'unit', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_opclass', 'opcfamily', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'collation_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'attisdropped', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_index', 'indimmediate', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_operator', 'oprcanhash', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'scope_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_amop', 'amoprighttype', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'n_tup_ins', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_user_functions', 'total_time', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relhastriggers', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typndims', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'conindid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_roles', 'rolname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'prolang', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_slru', 'name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'identity_cycle', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'atttypid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_replication', 'backend_xmin', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_usage_grants', 'privilege_type', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_seclabel', 'objsubid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'staop5', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_tables', 'idx_blks_read', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'view_column_usage', 'view_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_seclabel', 'classoid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_amproc', 'amprocfamily', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_policies', 'permissive', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_subscription', 'subpublications', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggdeserialfn', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'relid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_subscription', 'last_msg_receipt_time', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_indexes', 'idx_tup_fetch', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_locks', 'classid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_foreign_server', 'srvname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_collation', 'collencoding', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_config_map', 'mapcfg', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routines', 'result_cast_char_set_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_user_tables', 'seq_tup_read', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_user', 'useconfig', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'scope_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'vacuum_count', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_opclass', 'oid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_amproc', 'oid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_servers', 'srvoptions', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stats_ext', 'kinds', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_data_wrapper_options', 'foreign_data_wrapper_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typbasetype', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_views', 'definition', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_subscription', 'subpublications', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relhastriggers', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_tables', 'toast_blks_read', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_event_trigger', 'evttags', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_collation', 'collowner', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_file_settings', 'applied', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'constraint_table_usage', 'constraint_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_tables', 'relid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_column_grants', 'grantor', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_sequences', 'blks_read', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'scope_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typowner', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'table_constraints', 'constraint_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'proname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_tables', 'hasindexes', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_tables', 'heap_blks_hit', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'datetime_precision', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'conparentid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_database', 'datacl', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_transform', 'trflang', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'prosecdef', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_replication', 'write_lag', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'parameters', 'numeric_precision', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'transforms', 'specific_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_tables', 'relname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_type_udt_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_replication_slots', 'active_pid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'identity_cycle', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_type_udt_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'user_defined_types', 'reference_type', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_tables', 'tablespace', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_seclabels', 'objname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typinput', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'security_type', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_indexes', 'idx_tup_read', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'numeric_precision', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_prepared_statements', 'statement', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'character_maximum_length', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_scope_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_indexes', 'indexrelname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'vacuum_count', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'attlen', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_replication', 'backend_xmin', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sql_parts', 'feature_id', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_config_map', 'maptokentype', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_publication_rel', 'prrelid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_statio_user_sequences', 'relid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_database', 'datconnlimit', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_database_conflicts', 'datname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stanullfrac', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'is_implicitly_invocable', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'character_set_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'prosupport', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'routine_type', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_locks', 'mode', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'view_table_usage', 'table_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'collation_character_set_applicability', 'character_set_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_rewrite', 'rulename', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_config', 'cfgparser', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_subscription', 'subowner', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_cursors', 'is_holdable', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'referential_constraints', 'unique_constraint_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stainherit', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'columns', 'table_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_wal_receiver', 'latest_end_lsn', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_publication', 'pubowner', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_tables', 'foreign_table_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_user_mappings', 'foreign_server_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sequences', 'numeric_precision', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_progress_cluster', 'cluster_index_relid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shadow', 'usebypassrls', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_language', 'lanvalidator', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'idx_tup_fetch', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'vacuum_count', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_xact_sys_tables', 'relname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_prepared_statements', 'from_sql', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_proc', 'proacl', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'table_constraints', 'constraint_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'proargmodes', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'udt_privileges', 'udt_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_wal_receiver', 'receive_start_tli', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stakind1', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_cluster', 'heap_tuples_scanned', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'view_table_usage', 'view_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggtransfn', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database_conflicts', 'datname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_subscription', 'latest_end_time', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_proc', 'proowner', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_class', 'relowner', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'data_type_privileges', 'object_type', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'is_final', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_create_index', 'command', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'datetime_precision', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_create_index', 'pid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stacoll2', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_cluster', 'heap_tuples_written', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_rewrite', 'is_instead', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_language', 'lanpltrusted', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_foreign_table', 'ftrelid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'n_live_tup', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'reltype', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stats_ext', 'schemaname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_replication', 'sync_state', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_archiver', 'last_archived_time', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'udt_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sql_implementation_info', 'comments', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_inherits', 'inhrelid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_publication', 'pubviaroot', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'triggers', 'event_object_table', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_seclabels', 'objsubid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routines', 'numeric_precision_radix', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_hba_file_rules', 'error', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_subscription', 'pid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_column_usage', 'table_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_matviews', 'matviewowner', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'last_autoanalyze', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggfnoid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_prepared_xacts', 'transaction', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_operator', 'oprresult', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'n_tup_upd', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_trigger', 'tgconstrrelid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_create_index', 'lockers_done', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'dtd_identifier', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database', 'temp_files', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_indexes', 'indexrelname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_ssl', 'cipher', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'procost', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_group', 'grosysid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_usage_grants', 'grantor', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'proargnames', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_options', 'column_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'transforms', 'udt_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_user', 'useconfig', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_indexes', 'idx_tup_fetch', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_user', 'passwd', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_progress_create_index', 'lockers_total', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_sequence', 'seqrelid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'view_routine_usage', 'specific_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_publication', 'pubupdate', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_replication_slots', 'database', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'character_sets', 'default_collate_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_rewrite', 'oid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'procost', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typndims', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats', 'most_common_freqs', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'udt_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_opclass', 'opcintype', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'sequences', 'data_type', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'schemata', 'sql_path', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_available_extension_versions', 'trusted', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'attribute_default', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_statio_user_tables', 'toast_blks_read', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_index', 'indoption', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shadow', 'usename', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'triggers', 'action_timing', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggered_update_columns', 'event_object_table', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_group', 'grosysid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shadow', 'valuntil', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'confdeltype', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_servers', 'srvoptions', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'relname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database', 'deadlocks', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_depend', 'objid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_subscription', 'subslotname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_tables', 'foreign_table_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_authid', 'rolname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_udt_usage', 'udt_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'user_defined_types', 'source_dtd_identifier', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_extension', 'extname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_tables', 'foreign_server_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'numeric_precision', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shadow', 'usesuper', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'interval_type', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'constraint_column_usage', 'table_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_trigger', 'tgconstrindid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_amproc', 'oid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_create_index', 'tuples_done', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_tables', 'foreign_table_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_user_mappings', 'umoptions', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_subscription', 'last_msg_send_time', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_options', 'table_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_index', 'indisprimary', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'character_set_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_namespace', 'nspowner', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_amop', 'amopfamily', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_trigger', 'tgfoid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'prorettype', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stanumbers2', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'check_constraint_routine_usage', 'specific_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'tables', 'self_referencing_column_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_user', 'passwd', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_wal_receiver', 'latest_end_lsn', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'element_types', 'numeric_precision', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_tables', 'hasrules', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'datetime_precision', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routine_privileges', 'is_grantable', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'collation_character_set_applicability', 'character_set_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_interval_precision', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_analyze', 'child_tables_done', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'convalidated', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_table_columns', 'attname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_db_role_setting', 'setdatabase', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'sql_data_access', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_tables', 'rowsecurity', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database', 'blk_write_time', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domain_udt_usage', 'udt_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_cluster', 'command', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'udt_privileges', 'privilege_type', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_sequences', 'relid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_am', 'amname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_opclass', 'opcname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_amproc', 'amprocnum', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'n_tup_upd', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_progress_basebackup', 'backup_total', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_user_mappings', 'srvowner', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_rewrite', 'ev_qual', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_settings', 'name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'table_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_range', 'rngsubdiff', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_domain_usage', 'domain_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_settings', 'pending_restart', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'seq_tup_read', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_template', 'tmpllexize', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_indexes', 'indexdef', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'transforms', 'udt_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_type', 'typelem', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_prepared_xacts', 'prepared', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'user_defined_types', 'character_set_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_type', 'typbasetype', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'proparallel', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database', 'checksum_failures', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_policies', 'with_check', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_settings', 'pending_restart', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'is_user_defined_cast', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'parameters', 'specific_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'collation_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_depend', 'refobjsubid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_activity', 'wait_event_type', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_template', 'tmplname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'proargtypes', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_wal_receiver', 'receive_start_tli', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'dtd_identifier', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'autovacuum_count', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_file_settings', 'sourcefile', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'domain_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_description', 'objsubid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_indexes', 'schemaname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_progress_create_index', 'datid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'domain_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_roles', 'rolcreatedb', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_user_functions', 'funcname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'source_dtd_identifier', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'view_column_usage', 'column_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'last_autovacuum', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'idx_tup_fetch', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'element_types', 'character_set_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'parameters', 'maximum_cardinality', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_user_mappings', 'foreign_server_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_available_extensions', 'installed_version', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_trigger', 'tgconstrindid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_xact_sys_tables', 'relid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_settings', 'name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggers', 'trigger_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'is_result', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'n_dead_tup', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stats_ext', 'most_common_base_freqs', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'atttypid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_basebackup', 'tablespaces_total', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'schemaname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'domain_default', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_statistic_ext', 'stxname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database', 'tup_deleted', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_roles', 'rolconfig', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_available_extensions', 'comment', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_replication_slots', 'active', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggers', 'event_object_table', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_dict', 'dictname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'conislocal', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_column_grants', 'grantee', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_user_mappings', 'usename', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domain_udt_usage', 'domain_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_largeobject', 'loid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_ssl', 'client_serial', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_cluster', 'phase', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'column_privileges', 'is_grantable', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relnatts', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'collation_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'is_self_referencing', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_trigger', 'tgtype', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_activity', 'application_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'scope_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'table_constraints', 'table_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'character_set_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_template', 'tmplnamespace', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_settings', 'enumvals', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'sequences', 'sequence_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_servers', 'foreign_data_wrapper_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_publication', 'pubviaroot', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'interval_precision', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'key_column_usage', 'constraint_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_publication', 'oid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'foreign_data_wrapper_options', 'option_value', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database', 'xact_rollback', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'datetime_precision', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_available_extension_versions', 'trusted', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_bgwriter', 'buffers_clean', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'table_constraints', 'constraint_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domain_constraints', 'constraint_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_analyze', 'datname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_xact_user_functions', 'self_time', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_user', 'usesuper', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typanalyze', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_rules', 'definition', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relhastriggers', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_create_index', 'phase', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_subscription', 'subconninfo', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggered_update_columns', 'event_object_column', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_column_usage', 'table_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'scope_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_table_columns', 'relname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_trigger', 'tgconstraint', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relnamespace', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'attributes', 'attribute_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'scope_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_event_trigger', 'evtfoid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_servers', 'foreign_data_wrapper_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_replication', 'backend_start', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'idx_tup_fetch', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_rewrite', 'ev_type', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_enum', 'enumlabel', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_partitioned_table', 'partstrat', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_cast', 'castmethod', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_activity', 'backend_xid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_tables', 'foreign_table_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'character_maximum_length', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_activity', 'xact_start', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_replication', 'flush_lsn', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_class', 'relreplident', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_config_map', 'mapdict', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'user_defined_types', 'collation_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_proc', 'probin', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'reltablespace', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'last_autoanalyze', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic_ext_data', 'stxoid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_locks', 'relation', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routine_privileges', 'privilege_type', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'usage_privileges', 'grantor', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_config_map', 'mapseqno', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_extension', 'extversion', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'protrftypes', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_index', 'indexprs', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sequences', 'maximum_value', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_prepared_statements', 'name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_activity', 'backend_start', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_attribute', 'attinhcount', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'last_autoanalyze', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_settings', 'sourcefile', 'UPDATE', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_replication_slots', 'confirmed_flush_lsn', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_group', 'grolist', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_routine_grants', 'grantor', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'domain_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_authid', 'rolname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'confmatchtype', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_user_tables', 'n_tup_upd', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_sequences', 'relid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_mapping_options', 'authorization_identifier', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggfinalmodify', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routine_privileges', 'routine_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'domains', 'udt_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'maximum_cardinality', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'oid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'schemata', 'schema_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_index', 'indisreplident', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_operator', 'oprnegate', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'analyze_count', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_ssl', 'client_dn', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'confupdtype', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'domains', 'scope_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'collation_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_user_mappings', 'usename', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'columns', 'collation_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_trigger', 'tgoldtable', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_from_data_type', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_operator', 'oprjoin', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_indexes', 'idx_blks_hit', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'transforms', 'transform_type', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_settings', 'enumvals', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_description', 'objsubid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'seq_scan', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_language', 'laninline', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_statio_sys_tables', 'idx_blks_hit', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_servers', 'foreign_server_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_replication', 'client_hostname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sequences', 'sequence_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stanullfrac', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routines', 'result_cast_scope_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_privileges', 'is_grantable', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_ts_parser', 'prsname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_enum', 'enumsortorder', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_user_mappings', 'umid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_subscription', 'oid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_tables', 'tidx_blks_hit', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'character_sets', 'form_of_use', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_activity', 'application_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_wal_receiver', 'status', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'dtd_identifier', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'collation_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_collation', 'collowner', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_tables', 'idx_blks_hit', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'character_set_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'character_sets', 'character_set_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_language', 'lanvalidator', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'character_set_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_timezone_abbrevs', 'is_dst', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'specific_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'condeferred', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_locks', 'mode', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_statio_all_tables', 'heap_blks_read', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'proargtypes', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_vacuum', 'heap_blks_total', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'ordinal_position', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database', 'conflicts', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'collation_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_settings', 'short_desc', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_indexes', 'idx_scan', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_domain_usage', 'table_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'foreign_servers', 'foreign_server_version', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'n_tup_ins', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'reference_type', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_indexes', 'idx_blks_read', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'constraint_column_usage', 'constraint_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_default_acl', 'defaclrole', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_largeobject', 'data', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_constraint', 'confkey', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database_conflicts', 'datid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'constraint_table_usage', 'table_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_data_wrappers', 'foreign_data_wrapper_language', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_description', 'objoid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggtransfn', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'views', 'is_trigger_deletable', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_xact_sys_tables', 'idx_tup_fetch', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domain_constraints', 'initially_deferred', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_collation', 'collprovider', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_parser', 'prsname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_prepared_statements', 'statement', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_settings', 'extra_desc', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_opclass', 'opckeytype', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routine_privileges', 'is_grantable', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_authid', 'oid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_seclabels', 'objsubid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats', 'null_frac', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'table_privileges', 'is_grantable', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_roles', 'rolconnlimit', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'reltablespace', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'conkey', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_seclabels', 'classoid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'n_ins_since_vacuum', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'character_maximum_length', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'conkey', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_user_indexes', 'idx_tup_fetch', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_replication_slots', 'datoid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'created', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_settings', 'source', 'UPDATE', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shmem_allocations', 'off', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'ordering_routine_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'foreign_servers', 'foreign_server_type', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_sys_tables', 'idx_scan', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'is_udt_dependent', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_subscription_rel', 'srsublsn', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_prepared_statements', 'parameter_types', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_class', 'relallvisible', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'character_octet_length', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sql_features', 'is_supported', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_rewrite', 'rulename', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_rewrite', 'ev_type', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_parser', 'prstoken', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_extension', 'extnamespace', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_create_index', 'lockers_done', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_attribute', 'attgenerated', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_tables', 'relname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'schemaname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_range', 'rngsubdiff', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'views', 'is_trigger_updatable', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_database', 'datallowconn', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'domain_udt_usage', 'domain_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_type', 'typmodin', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_event_trigger', 'evtevent', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'user_defined_type_category', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggered_update_columns', 'trigger_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_bgwriter', 'checkpoint_sync_time', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_sequences', 'relid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_available_extension_versions', 'trusted', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'columns', 'character_octet_length', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_database', 'datctype', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stacoll5', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'column_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_settings', 'min_val', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_replication_slots', 'xmin', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'check_constraints', 'constraint_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relisshared', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database', 'checksum_last_failure', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_servers', 'foreign_server_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_user_mappings', 'umoptions', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_rules', 'definition', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_subscription', 'subpublications', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'view_table_usage', 'table_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_opclass', 'opcdefault', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggmfinalmodify', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_database', 'datname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'character_set_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_locks', 'virtualxid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats_ext', 'most_common_base_freqs', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_roles', 'rolinherit', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_replication_slots', 'datoid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_indexes', 'schemaname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'columns', 'scope_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relrowsecurity', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sequences', 'maximum_value', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_description', 'description', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_statio_sys_tables', 'idx_blks_read', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'identity_maximum', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'last_autovacuum', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'proconfig', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggminitval', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_statio_sys_indexes', 'schemaname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_user_tables', 'n_tup_del', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_constraint', 'coninhcount', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_rewrite', 'ev_qual', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shdescription', 'description', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_tables', 'heap_blks_hit', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_options', 'table_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_column_grants', 'table_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_wal_receiver', 'sender_port', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'character_sets', 'default_collate_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'idx_tup_fetch', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'character_maximum_length', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_mapping_options', 'foreign_server_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typacl', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_database', 'datistemplate', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_operator', 'oprname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'scope_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_roles', 'rolconfig', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_init_privs', 'privtype', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'domain_default', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_partitioned_table', 'partcollation', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relhastriggers', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_replication', 'flush_lsn', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_default_acl', 'defaclacl', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_domain_usage', 'domain_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_indexes', 'idx_scan', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'usage_privileges', 'grantor', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_database', 'oid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_udt_grants', 'udt_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sql_implementation_info', 'implementation_info_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_sequences', 'increment_by', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_all_tables', 'n_tup_upd', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_wal_receiver', 'latest_end_time', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relpersistence', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_activity', 'datname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relpages', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_policy', 'polname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_replication', 'sync_state', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_interval_precision', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_trigger', 'tgname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'constraint_column_usage', 'column_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database', 'datid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_seclabels', 'objoid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_all_tables', 'seq_scan', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_user_mappings', 'umuser', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_indexes', 'indexrelname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'collation_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_policies', 'cmd', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_trigger', 'tgconstraint', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'attributes', 'attribute_udt_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_enum', 'enumsortorder', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'key_column_usage', 'position_in_unique_constraint', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_tablespace', 'spcacl', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_hba_file_rules', 'database', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'is_identity', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sql_sizing', 'sizing_id', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'data_type_privileges', 'dtd_identifier', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_index', 'indnatts', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_trigger', 'tgenabled', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_replication', 'state', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'confmatchtype', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_database', 'checksum_last_failure', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'character_sets', 'default_collate_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_index', 'indkey', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_trigger', 'tgnargs', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_collation_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'attributes', 'is_derived_reference_attribute', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relispartition', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_trigger', 'tgrelid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_replication', 'flush_lsn', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relnamespace', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_tables', 'heap_blks_read', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'n_dead_tup', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'specific_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggered_update_columns', 'trigger_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_tables', 'idx_blks_hit', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_template', 'tmplnamespace', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_all_tables', 'relname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_extension', 'extowner', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'interval_precision', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_operator', 'oprcanhash', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_sequences', 'relname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_subscription', 'subenabled', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'character_sets', 'default_collate_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_tablespace', 'spcowner', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'type_udt_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_sequences', 'cycle', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_tables', 'toast_blks_hit', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_create_index', 'command', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'key_column_usage', 'constraint_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic_ext', 'stxrelid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_publication', 'pubowner', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'scope_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'proargmodes', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_opclass', 'opcnamespace', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_udt_usage', 'table_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'columns', 'column_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_cluster', 'pid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'ordinal_position', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'character_sets', 'character_repertoire', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'check_constraint_routine_usage', 'specific_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_activity', 'backend_type', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggered_update_columns', 'trigger_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'oid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_operator', 'oprleft', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_foreign_server', 'srvoptions', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'ordinal_position', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domain_constraints', 'constraint_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'numeric_precision_radix', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'element_types', 'collation_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'key_column_usage', 'table_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats', 'tablename', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_indexes', 'idx_blks_hit', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sql_sizing', 'supported_value', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database', 'checksum_last_failure', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_slru', 'name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_servers', 'foreign_server_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_publication', 'pubupdate', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_sequences', 'relid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'sql_data_access', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'tables', 'commit_action', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'n_live_tup', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_constraint', 'conexclop', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'ordering_routine_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_replication_slots', 'restart_lsn', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'sql_implementation_info', 'comments', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_class', 'relpersistence', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_tablespace', 'spcoptions', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_bgwriter', 'checkpoints_req', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_table_columns', 'relname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_activity', 'usename', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_all_tables', 'n_tup_upd', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_replication', 'replay_lag', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'staop1', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'numeric_precision', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_constraint', 'conparentid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'constraint_column_usage', 'constraint_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_collation', 'collversion', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'last_autoanalyze', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_tables', 'foreign_table_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_available_extension_versions', 'trusted', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_mappings', 'foreign_server_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'proparallel', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_matviews', 'tablespace', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sql_implementation_info', 'comments', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_user', 'usecreatedb', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'views', 'table_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'vacuum_count', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'character_maximum_length', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'numeric_precision_radix', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stacoll2', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_foreign_server', 'srvoptions', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_proc', 'proargnames', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_activity', 'backend_xid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'column_udt_usage', 'udt_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_replication', 'write_lsn', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_replication', 'backend_xmin', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typreceive', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'attributes', 'udt_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_type', 'typdelim', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database', 'blk_write_time', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'attribute_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_tables', 'toast_blks_read', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_settings', 'category', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'character_sets', 'default_collate_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_partitioned_table', 'partcollation', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_roles', 'rolcanlogin', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_foreign_server', 'srvacl', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_settings', 'source', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_statio_sys_indexes', 'idx_blks_read', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_prepared_xacts', 'prepared', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attrdef', 'adbin', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'idx_scan', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_opclass', 'opcnamespace', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats', 'inherited', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shdepend', 'deptype', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_sys_tables', 'schemaname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_functions', 'self_time', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'scope_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'scope_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database', 'tup_inserted', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_trigger', 'tgargs', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'character_set_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_matviews', 'matviewname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_operator', 'oid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'views', 'is_insertable_into', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_mapping_options', 'foreign_server_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_shdepend', 'refobjid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggfinalextra', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_udt_usage', 'table_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routines', 'character_octet_length', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'provolatile', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_dict', 'dictnamespace', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'collation_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'seq_tup_read', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'relid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'data_type', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_replication_slots', 'wal_status', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'maximum_cardinality', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_activity', 'leader_pid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'security_type', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_udt_grants', 'udt_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'usage_privileges', 'object_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shdepend', 'classid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'dtd_identifier', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'view_routine_usage', 'table_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'specific_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'sequences', 'start_value', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_udt_grants', 'udt_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'attrelid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_tables', 'hasindexes', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'schemata', 'catalog_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_dtd_identifier', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'domains', 'collation_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'parameters', 'udt_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic_ext_data', 'stxdndistinct', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'confkey', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_transform', 'trffromsql', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'contype', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database', 'blks_read', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_index', 'indisreplident', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_seclabel', 'provider', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_settings', 'name', 'UPDATE', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_char_max_length', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'columns', 'dtd_identifier', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typdefault', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'character_set_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_activity', 'backend_xmin', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_authid', 'rolconnlimit', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'udt_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_activity', 'xact_start', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_rewrite', 'ev_class', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'sequences', 'numeric_scale', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'numeric_precision', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_publication_rel', 'prrelid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_archiver', 'last_archived_wal', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'module_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_indexes', 'schemaname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_ssl', 'bits', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typmodin', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_char_set_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_database', 'encoding', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_udt_usage', 'table_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_cluster', 'heap_blks_scanned', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_sequence', 'seqrelid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_available_extension_versions', 'name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'column_domain_usage', 'domain_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_indexes', 'idx_scan', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database_conflicts', 'confl_deadlock', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'views', 'is_insertable_into', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'specific_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_replication', 'replay_lag', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'n_tup_upd', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'numeric_precision_radix', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_default_acl', 'oid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_indexes', 'tablespace', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relfilenode', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_subscription_rel', 'srsubstate', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_slru', 'blks_written', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'attributes', 'collation_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'constraint_column_usage', 'table_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'domain_constraints', 'initially_deferred', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_attribute', 'attfdwoptions', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_event_trigger', 'oid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_seclabels', 'objoid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_opclass', 'opcintype', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'seq_scan', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routines', 'dtd_identifier', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_authid', 'rolcanlogin', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_file_settings', 'applied', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_collation', 'collisdeterministic', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'check_constraints', 'check_clause', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_amop', 'amoprighttype', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_attribute', 'attmissingval', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_description', 'objoid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_replication_slots', 'slot_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'user_defined_types', 'character_set_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_routine_grants', 'routine_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'element_types', 'numeric_scale', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_inherits', 'inhseqno', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_udt_usage', 'udt_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_class', 'relpages', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_extension', 'extversion', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_db_role_setting', 'setconfig', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'domains', 'udt_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'conbin', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_wal_receiver', 'last_msg_send_time', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_privileges', 'column_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_policy', 'polpermissive', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'scope_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'scope_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routines', 'result_cast_numeric_precision', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_extension', 'extrelocatable', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'maximum_cardinality', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'character_set_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'identity_minimum', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'confkey', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_settings', 'vartype', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_subscription', 'subid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database', 'blk_write_time', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'domain_default', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'scope_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'last_analyze', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_operator', 'oprkind', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'collation_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_basebackup', 'pid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'view_table_usage', 'view_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database', 'xact_commit', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'schemata', 'schema_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_statistic_ext', 'stxkind', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_prepared_statements', 'name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_group', 'grolist', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_char_max_length', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_analyze', 'current_child_table_relid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_replication', 'sent_lsn', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_all_tables', 'n_tup_hot_upd', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'attacl', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_archiver', 'last_archived_time', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'type_udt_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_config', 'oid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_sys_indexes', 'idx_tup_fetch', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_subscription', 'subslotname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_statio_all_sequences', 'relid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_matviews', 'definition', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_sequence', 'seqtypid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'usage_privileges', 'object_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'character_sets', 'default_collate_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_foreign_server', 'srvname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typdelim', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats_ext', 'statistics_owner', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_archiver', 'last_archived_time', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_udt_grants', 'grantee', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'numeric_precision', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_foreign_server', 'srvname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_settings', 'vartype', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_inherits', 'inhseqno', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_operator', 'oprcanmerge', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'attribute_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'numeric_precision', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'tables', 'self_referencing_column_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'prosrc', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'collation_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_db_role_setting', 'setconfig', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_extension', 'extowner', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_amop', 'amopsortfamily', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'identity_generation', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'table_privileges', 'table_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'role_udt_grants', 'udt_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_indexes', 'idx_blks_read', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'scope_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_data_wrappers', 'fdwowner', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_parser', 'prsend', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routines', 'last_altered', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_statio_user_indexes', 'indexrelname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_udt_usage', 'udt_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_foreign_data_wrapper', 'fdwname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'collation_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_cast', 'casttarget', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domain_constraints', 'constraint_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_routine_grants', 'specific_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'character_sets', 'character_set_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'last_vacuum', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_policy', 'polname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'columns', 'identity_start', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'idx_tup_fetch', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_replication', 'write_lsn', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'role_column_grants', 'is_grantable', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routines', 'result_cast_char_set_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'n_mod_since_analyze', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_opclass', 'opcowner', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typarray', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_replication', 'application_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stanumbers3', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'check_constraint_routine_usage', 'specific_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_slru', 'stats_reset', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'attidentity', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stanumbers4', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_index', 'indcollation', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggered_update_columns', 'trigger_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relrewrite', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'autovacuum_count', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_language', 'lanname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_replication_slots', 'safe_wal_size', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_inherits', 'inhparent', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_authid', 'rolpassword', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_analyze', 'datid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sql_features', 'feature_id', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_table_grants', 'table_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggmfinalextra', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'to_sql_specific_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_indexes', 'schemaname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'procost', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_indexes', 'indexname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_replication', 'usesysid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_domain_usage', 'table_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_prepared_statements', 'from_sql', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_functions', 'calls', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_sequences', 'blks_hit', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_tablespace', 'oid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats', 'avg_width', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'attribute_udt_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'schemata', 'default_character_set_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_subscription_rel', 'srrelid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_progress_create_index', 'tuples_total', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_tables', 'tablespace', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_slru', 'blks_hit', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'collations', 'collation_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats_ext', 'n_distinct', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'numeric_precision_radix', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_tables', 'relid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_subscription', 'last_msg_send_time', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_parser', 'prsname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_vacuum', 'phase', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_indexes', 'relname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_database', 'encoding', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_foreign_data_wrapper', 'fdwoptions', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'administrable_role_authorizations', 'role_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_roles', 'rolcreaterole', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_indexes', 'relid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'view_table_usage', 'table_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_range', 'rngtypid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_prepared_xacts', 'transaction', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_shseclabel', 'objoid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'is_udt_dependent', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_char_set_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_range', 'rngsubtype', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'specific_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_indexes', 'indexrelid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_gssapi', 'encrypted', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_tables', 'foreign_table_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_collation', 'collprovider', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_create_index', 'current_locker_pid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_indexes', 'relname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_prepared_xacts', 'gid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_sequences', 'increment_by', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'collation_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sql_parts', 'is_verified_by', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'numeric_precision_radix', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats', 'inherited', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats_ext', 'kinds', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_index', 'indisready', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_rewrite', 'ev_type', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'character_set_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'object_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_servers', 'foreign_server_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_depend', 'classid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_analyze', 'child_tables_done', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'reltablespace', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_amop', 'amoppurpose', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_settings', 'max_val', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'usage_privileges', 'grantor', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'object_type', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic_ext', 'stxnamespace', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_create_index', 'blocks_total', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_user_functions', 'funcid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_tables', 'foreign_table_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'object_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_user', 'usename', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_activity', 'usesysid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'views', 'table_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typinput', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_index', 'indoption', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'prolang', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_amop', 'amopsortfamily', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_amproc', 'amproc', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_type', 'oid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_table_grants', 'table_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_trigger', 'tgattr', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_progress_create_index', 'current_locker_pid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_class', 'relhastriggers', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_tablespace', 'spcacl', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'is_null_call', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_data_wrappers', 'foreign_data_wrapper_language', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_wal_receiver', 'latest_end_time', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_timezone_abbrevs', 'abbrev', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'information_schema_catalog_name', 'catalog_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_parser', 'prsstart', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_subscription', 'subname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'confmatchtype', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_tables', 'authorization_identifier', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_collation', 'collcollate', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'routine_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_mapping_options', 'option_value', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routine_privileges', 'routine_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_wal_receiver', 'flushed_lsn', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_publication_tables', 'pubname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_rewrite', 'ev_action', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_hba_file_rules', 'options', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'character_sets', 'default_collate_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_roles', 'rolcanlogin', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_mappings', 'foreign_server_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_activity', 'pid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_column_usage', 'column_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats_ext', 'most_common_val_nulls', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_tablespace', 'oid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'data_type_privileges', 'object_type', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_available_extension_versions', 'comment', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stakind5', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routine_privileges', 'privilege_type', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggered_update_columns', 'event_object_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'tables', 'table_type', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_authid', 'oid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_range', 'rngcanonical', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database', 'blk_read_time', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_matviews', 'ispopulated', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'udt_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'relid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shdescription', 'classoid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_statio_sys_tables', 'tidx_blks_read', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'domains', 'numeric_precision', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_user', 'usecreatedb', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_policies', 'qual', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_table_grants', 'table_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'interval_type', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_statio_all_tables', 'idx_blks_read', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'to_sql_specific_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database', 'tup_updated', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_routine_grants', 'routine_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggdeserialfn', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_range', 'rngcollation', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'collation_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_statio_all_indexes', 'relid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'prolang', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggmtranstype', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_enum', 'enumsortorder', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sequences', 'numeric_scale', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_database', 'datcollate', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_all_tables', 'n_tup_hot_upd', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_user_mappings', 'usename', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'provariadic', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'udt_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typnotnull', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats_ext', 'attnames', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'vacuum_count', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_database_conflicts', 'confl_snapshot', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_replication', 'flush_lsn', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_gssapi', 'gss_authenticated', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggmfinalfn', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_db_role_setting', 'setrole', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_xact_sys_tables', 'schemaname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_data_wrapper_options', 'option_value', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'usage_privileges', 'object_type', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_tables', 'foreign_table_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_event_trigger', 'evtenabled', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relfrozenxid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_sys_tables', 'idx_tup_fetch', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_sequences', 'blks_read', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_user_functions', 'calls', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_config', 'oid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'tables', 'table_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_locks', 'virtualtransaction', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_indexes', 'idx_blks_read', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'collation_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'conname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'maximum_cardinality', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_user_mappings', 'authorization_identifier', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typnamespace', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_db_role_setting', 'setrole', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats_ext', 'attnames', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_indexes', 'indexrelid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_publication', 'pubtruncate', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'character_set_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_trigger', 'tgisinternal', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_user_tables', 'schemaname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_authid', 'rolreplication', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_dtd_identifier', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'views', 'is_updatable', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_bgwriter', 'buffers_checkpoint', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_vacuum', 'datid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_language', 'oid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_sequence', 'seqstart', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'numeric_precision_radix', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_table_options', 'option_value', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'table_constraints', 'constraint_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'udt_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_available_extension_versions', 'schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'columns', 'domain_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats', 'schemaname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_replication_slots', 'catalog_xmin', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'table_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'conpfeqop', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_settings', 'extra_desc', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'n_dead_tup', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_type', 'typname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'autovacuum_count', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'columns', 'table_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sql_implementation_info', 'comments', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_indexes', 'idx_tup_read', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_constraint', 'connoinherit', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sql_implementation_info', 'implementation_info_id', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_authid', 'rolinherit', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_ts_dict', 'dictnamespace', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'dtd_identifier', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_namespace', 'oid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_replication_origin_status', 'external_id', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_locks', 'classid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'module_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_type_udt_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggnumdirectargs', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_table_grants', 'table_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'coninhcount', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'udt_privileges', 'udt_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_locks', 'page', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_indexes', 'relid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'autovacuum_count', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_tables', 'foreign_server_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_tables', 'rowsecurity', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_event_trigger', 'evtfoid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_proc', 'proisstrict', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routines', 'result_cast_collation_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_seclabels', 'objnamespace', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_options', 'table_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_database', 'temp_bytes', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'tables', 'table_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'numeric_precision', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database', 'blk_read_time', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_sequences', 'blks_hit', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_dict', 'dictnamespace', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_publication', 'puballtables', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_matviews', 'matviewowner', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_slru', 'blks_zeroed', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_mapping_options', 'option_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_hba_file_rules', 'netmask', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_policies', 'policyname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'key_column_usage', 'ordinal_position', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_language', 'lanplcallfoid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stakind4', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_range', 'rngsubopc', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_tables', 'schemaname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'schemata', 'catalog_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'atttypmod', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_indexes', 'indexrelname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_index', 'indexprs', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'check_constraint_routine_usage', 'specific_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_wal_receiver', 'conninfo', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_analyze', 'datname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_user', 'usename', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_bgwriter', 'stats_reset', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_partitioned_table', 'partattrs', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'check_constraint_routine_usage', 'constraint_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'is_generated', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_table_options', 'foreign_table_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'last_analyze', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'last_autovacuum', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'applicable_roles', 'grantee', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shmem_allocations', 'allocated_size', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'data_type', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'is_self_referencing', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'tables', 'user_defined_type_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'conparentid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_authid', 'rolinherit', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_settings', 'unit', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_hba_file_rules', 'line_number', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_publication', 'pubupdate', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_replication_slots', 'catalog_xmin', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_proc', 'provolatile', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_amop', 'oid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_ssl', 'pid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'conislocal', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_enum', 'enumsortorder', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggfinalfn', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_indexes', 'idx_blks_hit', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'collation_character_set_applicability', 'character_set_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_rules', 'schemaname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_locks', 'page', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'character_set_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shdescription', 'description', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'character_maximum_length', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_operator', 'oprcom', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_init_privs', 'objoid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_data_wrappers', 'foreign_data_wrapper_language', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats', 'most_common_elems', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_trigger', 'tgnargs', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_replication_slots', 'temporary', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'is_instantiable', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'n_tup_del', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_authid', 'rolreplication', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_all_indexes', 'indexrelid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_partitioned_table', 'partclass', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_index', 'indisexclusion', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_settings', 'boot_val', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sql_features', 'feature_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_publication_rel', 'prrelid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'domains', 'character_set_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'collation_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_replication_slots', 'restart_lsn', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_replication_slots', 'wal_status', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_policy', 'polwithcheck', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_wal_receiver', 'written_lsn', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_language', 'lanacl', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shadow', 'usesysid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_views', 'viewname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_progress_analyze', 'ext_stats_total', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'character_set_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_udt_grants', 'udt_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats_ext', 'tablename', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'relname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_index', 'indkey', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stavalues5', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_cast', 'casttarget', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_routine_grants', 'routine_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggers', 'action_condition', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typreceive', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_parser', 'prsnamespace', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_sequence', 'seqincrement', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_am', 'amtype', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stats', 'most_common_elems', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_ssl', 'issuer_dn', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_usage_grants', 'object_type', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats', 'histogram_bounds', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'identity_maximum', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_sequences', 'schemaname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_trigger', 'tgenabled', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'n_live_tup', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'schemata', 'default_character_set_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_collation', 'collowner', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_user_tables', 'n_tup_upd', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_create_index', 'partitions_done', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_user_functions', 'calls', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'collation_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_indexes', 'relid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'ordering_routine_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'is_updatable', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_privileges', 'privilege_type', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'udt_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'key_column_usage', 'table_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'schemata', 'catalog_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_ts_parser', 'prstoken', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_foreign_server', 'srvoptions', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_activity', 'state', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'views', 'table_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'view_routine_usage', 'table_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_cluster', 'heap_tuples_scanned', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'ordinal_position', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'atthasdef', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'numeric_scale', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_tables', 'foreign_server_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_database', 'datfrozenxid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'n_mod_since_analyze', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'is_null_call', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_all_tables', 'n_tup_del', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'constraint_column_usage', 'table_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_bgwriter', 'stats_reset', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggkind', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_tables', 'foreign_server_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'view_column_usage', 'table_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shdepend', 'deptype', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relispartition', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_rules', 'rulename', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_wal_receiver', 'receive_start_lsn', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'collation_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_data_wrappers', 'authorization_identifier', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domain_constraints', 'domain_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'staop5', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_matviews', 'tablespace', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_enum', 'enumtypid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'domain_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'interval_precision', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'table_constraints', 'table_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_server_options', 'option_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_opclass', 'opcdefault', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'character_set_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_archiver', 'archived_count', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_database', 'datcollate', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_replication', 'write_lsn', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_indexes', 'indexrelid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_user_mappings', 'umoptions', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_replication', 'client_hostname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_all_tables', 'idx_scan', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'collations', 'pad_attribute', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routines', 'is_implicitly_invocable', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_datetime_precision', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typowner', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_progress_create_index', 'relid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic_ext', 'stxkind', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'attoptions', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_policy', 'oid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_tables', 'tablename', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_indexes', 'relname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'proleakproof', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database', 'conflicts', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_trigger', 'tgoldtable', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_policies', 'qual', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sql_features', 'is_verified_by', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'triggers', 'action_reference_old_row', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'n_tup_hot_upd', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'interval_type', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_user_functions', 'funcname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_create_index', 'blocks_done', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'usage_privileges', 'grantor', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_sys_indexes', 'relid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_table_columns', 'attfdwoptions', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_data_wrappers', 'foreign_data_wrapper_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routines', 'result_cast_type_udt_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'datetime_precision', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'column_domain_usage', 'table_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_indexes', 'relid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_authid', 'rolcreatedb', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shseclabel', 'objoid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'view_table_usage', 'view_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'column_domain_usage', 'domain_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_statio_all_sequences', 'blks_hit', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_indexes', 'idx_tup_fetch', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'key_column_usage', 'table_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'attributes', 'character_maximum_length', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_column_usage', 'table_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'role_table_grants', 'is_grantable', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats', 'most_common_vals', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_analyze', 'ext_stats_total', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'created', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'check_constraints', 'check_clause', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'data_type', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_opfamily', 'opfnamespace', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'attribute_udt_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_database', 'datcollate', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_table_options', 'foreign_table_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_matviews', 'hasindexes', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_locks', 'page', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'udt_privileges', 'is_grantable', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_event_trigger', 'evtenabled', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_settings', 'max_val', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_column_grants', 'column_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_roles', 'rolpassword', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_matviews', 'tablespace', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_matviews', 'ispopulated', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_routine_grants', 'privilege_type', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'external_language', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_file_settings', 'sourceline', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stanumbers4', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'table_privileges', 'table_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'element_types', 'collection_type_identifier', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'collation_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_subscription', 'subname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_locks', 'classid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_amop', 'amoprighttype', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_replication', 'write_lag', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_ssl', 'pid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domain_constraints', 'domain_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'view_routine_usage', 'specific_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database', 'tup_inserted', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'character_set_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'max_dynamic_result_sets', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_rules', 'tablename', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sequences', 'numeric_scale', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'user_defined_types', 'is_instantiable', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_numeric_precision_radix', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_operator', 'oprnegate', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_user_mapping', 'umoptions', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_data_wrappers', 'foreign_data_wrapper_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_seclabel', 'objsubid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_ssl', 'version', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_char_set_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_transform', 'trftosql', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_indexes', 'schemaname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'identity_minimum', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database', 'checksum_failures', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'module_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'proowner', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_trigger', 'tgname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'character_set_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_domain_usage', 'table_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_data_wrapper_options', 'foreign_data_wrapper_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_privileges', 'table_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_wal_receiver', 'received_tli', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_create_index', 'datid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routines', 'routine_definition', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'referential_constraints', 'delete_rule', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relhassubclass', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_conversion', 'conname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'routine_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'table_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'numeric_precision_radix', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_indexes', 'relname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_authid', 'rolbypassrls', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_database', 'datlastsysoid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_statio_user_tables', 'idx_blks_hit', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_user_tables', 'idx_scan', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_amproc', 'amproclefttype', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_tables', 'tableowner', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_tables', 'tidx_blks_hit', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'scope_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats', 'n_distinct', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_bgwriter', 'buffers_clean', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_operator', 'oprkind', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_wal_receiver', 'received_tli', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shadow', 'valuntil', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_sequences', 'start_value', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_activity', 'xact_start', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'generation_expression', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_sequences', 'schemaname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'parameters', 'numeric_scale', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_replication_slots', 'restart_lsn', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'seq_tup_read', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_indexes', 'relname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'character_sets', 'character_repertoire', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_parser', 'prslextype', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'views', 'table_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shdepend', 'refobjid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggered_update_columns', 'trigger_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_progress_cluster', 'relid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'is_nullable', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'interval_type', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_index', 'indisunique', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_timezone_abbrevs', 'abbrev', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'triggers', 'trigger_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'collation_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_gssapi', 'gss_authenticated', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_trigger', 'tgfoid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_seclabels', 'objnamespace', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'datetime_precision', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_rewrite', 'ev_enabled', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'n_tup_hot_upd', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_privileges', 'grantor', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_database', 'datctype', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'view_table_usage', 'table_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_column_grants', 'grantee', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sql_features', 'comments', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stavalues1', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'condeferrable', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_sequence', 'seqrelid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'schemaname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_wal_receiver', 'last_msg_receipt_time', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_cluster', 'relid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_user_mappings', 'oid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_subscription', 'subname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'udt_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'collation_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'staop4', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sql_sizing', 'supported_value', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_db_role_setting', 'setdatabase', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_settings', 'unit', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shmem_allocations', 'size', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'last_autovacuum', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_conversion', 'connamespace', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_database', 'datname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_largeobject', 'pageno', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_opfamily', 'opfnamespace', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'conname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_policy', 'polcmd', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_seclabel', 'label', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'idx_scan', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_udt_usage', 'udt_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_user_tables', 'n_tup_hot_upd', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'scope_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_operator', 'oprowner', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_rules', 'rulename', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_amop', 'amoprighttype', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'data_type', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_authid', 'rolcanlogin', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_locks', 'objid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_index', 'indnkeyatts', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_create_index', 'blocks_total', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_servers', 'foreign_server_type', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relnatts', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_foreign_data_wrapper', 'oid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'collations', 'pad_attribute', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_amop', 'amopopr', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'table_constraints', 'table_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_partitioned_table', 'partexprs', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_progress_vacuum', 'heap_blks_vacuumed', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_operator', 'oprjoin', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'reltuples', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_settings', 'context', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_config', 'name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_numeric_precision', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_udt_grants', 'privilege_type', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_user_tables', 'relid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'numeric_precision_radix', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_wal_receiver', 'sender_port', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database_conflicts', 'confl_deadlock', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attrdef', 'adrelid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_tables', 'idx_blks_hit', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_file_settings', 'sourcefile', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'character_set_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_user', 'useconfig', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_opclass', 'opcowner', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_indexes', 'idx_tup_fetch', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggers', 'created', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_language', 'lanacl', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'table_constraints', 'constraint_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_servers', 'srvoptions', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_tables', 'hastriggers', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_transform', 'trffromsql', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routine_privileges', 'grantor', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stacoll5', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_amop', 'amopsortfamily', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'scope_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_seclabel', 'classoid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_cursors', 'name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_cast', 'castsource', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_sys_tables', 'relid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_bgwriter', 'checkpoint_write_time', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attrdef', 'adnum', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_partitioned_table', 'partrelid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_range', 'rngcollation', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'column_default', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'udt_privileges', 'grantor', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'element_types', 'object_type', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'autoanalyze_count', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_basebackup', 'backup_total', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_gssapi', 'pid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relnamespace', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_sys_tables', 'n_tup_hot_upd', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sql_implementation_info', 'character_value', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_collation', 'oid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'attalign', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_domain_usage', 'domain_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_foreign_data_wrapper', 'fdwhandler', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_conversion', 'connamespace', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_sequences', 'start_value', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typbasetype', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'confrelid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'staop2', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'tables', 'is_insertable_into', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sql_features', 'comments', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_scope_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_publication', 'pubviaroot', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'user_defined_type_category', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_cast', 'castmethod', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_settings', 'enumvals', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_table_grants', 'is_grantable', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'parameters', 'character_set_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'schemata', 'schema_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'tables', 'user_defined_type_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_user_mapping', 'umuser', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_activity', 'state_change', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'attributes', 'collation_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_database', 'datname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_roles', 'rolvaliduntil', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_indexes', 'indexrelid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_database', 'oid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'character_sets', 'character_set_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'n_tup_ins', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'views', 'check_option', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'conrelid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_sequences', 'cache_size', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_subscription', 'subowner', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_data_wrappers', 'fdwowner', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_depend', 'deptype', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats_ext', 'statistics_owner', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'analyze_count', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_trigger', 'tgname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_locks', 'relation', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_event_trigger', 'evtevent', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_sequences', 'blks_hit', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database', 'temp_bytes', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_activity', 'backend_start', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_slru', 'flushes', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_namespace', 'nspname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'column_privileges', 'column_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggers', 'trigger_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_vacuum', 'relid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_index', 'indcheckxmin', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_depend', 'refclassid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'domain_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'is_self_referencing', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_init_privs', 'initprivs', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_xact_sys_tables', 'n_tup_del', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sequences', 'increment', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'routine_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_enum', 'enumtypid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_tables', 'heap_blks_read', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'attributes', 'ordinal_position', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_statio_sys_tables', 'tidx_blks_hit', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'constraint_column_usage', 'table_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'constraint_table_usage', 'table_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'collation_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'collations', 'collation_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_operator', 'oprcanmerge', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_locks', 'transactionid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'character_sets', 'character_set_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'scope_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routine_privileges', 'grantee', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_servers', 'authorization_identifier', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggmtranstype', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_roles', 'rolconfig', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'udt_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_create_index', 'datid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_index', 'indisprimary', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_table_grants', 'privilege_type', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'udt_privileges', 'privilege_type', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_publication_tables', 'tablename', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_locks', 'classid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_tables', 'foreign_table_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'user_defined_types', 'character_octet_length', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_table_options', 'option_value', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_ts_config', 'cfgname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_views', 'viewname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'scope_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggfinalextra', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_subscription', 'relid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'collation_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'table_privileges', 'privilege_type', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'conbin', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_database', 'datacl', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_amop', 'amoplefttype', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_replication', 'sync_priority', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routines', 'module_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'udt_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'last_autovacuum', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_template', 'oid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_analyze', 'ext_stats_computed', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_tables', 'ftoptions', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_policies', 'roles', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'is_nullable', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'maximum_cardinality', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_indexes', 'tablename', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_locks', 'tuple', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'numeric_precision', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routine_privileges', 'routine_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'character_sets', 'character_repertoire', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'module_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shseclabel', 'label', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggtranstype', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_conversion', 'conowner', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'view_routine_usage', 'specific_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_table_columns', 'attfdwoptions', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'datetime_precision', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_settings', 'min_val', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_server_options', 'option_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_indexes', 'schemaname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_data_wrappers', 'foreign_data_wrapper_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'attmissingval', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stats', 'n_distinct', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'referential_constraints', 'update_rule', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_partitioned_table', 'partcollation', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_table_options', 'option_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_opfamily', 'opfmethod', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_locks', 'virtualtransaction', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'pronargs', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_cursors', 'is_scrollable', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_routine_grants', 'specific_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_servers', 'foreign_server_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_seclabels', 'objtype', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'character_set_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'udt_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_database', 'datlastsysoid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_routine_grants', 'specific_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_opfamily', 'oid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_enum', 'enumlabel', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggmtransfn', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'seq_scan', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'ordering_routine_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_database_conflicts', 'confl_bufferpin', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'data_type_privileges', 'object_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_index', 'indisvalid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'udt_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_language', 'lanacl', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_all_indexes', 'idx_tup_read', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_matviews', 'matviewname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relhasrules', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'table_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'proconfig', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggtransspace', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'constraint_column_usage', 'table_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'constraint_column_usage', 'constraint_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_cluster', 'index_rebuild_count', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_sys_tables', 'n_tup_ins', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'proparallel', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_analyze', 'phase', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_statio_sys_tables', 'schemaname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'proacl', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'view_column_usage', 'table_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'column_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_privileges', 'table_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_init_privs', 'classoid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'attgenerated', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_tables', 'foreign_server_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_seclabels', 'label', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'conppeqop', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'collation_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'enabled_roles', 'role_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggmfinalfn', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_tables', 'idx_blks_read', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_tables', 'foreign_server_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'dtd_identifier', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'numeric_scale', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'interval_precision', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'attbyval', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'check_constraints', 'check_clause', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_prepared_statements', 'prepare_time', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stats_ext', 'dependencies', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'probin', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_sys_indexes', 'indexrelname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_gssapi', 'encrypted', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relowner', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_amproc', 'amproclefttype', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_parser', 'prsnamespace', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routines', 'udt_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggfnoid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_conversion', 'condefault', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_data_wrappers', 'authorization_identifier', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggfnoid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_proc', 'pronargdefaults', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'interval_type', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggkind', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'schema_level_routine', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sql_features', 'sub_feature_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'oid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_policies', 'cmd', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_default_acl', 'defaclacl', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sequences', 'numeric_scale', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggmfinalextra', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_template', 'tmplnamespace', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_replication', 'sync_priority', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_data_wrapper_options', 'option_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_progress_cluster', 'heap_blks_total', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'table_privileges', 'grantor', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_extension', 'oid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_policies', 'tablename', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_vacuum', 'heap_blks_vacuumed', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'user_mapping_options', 'authorization_identifier', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'domain_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_archiver', 'stats_reset', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'attributes', 'attribute_udt_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_domain_usage', 'table_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_replication', 'client_addr', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_type', 'typisdefined', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_group', 'grosysid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_auth_members', 'roleid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_amop', 'amopstrategy', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'views', 'is_trigger_insertable_into', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'last_analyze', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'udt_privileges', 'udt_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_datetime_precision', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typlen', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_activity', 'wait_event', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'character_set_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_attribute', 'attrelid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'n_tup_upd', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'views', 'table_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_config_map', 'mapcfg', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats_ext', 'statistics_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_index', 'indexrelid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_config_map', 'maptokentype', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'module_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_sequences', 'cycle', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_statio_all_indexes', 'indexrelname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'n_dead_tup', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_tables', 'relid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_tables', 'tidx_blks_read', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'scope_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_index', 'indclass', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'foreign_data_wrappers', 'foreign_data_wrapper_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_conversion', 'conproc', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typnamespace', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_range', 'rngtypid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stats_ext', 'statistics_schemaname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sequences', 'cycle_option', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stavalues1', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'external_language', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_type', 'typnotnull', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'view_table_usage', 'view_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_settings', 'name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggserialfn', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_opclass', 'opcdefault', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_am', 'amtype', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'n_mod_since_analyze', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sql_features', 'feature_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'n_live_tup', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domain_constraints', 'domain_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_all_tables', 'n_tup_ins', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_amop', 'amopmethod', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sql_features', 'sub_feature_id', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_tables', 'tidx_blks_read', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typnotnull', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_mapping_options', 'foreign_server_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relnamespace', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'applicable_roles', 'grantee', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'reltuples', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_settings', 'sourceline', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'views', 'table_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_cursors', 'statement', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_tables', 'heap_blks_read', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_type_udt_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_roles', 'rolcreatedb', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'transforms', 'udt_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_all_tables', 'seq_scan', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'dtd_identifier', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'constraint_table_usage', 'table_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_conversion', 'connamespace', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typreceive', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'last_autoanalyze', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_ssl', 'bits', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shadow', 'usesysid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_xact_user_tables', 'relname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domain_constraints', 'initially_deferred', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routine_privileges', 'privilege_type', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_vacuum', 'max_dead_tuples', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'table_constraints', 'enforced', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_enum', 'oid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_trigger', 'tgenabled', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'proallargtypes', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_indexes', 'idx_blks_read', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'udt_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'routine_definition', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'character_set_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_bgwriter', 'checkpoints_timed', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routines', 'collation_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_rewrite', 'is_instead', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_replication_origin_status', 'remote_lsn', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'constraint_table_usage', 'constraint_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'numeric_precision', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'collation_character_set_applicability', 'collation_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'interval_precision', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_collation', 'collname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'numeric_precision', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_roles', 'rolname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'conindid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats', 'most_common_elems', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'data_type_privileges', 'object_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_proc', 'proconfig', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sql_features', 'sub_feature_id', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_udt_usage', 'table_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'collation_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'parameter_default', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relallvisible', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'constraint_column_usage', 'constraint_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'schemata', 'sql_path', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_data_wrappers', 'foreign_data_wrapper_language', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_options', 'table_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_settings', 'reset_val', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typreceive', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'collation_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_activity', 'state', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_ssl', 'client_serial', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_roles', 'rolbypassrls', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_indexes', 'relid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_user', 'usesysid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shmem_allocations', 'allocated_size', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sql_features', 'is_verified_by', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_cluster', 'relid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_attribute', 'attndims', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'referential_constraints', 'unique_constraint_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'referential_constraints', 'unique_constraint_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'triggers', 'action_condition', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'numeric_scale', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'collation_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_roles', 'rolconnlimit', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_subscription', 'subid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'scope_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_wal_receiver', 'status', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'collation_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_authid', 'rolcreaterole', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'idx_scan', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_server_options', 'option_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_index', 'indisready', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_table_grants', 'table_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_domain_usage', 'table_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_sequences', 'blks_hit', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database', 'blks_hit', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_seclabel', 'label', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_settings', 'max_val', 'UPDATE', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'module_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_seclabels', 'objname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'is_deterministic', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'view_routine_usage', 'specific_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_ssl', 'version', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_functions', 'total_time', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'views', 'is_trigger_updatable', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggers', 'trigger_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'staattnum', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'tables', 'self_referencing_column_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_settings', 'enumvals', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sql_features', 'comments', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_activity', 'wait_event_type', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_progress_vacuum', 'num_dead_tuples', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_sys_indexes', 'schemaname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_column_usage', 'table_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sql_implementation_info', 'character_value', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_amop', 'amopopr', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggfinalfn', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_trigger', 'tgargs', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attrdef', 'adnum', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database', 'deadlocks', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'collation_character_set_applicability', 'character_set_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'last_analyze', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_file_settings', 'error', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'attribute_udt_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_constraint', 'conrelid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_subscription', 'subid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_functions', 'funcid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'udt_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'last_analyze', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_depend', 'objsubid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_replication_origin_status', 'local_id', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_slru', 'blks_exists', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_user_tables', 'idx_scan', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'is_generated', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'oid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_tablespace', 'oid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_replication_slots', 'active', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'constraint_column_usage', 'constraint_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_user', 'userepl', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'usage_privileges', 'object_type', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_mapping_options', 'option_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'applicable_roles', 'role_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'analyze_count', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'starelid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_table_options', 'foreign_table_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'prorettype', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domain_udt_usage', 'udt_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'n_tup_ins', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'attnotnull', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_indexes', 'schemaname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_indexes', 'relid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_constraint', 'contype', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'autoanalyze_count', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_type_udt_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_sequences', 'relname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'domain_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_config', 'oid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_locks', 'objid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'condeferred', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_indexes', 'tablespace', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_indexes', 'relid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routines', 'result_cast_numeric_scale', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'condeferrable', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_xact_user_functions', 'total_time', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_subscription', 'subname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'connoinherit', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_statio_all_tables', 'idx_blks_hit', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_udt_grants', 'udt_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_progress_create_index', 'datname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'columns', 'identity_minimum', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'as_locator', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_trigger', 'tgqual', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_foreign_data_wrapper', 'fdwoptions', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'idx_scan', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'datetime_precision', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_replication_origin_status', 'external_id', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_index', 'indclass', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'administrable_role_authorizations', 'role_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_tables', 'foreign_table_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'schemata', 'default_character_set_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_foreign_server', 'srvfdw', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typalign', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_policy', 'polroles', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'collation_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'parameters', 'collation_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shdepend', 'classid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_progress_vacuum', 'heap_blks_scanned', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_parser', 'prslextype', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_roles', 'oid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_column_grants', 'grantee', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_slru', 'stats_reset', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggers', 'action_statement', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggmfinalmodify', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'administrable_role_authorizations', 'grantee', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'numeric_precision_radix', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'attname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_default_acl', 'defaclrole', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_usage_grants', 'grantor', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_tables', 'heap_blks_read', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_statio_user_tables', 'heap_blks_hit', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'n_tup_upd', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'n_ins_since_vacuum', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database', 'tup_fetched', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_user_mappings', 'umoptions', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'seq_tup_read', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'last_altered', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_data_wrappers', 'foreign_data_wrapper_language', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'key_column_usage', 'ordinal_position', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relfrozenxid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_operator', 'oprright', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_progress_cluster', 'heap_tuples_scanned', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_tablespace', 'spcname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_proc', 'prorows', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_wal_receiver', 'written_lsn', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_bgwriter', 'stats_reset', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_roles', 'rolinherit', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_trigger', 'tgfoid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'view_routine_usage', 'specific_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_mapping_options', 'foreign_server_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_rewrite', 'ev_enabled', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'domain_constraints', 'is_deferrable', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_parser', 'prslextype', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_bgwriter', 'checkpoints_req', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggers', 'action_reference_new_row', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_policy', 'oid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stats_ext', 'tablename', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'attislocal', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_conversion', 'condefault', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_sequence', 'seqstart', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'tables', 'table_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_policy', 'polrelid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_ssl', 'bits', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_cast', 'oid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_replication', 'sync_priority', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats', 'correlation', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'n_live_tup', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_trigger', 'tgname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_tables', 'hastriggers', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_tables', 'relid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_locks', 'pid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'triggers', 'action_reference_new_table', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_index', 'indnatts', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'n_live_tup', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'character_octet_length', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'dtd_identifier', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database', 'blks_read', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_inherits', 'inhrelid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_seclabel', 'objoid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_locks', 'tuple', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'prosupport', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_amop', 'amoppurpose', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_tables', 'hasrules', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'character_sets', 'character_set_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats', 'most_common_freqs', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_analyze', 'sample_blks_scanned', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_tables', 'foreign_server_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_sequences', 'blks_hit', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_wal_receiver', 'flushed_lsn', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'conparentid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_udt_usage', 'udt_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_sys_tables', 'schemaname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_data_wrappers', 'foreign_data_wrapper_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'views', 'view_definition', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_indexes', 'tablename', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_sequence', 'seqincrement', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'interval_type', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sql_parts', 'is_verified_by', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'n_tup_del', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'atttypmod', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'constraint_table_usage', 'table_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'n_tup_hot_upd', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_tables', 'tablename', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'role_udt_grants', 'udt_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_publication_tables', 'schemaname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_partitioned_table', 'partexprs', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_attribute', 'attoptions', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_replication', 'flush_lag', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_create_index', 'lockers_total', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_progress_analyze', 'current_child_table_relid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_analyze', 'pid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_vacuum', 'pid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'relname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_gssapi', 'gss_authenticated', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'foreign_data_wrapper_options', 'option_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_extension', 'extowner', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_progress_vacuum', 'datname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_description', 'description', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_archiver', 'last_failed_time', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_slru', 'blks_exists', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'character_maximum_length', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_settings', 'unit', 'UPDATE', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_subscription', 'subowner', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_slru', 'flushes', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'domain_udt_usage', 'domain_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_policy', 'oid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'triggers', 'created', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats', 'most_common_freqs', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_template', 'oid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'constraint_column_usage', 'constraint_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_database', 'datminmxid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'table_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domain_udt_usage', 'udt_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'collations', 'collation_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_sequences', 'relname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_table_options', 'option_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'oid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_policies', 'cmd', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_largeobject_metadata', 'lomowner', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'staop2', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_foreign_server', 'srvversion', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sequences', 'cycle_option', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_usage_grants', 'grantor', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_available_extensions', 'comment', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_replication', 'backend_start', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_seclabel', 'provider', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_data_wrappers', 'foreign_data_wrapper_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_roles', 'rolcreatedb', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'as_locator', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'new_savepoint_level', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'scope_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_column_grants', 'table_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_replication', 'write_lag', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_functions', 'schemaname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_extension', 'extcondition', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_tables', 'relname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_sequences', 'increment_by', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_roles', 'rolbypassrls', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_policy', 'polroles', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_cast', 'castsource', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'table_constraints', 'constraint_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_settings', 'context', 'UPDATE', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggers', 'event_object_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_config', 'name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_settings', 'context', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_data_wrapper_options', 'foreign_data_wrapper_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routines', 'datetime_precision', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_routine_grants', 'routine_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routines', 'result_cast_numeric_precision_radix', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_create_index', 'blocks_total', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'udt_privileges', 'grantor', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_partitioned_table', 'partrelid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'schemata', 'default_character_set_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_foreign_server', 'srvfdw', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_sequences', 'cache_size', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_foreign_server', 'srvname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_user_tables', 'idx_scan', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_column_usage', 'table_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stats', 'most_common_vals', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'n_dead_tup', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_rewrite', 'ev_enabled', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'character_maximum_length', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_settings', 'short_desc', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_depend', 'classid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typmodout', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_partitioned_table', 'partdefid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_user', 'usebypassrls', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_matviews', 'matviewowner', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'foreign_data_wrappers', 'foreign_data_wrapper_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic_ext_data', 'stxddependencies', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats', 'avg_width', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'constraint_table_usage', 'table_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'udt_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stakind2', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'collations', 'pad_attribute', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_statio_user_tables', 'relname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'information_schema_catalog_name', 'catalog_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sequences', 'sequence_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_publication_rel', 'prrelid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_auth_members', 'admin_option', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typacl', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_publication', 'pubdelete', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_settings', 'setting', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_data_wrapper_options', 'option_value', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'character_maximum_length', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_available_extensions', 'name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggers', 'event_object_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_class', 'relrowsecurity', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'administrable_role_authorizations', 'is_grantable', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_language', 'oid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'character_set_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_tables', 'idx_blks_hit', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_config', 'cfgnamespace', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_publication_rel', 'oid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'view_routine_usage', 'specific_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_servers', 'foreign_data_wrapper_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_hba_file_rules', 'netmask', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sql_implementation_info', 'implementation_info_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_tables', 'tablename', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_user', 'usebypassrls', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'numeric_precision_radix', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_subscription', 'oid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_xact_user_tables', 'seq_tup_read', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_database', 'datallowconn', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'parameter_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'collation_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_xact_user_tables', 'n_tup_del', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'udt_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'maximum_cardinality', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'idx_tup_fetch', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_operator', 'oprcanmerge', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'data_type', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routines', 'result_cast_type_udt_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats', 'attname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_tables', 'tableowner', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'role_routine_grants', 'grantee', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_replication_slots', 'restart_lsn', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggers', 'event_manipulation', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_default_acl', 'defaclacl', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_available_extension_versions', 'relocatable', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_extension', 'extnamespace', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'table_constraints', 'initially_deferred', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggminvtransfn', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routines', 'is_user_defined_cast', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'specific_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggers', 'event_object_table', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_cursors', 'is_binary', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_functions', 'self_time', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'new_savepoint_level', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'confdeltype', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_replication_origin_status', 'remote_lsn', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_tables', 'tidx_blks_hit', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_from_data_type', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_activity', 'client_hostname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'datetime_precision', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'numeric_precision', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_basebackup', 'phase', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_archiver', 'last_failed_wal', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_servers', 'authorization_identifier', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routines', 'character_maximum_length', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'last_autoanalyze', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'oid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_sys_tables', 'relname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'view_column_usage', 'table_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_init_privs', 'objsubid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'table_privileges', 'table_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_create_index', 'current_locker_pid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_udt_usage', 'udt_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'domain_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'attributes', 'character_octet_length', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stanumbers4', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_replication', 'replay_lsn', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shadow', 'usesuper', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'referential_constraints', 'constraint_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stawidth', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'prosrc', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'check_constraint_routine_usage', 'constraint_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_char_set_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_indexes', 'idx_tup_read', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_db_role_setting', 'setdatabase', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_udt_usage', 'column_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'agginitval', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_publication_rel', 'oid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_database', 'datconnlimit', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_replication', 'replay_lsn', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'udt_privileges', 'udt_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'proname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_user_mappings', 'srvname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_cluster', 'relid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typcategory', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sql_implementation_info', 'integer_value', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_replication', 'replay_lag', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'udt_privileges', 'grantor', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'usage_privileges', 'is_grantable', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'object_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relrowsecurity', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_constraint', 'conpfeqop', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_language', 'oid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggnumdirectargs', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'referential_constraints', 'constraint_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'data_type', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database', 'datid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_progress_cluster', 'datname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'user_defined_types', 'collation_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shseclabel', 'objoid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'reltoastrelid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'table_constraints', 'constraint_type', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic_ext', 'stxowner', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_roles', 'rolinherit', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'transforms', 'specific_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sequences', 'numeric_precision_radix', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_settings', 'min_val', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_xact_sys_tables', 'n_tup_upd', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'numeric_precision', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_options', 'option_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_user_mapping', 'umuser', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_sys_tables', 'n_tup_upd', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_proc', 'proargtypes', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_publication_tables', 'schemaname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_user_mappings', 'foreign_server_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_xact_user_functions', 'calls', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sql_sizing', 'supported_value', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_sequence', 'seqmin', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'administrable_role_authorizations', 'role_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_activity', 'wait_event', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_xact_all_tables', 'idx_scan', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggers', 'action_reference_new_row', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shdescription', 'classoid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_servers', 'foreign_server_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typndims', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'scope_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typispreferred', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_seclabels', 'objnamespace', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'external_language', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_user', 'usebypassrls', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sql_features', 'feature_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggers', 'created', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'specific_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'domain_constraints', 'constraint_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_column_grants', 'table_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_namespace', 'nspacl', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_sys_tables', 'relname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_group', 'grosysid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'key_column_usage', 'constraint_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_amop', 'amoppurpose', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_basebackup', 'backup_streamed', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'reltoastrelid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_settings', 'boot_val', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'columns', 'character_set_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_table_grants', 'is_grantable', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'datetime_precision', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'specific_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_language', 'lanplcallfoid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'specific_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_prepared_xacts', 'transaction', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_locks', 'objsubid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_subscription', 'subslotname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_servers', 'foreign_server_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_parser', 'prstoken', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_available_extension_versions', 'superuser', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_settings', 'sourcefile', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'columns', 'is_generated', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'is_user_defined_cast', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_amop', 'amopfamily', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'collations', 'collation_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'udt_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_foreign_data_wrapper', 'fdwhandler', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'character_octet_length', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_foreign_server', 'srvowner', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_policy', 'polpermissive', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_sys_tables', 'n_tup_ins', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'contypid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'udt_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_default_acl', 'oid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_publication_tables', 'pubname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'character_set_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'collation_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_opclass', 'opcname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'last_vacuum', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_analyze', 'ext_stats_computed', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'character_set_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'is_nullable', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_policy', 'polqual', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_auth_members', 'member', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_replication_slots', 'safe_wal_size', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'view_column_usage', 'table_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_servers', 'foreign_server_version', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'attidentity', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_init_privs', 'objsubid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_replication_origin', 'roname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_matviews', 'tablespace', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_basebackup', 'pid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_user_functions', 'schemaname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'source_dtd_identifier', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'check_constraint_routine_usage', 'constraint_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'last_analyze', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggered_update_columns', 'event_object_table', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_subscription', 'subdbid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggtransfn', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_slru', 'flushes', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_database', 'datistemplate', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sequences', 'cycle_option', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_range', 'rngcollation', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'interval_type', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_sequence', 'seqincrement', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'last_analyze', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'idx_scan', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'parameter_style', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_views', 'schemaname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_seclabel', 'classoid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'collation_character_set_applicability', 'collation_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_routine_grants', 'grantee', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'domain_udt_usage', 'udt_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_seclabels', 'objsubid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_type', 'typstorage', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_depend', 'refobjid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'collation_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sql_features', 'is_supported', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shadow', 'usename', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_indexes', 'idx_tup_read', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_create_index', 'partitions_done', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_subscription_rel', 'srsubstate', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'seq_scan', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'constraint_column_usage', 'column_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_cluster', 'command', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_replication_slots', 'temporary', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_opclass', 'oid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_udt_usage', 'udt_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'column_default', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_user_mappings', 'umuser', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_user', 'passwd', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sequences', 'numeric_precision', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domain_constraints', 'is_deferrable', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_statio_user_indexes', 'relid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'user_defined_types', 'data_type', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'attndims', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'scope_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'n_live_tup', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'prorettype', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_shdepend', 'objsubid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_trigger', 'tginitdeferred', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'proconfig', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_conversion', 'conforencoding', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_activity', 'wait_event', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_user_functions', 'funcid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'role_routine_grants', 'specific_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'enabled_roles', 'role_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_type', 'typanalyze', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_tables', 'relid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_user_mappings', 'usename', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typrelid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_tables', 'schemaname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_collation', 'collencoding', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_udt_grants', 'udt_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'schemata', 'default_character_set_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'relid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database_conflicts', 'confl_bufferpin', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_db_role_setting', 'setconfig', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_replication_slots', 'plugin', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relpages', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_analyze', 'phase', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'parameters', 'character_octet_length', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_tables', 'tidx_blks_hit', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'attislocal', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_statio_sys_tables', 'relname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'column_udt_usage', 'table_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stacoll3', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relforcerowsecurity', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'sql_implementation_info', 'character_value', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_seclabel', 'objoid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'schemaname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'role_usage_grants', 'grantor', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggtranstype', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'role_routine_grants', 'is_grantable', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'conpfeqop', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_locks', 'pid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'n_tup_del', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'coninhcount', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_publication', 'pubtruncate', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggkind', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'n_tup_hot_upd', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_udt_grants', 'is_grantable', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typtypmod', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_language', 'lanowner', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_bgwriter', 'buffers_backend', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'seq_scan', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_vacuum', 'phase', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'attribute_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'collation_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_subscription', 'latest_end_time', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_tables', 'foreign_table_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_replication_slots', 'slot_type', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_activity', 'wait_event', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_auth_members', 'grantor', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_dict', 'dictowner', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'vacuum_count', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_trigger', 'tgnewtable', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relispartition', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_type', 'typispreferred', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'identity_increment', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'transforms', 'udt_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_subscription_rel', 'srrelid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'udt_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_indexes', 'idx_blks_read', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typtype', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'datetime_precision', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'scope_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_analyze', 'child_tables_total', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'seq_tup_read', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_range', 'rngsubopc', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggers', 'action_condition', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_activity', 'state', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'staop3', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_analyze', 'ext_stats_total', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_cast', 'castfunc', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'relname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_locks', 'database', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_statio_sys_indexes', 'relname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'n_mod_since_analyze', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_replication', 'client_port', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_replication', 'usesysid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'parameters', 'parameter_mode', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_tables', 'relname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'columns', 'data_type', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_slru', 'blks_exists', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stanumbers3', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'check_constraint_routine_usage', 'constraint_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_subscription', 'subname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'n_tup_ins', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_sequences', 'sequenceowner', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_servers', 'foreign_data_wrapper_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'table_constraints', 'constraint_type', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_index', 'indexprs', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'view_table_usage', 'view_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_indexes', 'idx_blks_hit', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_tables', 'tableowner', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'atthasmissing', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_rewrite', 'ev_type', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'reloftype', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routines', 'specific_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'schema_level_routine', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relnatts', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggkind', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_conversion', 'condefault', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'conexclop', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'scope_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'tables', 'commit_action', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggers', 'action_orientation', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stacoll5', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_index', 'indisunique', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_namespace', 'oid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'constraint_table_usage', 'table_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_largeobject_metadata', 'lomowner', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'key_column_usage', 'constraint_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_publication', 'pubinsert', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_trigger', 'tgrelid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_progress_basebackup', 'phase', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_policies', 'with_check', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'collection_type_identifier', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_archiver', 'stats_reset', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'table_constraints', 'constraint_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'n_tup_del', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typdelim', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_namespace', 'nspowner', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'column_domain_usage', 'table_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'foreign_data_wrappers', 'library_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'specific_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_options', 'table_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_roles', 'rolsuper', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_rules', 'schemaname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'transforms', 'udt_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_wal_receiver', 'latest_end_lsn', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shdepend', 'deptype', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_default_acl', 'oid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'tables', 'self_referencing_column_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'view_routine_usage', 'table_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_mapping_options', 'option_value', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'attnotnull', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_indexes', 'schemaname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sql_parts', 'is_verified_by', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_publication', 'puballtables', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'confrelid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_shdepend', 'objid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_server_options', 'foreign_server_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_sequences', 'increment_by', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'udt_privileges', 'is_grantable', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_indexes', 'idx_tup_fetch', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_foreign_data_wrapper', 'fdwowner', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'character_set_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sql_implementation_info', 'comments', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'udt_privileges', 'privilege_type', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'relname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_mapping_options', 'authorization_identifier', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_collation', 'collname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_database', 'datname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_create_index', 'current_locker_pid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_amproc', 'amprocrighttype', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_description', 'objsubid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_range', 'rngsubdiff', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_indexes', 'idx_tup_read', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'columns', 'numeric_scale', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domain_udt_usage', 'udt_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'collation_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggers', 'event_object_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_sequences', 'blks_read', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_cluster', 'heap_blks_total', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_index', 'indclass', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'autoanalyze_count', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_activity', 'wait_event_type', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats_ext', 'most_common_freqs', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'character_set_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_sys_tables', 'schemaname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_vacuum', 'datid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'attinhcount', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'view_routine_usage', 'table_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_all_tables', 'schemaname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domain_udt_usage', 'domain_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database', 'blks_hit', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'character_set_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_shseclabel', 'label', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_user_tables', 'seq_tup_read', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_prepared_statements', 'statement', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_settings', 'source', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_analyze', 'pid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_vacuum', 'datname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'column_column_usage', 'column_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_collation', 'collnamespace', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_roles', 'rolsuper', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_largeobject_metadata', 'lomowner', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'collation_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'n_ins_since_vacuum', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_slru', 'blks_hit', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_cluster', 'cluster_index_relid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_publication', 'pubinsert', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routine_privileges', 'is_grantable', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'idx_tup_fetch', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'numeric_scale', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_column_usage', 'dependent_column', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'udt_privileges', 'udt_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'prorows', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_prepared_xacts', 'owner', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_slru', 'blks_read', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stavalues4', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'proallargtypes', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shseclabel', 'provider', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_largeobject', 'pageno', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'numeric_precision_radix', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_cluster', 'pid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'relid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_indexes', 'idx_tup_fetch', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'attributes', 'interval_type', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'interval_precision', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_dict', 'dicttemplate', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_wal_receiver', 'sender_port', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_replication_slots', 'active', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_indexes', 'idx_scan', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'proisstrict', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_index', 'indnkeyatts', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_hba_file_rules', 'auth_method', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'confrelid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_available_extensions', 'comment', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'pronargdefaults', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats', 'attname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relpartbound', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_am', 'amhandler', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'constraint_column_usage', 'constraint_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_matviews', 'matviewname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'udt_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_collation_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'role_udt_grants', 'udt_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_progress_basebackup', 'pid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_ts_config_map', 'mapcfg', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routines', 'result_cast_scope_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_class', 'relname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'domain_default', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_sequences', 'start_value', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggnumdirectargs', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'attribute_udt_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'character_octet_length', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_extension', 'extconfig', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_type', 'typbyval', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_tables', 'toast_blks_hit', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'administrable_role_authorizations', 'role_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'views', 'is_trigger_updatable', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_sequence', 'seqmin', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_udt_usage', 'table_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'numeric_precision', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'datetime_precision', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'parameters', 'interval_type', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_database', 'temp_files', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'view_routine_usage', 'specific_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'conrelid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'numeric_precision_radix', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_create_index', 'lockers_done', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'table_privileges', 'with_hierarchy', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'collation_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'domains', 'collation_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_trigger', 'tgqual', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_wal_receiver', 'last_msg_send_time', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_routine_grants', 'specific_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'autovacuum_count', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'proleakproof', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sql_implementation_info', 'implementation_info_id', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stakind4', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_replication_slots', 'safe_wal_size', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_indexes', 'indexrelid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'attributes', 'numeric_precision_radix', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggminvtransfn', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_database', 'encoding', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_tables', 'tidx_blks_read', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_authid', 'oid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats', 'correlation', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats_ext', 'attnames', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_bgwriter', 'checkpoints_req', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'dtd_identifier', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_replication_slots', 'slot_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_collation', 'collowner', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_index', 'indrelid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_sequence', 'seqincrement', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shseclabel', 'label', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_timezone_abbrevs', 'utc_offset', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_hba_file_rules', 'auth_method', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_subscription', 'subsynccommit', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'n_dead_tup', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'table_constraints', 'constraint_type', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'constraint_table_usage', 'constraint_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'new_savepoint_level', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggers', 'action_statement', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'column_column_usage', 'dependent_column', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_progress_create_index', 'partitions_done', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats_ext', 'kinds', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_create_index', 'datname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'attrelid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'element_types', 'scope_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'last_autoanalyze', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_subscription', 'subconninfo', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'character_set_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'autoanalyze_count', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_bgwriter', 'buffers_alloc', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_subscription', 'subdbid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'views', 'check_option', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'n_live_tup', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_conversion', 'conproc', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_indexes', 'indexrelname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_attribute', 'attcollation', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'module_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'attfdwoptions', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'element_types', 'character_set_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_settings', 'sourceline', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'collation_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_replication', 'usesysid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'collection_type_identifier', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_constraint', 'conppeqop', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_partitioned_table', 'partattrs', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_file_settings', 'setting', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'ordering_form', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'columns', 'maximum_cardinality', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_user_indexes', 'indexrelid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_statio_user_indexes', 'schemaname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_views', 'viewowner', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_rewrite', 'is_instead', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_slru', 'blks_read', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'check_constraints', 'constraint_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'attbyval', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'udt_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database', 'checksum_failures', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'attribute_udt_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'udt_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'prosupport', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_seclabels', 'objtype', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shdepend', 'dbid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_file_settings', 'error', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stawidth', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'constraint_table_usage', 'constraint_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_server_options', 'option_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'tables', 'user_defined_type_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'relid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'sql_path', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_subscription', 'pid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_functions', 'funcid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'table_constraints', 'initially_deferred', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typnamespace', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_udt_grants', 'privilege_type', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'staop1', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_event_trigger', 'oid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_event_trigger', 'evtenabled', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'n_dead_tup', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'conbin', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_user_mappings', 'usename', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_database', 'encoding', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'analyze_count', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typispreferred', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_sequences', 'min_value', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_cursors', 'is_scrollable', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_privileges', 'is_grantable', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_settings', 'sourceline', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_init_privs', 'classoid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_range', 'rngsubopc', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_dict', 'dictowner', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_indexes', 'schemaname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_cursors', 'is_scrollable', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_wal_receiver', 'receive_start_lsn', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'conkey', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_bgwriter', 'buffers_alloc', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'domain_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sql_features', 'sub_feature_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'collation_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_cluster', 'datname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_progress_vacuum', 'index_vacuum_count', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_database', 'conflicts', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'applicable_roles', 'role_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'oid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typoutput', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'table_privileges', 'table_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shseclabel', 'provider', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'reloptions', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_index', 'indcheckxmin', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'seq_tup_read', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_inherits', 'inhrelid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_wal_receiver', 'receive_start_tli', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_user_mappings', 'srvid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_settings', 'min_val', 'UPDATE', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_vacuum', 'index_vacuum_count', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_options', 'table_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_authid', 'rolreplication', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats_ext', 'tablename', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'autoanalyze_count', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'domain_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_trigger', 'tgtype', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_bgwriter', 'checkpoint_sync_time', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sql_sizing', 'sizing_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_servers', 'foreign_server_version', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relfrozenxid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_servers', 'foreign_server_version', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'schemaname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_char_set_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sql_sizing', 'comments', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats_ext', 'statistics_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domain_udt_usage', 'udt_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'maximum_cardinality', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_authid', 'rolbypassrls', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'relname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relfilenode', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_replication', 'flush_lag', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'foreign_table_options', 'foreign_table_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_replication', 'backend_start', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'domain_constraints', 'domain_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_progress_vacuum', 'datid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stavalues5', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_activity', 'backend_xmin', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routines', 'numeric_scale', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stacoll4', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_statistic_ext', 'stxrelid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_trigger', 'tgconstrrelid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routines', 'is_udt_dependent', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relhasrules', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_config', 'cfgparser', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'collation_character_set_applicability', 'character_set_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sequences', 'sequence_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'is_identity', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_settings', 'extra_desc', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggers', 'action_reference_new_row', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_publication_rel', 'oid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'views', 'view_definition', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_create_index', 'tuples_total', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_subscription', 'last_msg_receipt_time', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'table_privileges', 'with_hierarchy', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_tables', 'foreign_server_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_available_extension_versions', 'version', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'constraint_table_usage', 'constraint_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'ordering_routine_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'table_constraints', 'table_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'character_maximum_length', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_user', 'userepl', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_amop', 'amopstrategy', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'usage_privileges', 'object_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_vacuum', 'heap_blks_vacuumed', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_subscription', 'subconninfo', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_tables', 'toast_blks_hit', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'character_set_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'key_column_usage', 'constraint_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_table_grants', 'table_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'n_ins_since_vacuum', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_indexes', 'indexrelname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats', 'null_frac', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'specific_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_index', 'indclass', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'usage_privileges', 'is_grantable', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_foreign_table', 'ftserver', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'n_mod_since_analyze', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typisdefined', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relhassubclass', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'is_derived_reference_attribute', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'character_set_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_range', 'rngsubtype', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_settings', 'pending_restart', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_replication', 'state', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_db_role_setting', 'setconfig', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'data_type_privileges', 'object_type', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_bgwriter', 'buffers_alloc', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'table_privileges', 'grantor', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_ts_parser', 'prslextype', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_archiver', 'failed_count', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sequences', 'start_value', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'view_table_usage', 'table_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_activity', 'leader_pid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_rewrite', 'oid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_replication_slots', 'catalog_xmin', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_all_tables', 'seq_tup_read', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_wal_receiver', 'slot_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_index', 'indcollation', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typrelid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typacl', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_sys_tables', 'relid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_type_udt_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_conversion', 'conforencoding', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_indexes', 'indexrelid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_xact_user_tables', 'schemaname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats', 'tablename', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domain_constraints', 'constraint_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'domain_constraints', 'domain_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'ordering_routine_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_largeobject', 'loid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_prepared_statements', 'from_sql', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_settings', 'reset_val', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggfinalfn', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'character_octet_length', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typelem', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'is_udt_dependent', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sql_features', 'comments', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'scope_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'is_identity', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'usage_privileges', 'object_type', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_settings', 'reset_val', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_cast', 'castcontext', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_activity', 'state_change', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'identity_minimum', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stadistinct', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_sys_tables', 'schemaname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_settings', 'source', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_statio_user_indexes', 'idx_blks_hit', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_slru', 'blks_exists', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_routine_grants', 'grantor', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'view_column_usage', 'table_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'view_table_usage', 'view_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_replication_slots', 'datoid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_table_grants', 'table_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_collation', 'collcollate', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'table_constraints', 'constraint_type', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'interval_precision', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_language', 'lanvalidator', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'character_octet_length', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_index', 'indnatts', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'seq_tup_read', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routines', 'interval_type', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_numeric_scale', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_roles', 'rolvaliduntil', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_publication', 'pubinsert', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'views', 'is_trigger_insertable_into', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_sys_tables', 'n_tup_del', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'maximum_cardinality', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_publication_tables', 'pubname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_bgwriter', 'checkpoint_sync_time', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_column_grants', 'table_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shdepend', 'dbid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_available_extension_versions', 'comment', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routine_privileges', 'specific_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_amproc', 'amprocfamily', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_policies', 'roles', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'n_ins_since_vacuum', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_views', 'definition', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_gssapi', 'encrypted', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_locks', 'objsubid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_statistic_ext', 'oid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_collation', 'collctype', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_activity', 'backend_xid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'udt_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_user_functions', 'schemaname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'autovacuum_count', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'referential_constraints', 'constraint_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'character_maximum_length', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_views', 'viewowner', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'schemata', 'schema_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_all_tables', 'relid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_language', 'lanplcallfoid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shadow', 'valuntil', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_basebackup', 'phase', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_enum', 'enumtypid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_all_tables', 'relid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'interval_type', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'domain_default', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_database', 'blk_write_time', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stacoll3', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_type', 'typoutput', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_available_extension_versions', 'version', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_cluster', 'heap_tuples_written', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'n_ins_since_vacuum', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'columns', 'is_self_referencing', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_sequence', 'seqstart', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'analyze_count', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_shdepend', 'refclassid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_auth_members', 'grantor', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_locks', 'granted', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_transform', 'oid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_server_options', 'option_value', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'view_column_usage', 'column_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'columns', 'is_identity', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'referential_constraints', 'match_option', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_domain_usage', 'column_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'last_altered', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'udt_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_xact_sys_tables', 'idx_scan', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'collation_character_set_applicability', 'collation_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routines', 'type_udt_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_policies', 'permissive', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_depend', 'objsubid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'role_udt_grants', 'is_grantable', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_datetime_precision', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_cursors', 'name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_user', 'userepl', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'numeric_precision_radix', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'constraint_column_usage', 'column_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domain_constraints', 'constraint_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_ssl', 'ssl', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_slru', 'truncates', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'character_maximum_length', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_user', 'usecreatedb', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_database', 'datallowconn', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_language', 'lanname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_indexes', 'relname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_udt_grants', 'grantor', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typmodin', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_tables', 'toast_blks_read', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'scope_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_statio_sys_tables', 'relid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_settings', 'pending_restart', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_sequences', 'sequencename', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_indexes', 'idx_scan', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_xact_user_tables', 'n_tup_ins', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'domains', 'numeric_scale', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'last_autovacuum', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'seq_tup_read', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'type_udt_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routine_privileges', 'routine_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domain_udt_usage', 'udt_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relreplident', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic_ext_data', 'stxdmcv', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_progress_create_index', 'blocks_total', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'character_maximum_length', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_subscription', 'subname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_analyze', 'ext_stats_computed', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relam', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_cluster', 'heap_blks_total', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relchecks', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_authid', 'rolconnlimit', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'parameters', 'scope_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_collation', 'collisdeterministic', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_replication', 'write_lag', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'collation_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sql_features', 'is_supported', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggnumdirectargs', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats', 'most_common_vals', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'udt_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shdepend', 'refobjid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_foreign_data_wrapper', 'fdwvalidator', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'last_vacuum', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'table_privileges', 'is_grantable', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'seq_tup_read', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_indexes', 'indexrelname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_subscription', 'relid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_bgwriter', 'checkpoint_write_time', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'domains', 'interval_type', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'data_type_privileges', 'object_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_operator', 'oprjoin', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'attribute_udt_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_all_tables', 'seq_tup_read', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_servers', 'foreign_data_wrapper_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_conversion', 'oid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'relid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'last_altered', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_udt_grants', 'udt_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routine_privileges', 'privilege_type', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'udt_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sql_features', 'feature_id', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_activity', 'client_port', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_user_tables', 'relname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stavalues5', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routine_privileges', 'routine_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_statio_sys_indexes', 'indexrelname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_vacuum', 'max_dead_tuples', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_config', 'cfgname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_policy', 'polrelid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_slru', 'blks_written', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_partitioned_table', 'partcollation', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_servers', 'oid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typmodin', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'tables', 'is_typed', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'view_column_usage', 'table_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_tables', 'tidx_blks_hit', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_tables', 'tidx_blks_read', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggmtransspace', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_tables', 'tidx_blks_hit', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_table_options', 'option_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'n_tup_upd', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'last_analyze', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_db_role_setting', 'setrole', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_create_index', 'lockers_total', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'table_privileges', 'table_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_table_options', 'foreign_table_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_auth_members', 'roleid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_statio_all_sequences', 'schemaname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'proargdefaults', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'scope_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shdepend', 'classid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'views', 'is_trigger_insertable_into', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'attidentity', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_subscription_rel', 'srsublsn', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_sys_tables', 'n_tup_upd', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_replication_slots', 'catalog_xmin', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_timezone_abbrevs', 'utc_offset', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'scope_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_user_mappings', 'srvid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_ssl', 'issuer_dn', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_indexes', 'schemaname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'check_constraint_routine_usage', 'specific_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_available_extensions', 'default_version', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_user_tables', 'relname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_constraint', 'condeferred', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_udt_grants', 'grantee', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'views', 'is_updatable', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_data_wrappers', 'authorization_identifier', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_type', 'typrelid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'data_type_privileges', 'dtd_identifier', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_parser', 'oid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_replication', 'replay_lag', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_partitioned_table', 'partattrs', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggmtransfn', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_locks', 'fastpath', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'n_tup_hot_upd', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_index', 'indcollation', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relallvisible', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'numeric_scale', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_hba_file_rules', 'line_number', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'domain_udt_usage', 'domain_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_publication', 'pubowner', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_slru', 'blks_zeroed', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stacoll2', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_trigger', 'tgparentid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_foreign_server', 'srvtype', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_indexes', 'relid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'n_mod_since_analyze', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'data_type_privileges', 'object_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shdepend', 'refclassid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'n_mod_since_analyze', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_sys_tables', 'seq_scan', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'role_usage_grants', 'object_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database', 'blks_hit', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shdepend', 'objid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_replication_slots', 'active', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_indexes', 'idx_blks_hit', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'view_table_usage', 'view_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_inherits', 'inhrelid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_analyze', 'datid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database', 'checksum_last_failure', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_event_trigger', 'evtevent', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sql_sizing', 'comments', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_operator', 'oprowner', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_type', 'typacl', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_authid', 'rolinherit', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'check_constraint_routine_usage', 'specific_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_database', 'tup_fetched', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_tables', 'schemaname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'columns', 'character_set_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stats', 'elem_count_histogram', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'constraint_table_usage', 'table_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_language', 'lanplcallfoid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_index', 'indrelid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_tables', 'toast_blks_read', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_foreign_data_wrapper', 'fdwhandler', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_create_index', 'lockers_total', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'seq_scan', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'character_maximum_length', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_collation', 'collctype', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'proargtypes', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_sys_tables', 'n_tup_del', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_wal_receiver', 'sender_host', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_analyze', 'sample_blks_scanned', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'proacl', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'attstorage', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_wal_receiver', 'received_tli', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_archiver', 'stats_reset', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'data_type', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'triggers', 'trigger_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_range', 'rngsubtype', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_trigger', 'tgparentid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_partitioned_table', 'partdefid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relhasrules', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_database', 'oid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_namespace', 'nspname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'prosecdef', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_progress_cluster', 'index_rebuild_count', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_udt_usage', 'table_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shadow', 'usecreatedb', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic_ext_data', 'stxoid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_gssapi', 'gss_authenticated', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_conversion', 'conforencoding', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggers', 'event_object_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_locks', 'fastpath', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_usage_grants', 'object_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routine_privileges', 'routine_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_udt_grants', 'grantor', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'character_set_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_prepared_xacts', 'database', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_operator', 'oprowner', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'collation_character_set_applicability', 'collation_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domain_constraints', 'constraint_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_locks', 'transactionid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_indexes', 'schemaname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_archiver', 'last_archived_wal', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'character_maximum_length', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'reltype', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_trigger', 'tgisinternal', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_dict', 'dictinitoption', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'schemaname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'numeric_scale', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'maximum_cardinality', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'role_udt_grants', 'grantor', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_depend', 'deptype', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'constraint_table_usage', 'constraint_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'ordinal_position', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_default_acl', 'defaclobjtype', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'domains', 'domain_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'reltype', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_subscription', 'subpublications', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_user_indexes', 'idx_scan', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_interval_type', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_table_grants', 'is_grantable', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_user_tables', 'n_tup_ins', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stawidth', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'parameters', 'specific_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stainherit', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sequences', 'minimum_value', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'element_types', 'scope_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_activity', 'query', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'usage_privileges', 'privilege_type', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_config', 'setting', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'to_sql_specific_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'confrelid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_language', 'laninline', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'domain_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'relname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stacoll4', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shdescription', 'description', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_server_options', 'foreign_server_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_tables', 'heap_blks_hit', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_available_extensions', 'installed_version', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_timezone_names', 'utc_offset', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_create_index', 'pid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_collation', 'collnamespace', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'n_tup_upd', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_tables', 'tidx_blks_read', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_foreign_data_wrapper', 'fdwacl', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typalign', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typtypmod', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'column_udt_usage', 'udt_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relfilenode', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'view_column_usage', 'column_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_policy', 'polwithcheck', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_functions', 'total_time', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'udt_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'columns', 'identity_increment', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_table_options', 'foreign_table_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_extension', 'extrelocatable', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'key_column_usage', 'constraint_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_indexes', 'indexrelid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_description', 'classoid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_column_usage', 'column_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_init_privs', 'objoid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'character_set_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats', 'histogram_bounds', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_statio_user_tables', 'toast_blks_hit', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_policies', 'roles', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'view_routine_usage', 'table_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'collations', 'collation_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shadow', 'usecreatedb', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'maximum_cardinality', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_index', 'indisexclusion', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database', 'conflicts', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_create_index', 'lockers_done', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_indexes', 'idx_scan', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'domain_default', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'parameters', 'is_result', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_subscription', 'relid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_user_mappings', 'srvname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_collation_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats_ext', 'dependencies', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_sequences', 'blks_read', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routines', 'character_set_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_dtd_identifier', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_timezone_names', 'abbrev', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_group', 'grolist', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'key_column_usage', 'table_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_authid', 'rolcreaterole', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_file_settings', 'sourceline', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'check_constraint_routine_usage', 'specific_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_dict', 'dictname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_sequence', 'seqrelid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_indexes', 'schemaname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_udt_usage', 'column_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'usage_privileges', 'object_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stakind3', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_index', 'indisready', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'constraint_table_usage', 'table_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_config', 'setting', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_database', 'datdba', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggmtransspace', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_settings', 'boot_val', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_replication', 'sync_state', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_cast', 'castsource', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_file_settings', 'seqno', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_transform', 'oid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_seclabel', 'classoid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'n_live_tup', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'character_set_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_policies', 'policyname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'conpfeqop', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_description', 'classoid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'character_octet_length', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_database', 'datminmxid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'attname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'coninhcount', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_settings', 'context', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_tables', 'toast_blks_read', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_type_udt_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_partitioned_table', 'partstrat', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'constraint_column_usage', 'constraint_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_tables', 'idx_blks_hit', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_collation_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'foreign_data_wrappers', 'foreign_data_wrapper_language', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_table_grants', 'table_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'character_set_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_sequences', 'sequenceowner', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'foreign_table_options', 'option_value', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'data_type', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'character_octet_length', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic_ext', 'stxowner', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_user_mappings', 'umuser', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stavalues2', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_locks', 'objid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'autovacuum_count', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_replication', 'application_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'object_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_init_privs', 'objsubid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_data_wrappers', 'foreign_data_wrapper_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggminitval', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'user_defined_types', 'ordering_category', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_attribute', 'atthasdef', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'autoanalyze_count', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_foreign_server', 'srvfdw', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'schemata', 'schema_owner', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'character_maximum_length', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'idx_scan', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_servers', 'foreign_data_wrapper_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'n_dead_tup', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'view_routine_usage', 'specific_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'staop2', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'character_octet_length', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_conversion', 'conforencoding', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'maximum_cardinality', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database', 'temp_files', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'to_sql_specific_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shdepend', 'deptype', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_functions', 'funcid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_char_set_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_servers', 'foreign_server_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'last_autovacuum', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'constraint_column_usage', 'table_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_available_extension_versions', 'installed', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_prepared_xacts', 'database', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_hba_file_rules', 'address', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_rewrite', 'ev_action', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_vacuum', 'num_dead_tuples', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_authid', 'rolpassword', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_activity', 'query_start', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_indexes', 'tablename', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'last_analyze', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_available_extension_versions', 'superuser', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_foreign_server', 'srvacl', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'views', 'is_trigger_insertable_into', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'ordering_category', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'datetime_precision', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'domain_constraints', 'constraint_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_timezone_names', 'is_dst', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_subscription', 'subconninfo', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'type_udt_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_table_grants', 'grantee', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_functions', 'self_time', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'check_constraint_routine_usage', 'specific_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_routine_grants', 'specific_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_vacuum', 'phase', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'applicable_roles', 'is_grantable', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sql_implementation_info', 'implementation_info_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_namespace', 'oid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_statio_user_tables', 'schemaname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_partitioned_table', 'partrelid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'collation_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_largeobject', 'data', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'constraint_table_usage', 'constraint_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_indexes', 'indexrelname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_column_grants', 'table_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_foreign_server', 'srvtype', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database', 'xact_rollback', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'transforms', 'specific_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_rewrite', 'ev_enabled', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'character_set_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_locks', 'pid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_datetime_precision', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stavalues3', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'data_type', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'pronamespace', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_sequences', 'cycle', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_depend', 'refobjid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_config', 'cfgname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats_ext', 'schemaname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_settings', 'source', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'element_types', 'collation_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'attalign', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'interval_precision', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_opclass', 'opcintype', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_bgwriter', 'buffers_alloc', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_prepared_xacts', 'transaction', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats_ext', 'most_common_val_nulls', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_am', 'amhandler', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sql_parts', 'is_supported', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'view_routine_usage', 'specific_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_prepared_statements', 'statement', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats', 'most_common_elem_freqs', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats_ext', 'n_distinct', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'routine_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_indexes', 'tablename', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_tables', 'foreign_table_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggmtranstype', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'view_table_usage', 'table_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_operator', 'oprcom', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_tables', 'foreign_table_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shseclabel', 'label', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_indexes', 'indexrelid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'collation_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_indexes', 'relname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_tables', 'heap_blks_read', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'udt_privileges', 'udt_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggmtransspace', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_sequences', 'sequencename', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_attrdef', 'adbin', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_init_privs', 'privtype', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_operator', 'oprnamespace', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_numeric_scale', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_dict', 'oid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'contype', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'to_sql_specific_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'conppeqop', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_inherits', 'inhparent', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_sequences', 'blks_hit', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_data_wrappers', 'fdwowner', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_subscription', 'subslotname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_extension', 'extversion', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'character_set_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stadistinct', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_init_privs', 'objsubid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typispreferred', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shmem_allocations', 'off', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'autovacuum_count', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'view_column_usage', 'view_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'prokind', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_routine_grants', 'routine_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggmtransspace', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_routine_grants', 'is_grantable', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'triggered_update_columns', 'event_object_table', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typcollation', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_rewrite', 'rulename', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_default_acl', 'defaclnamespace', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_mappings', 'foreign_server_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'key_column_usage', 'position_in_unique_constraint', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_attribute', 'attcacheoff', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_ssl', 'client_dn', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic_ext_data', 'stxddependencies', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'n_ins_since_vacuum', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'tables', 'reference_generation', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_user_mapping', 'umoptions', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_available_extensions', 'name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_seclabels', 'provider', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_shseclabel', 'classoid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'seq_tup_read', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_dict', 'dictinitoption', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_operator', 'oprcanhash', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_sequences', 'blks_hit', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_file_settings', 'sourcefile', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'element_types', 'datetime_precision', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_index', 'indisvalid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_index', 'indisunique', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_user_tables', 'schemaname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_servers', 'foreign_data_wrapper_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_user_tables', 'idx_scan', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_largeobject_metadata', 'lomowner', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_create_index', 'relid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_replication_origin_status', 'external_id', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_basebackup', 'tablespaces_streamed', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'dtd_identifier', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_enum', 'oid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'check_constraints', 'constraint_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'type_udt_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'numeric_precision_radix', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_tables', 'heap_blks_read', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'collation_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_proc', 'proparallel', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'attoptions', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_interval_type', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_policy', 'polname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'column_options', 'table_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_conversion', 'contoencoding', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'interval_type', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'contypid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggcombinefn', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_char_set_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'view_table_usage', 'table_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'tables', 'commit_action', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_vacuum', 'heap_blks_total', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_user_mapping', 'umserver', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_indexes', 'idx_blks_hit', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routines', 'result_cast_collation_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_tables', 'hastriggers', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'n_tup_hot_upd', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'transforms', 'specific_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_tables', 'tidx_blks_hit', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_data_wrappers', 'authorization_identifier', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'dtd_identifier', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'is_null_call', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_partitioned_table', 'partcollation', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_description', 'classoid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_replication_slots', 'xmin', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'collations', 'collation_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'view_routine_usage', 'table_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats', 'schemaname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'constraint_column_usage', 'table_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'reltuples', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_foreign_server', 'srvacl', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_seclabel', 'classoid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_language', 'lanpltrusted', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_locks', 'tuple', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_template', 'tmplinit', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sql_parts', 'is_verified_by', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'check_constraints', 'constraint_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'table_constraints', 'table_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_servers', 'foreign_server_version', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_wal_receiver', 'flushed_lsn', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_table_options', 'foreign_table_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'transforms', 'transform_type', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_collation', 'collencoding', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'scope_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_matviews', 'definition', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_database', 'datdba', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_indexes', 'idx_tup_fetch', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_conversion', 'contoencoding', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_user_tables', 'n_tup_del', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_hba_file_rules', 'options', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_subscription', 'received_lsn', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_operator', 'oprrest', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_bgwriter', 'buffers_backend', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_policy', 'polqual', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_index', 'indisexclusion', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_timezone_abbrevs', 'abbrev', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_tablespace', 'spcoptions', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_functions', 'schemaname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_privileges', 'grantee', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typmodout', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_trigger', 'oid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_vacuum', 'index_vacuum_count', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'check_constraint_routine_usage', 'specific_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_sequence', 'seqmax', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'parameters', 'udt_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_servers', 'authorization_identifier', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_sequences', 'min_value', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'idx_scan', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'schemata', 'schema_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_vacuum', 'relid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'element_types', 'dtd_identifier', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'as_locator', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'proallargtypes', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'view_routine_usage', 'table_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_column_grants', 'privilege_type', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_transform', 'trflang', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'parameters', 'specific_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'tables', 'is_typed', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_operator', 'oprright', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_analyze', 'datid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_user_mapping', 'umuser', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_create_index', 'blocks_done', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_basebackup', 'backup_total', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_config', 'cfgowner', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_settings', 'unit', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sequences', 'sequence_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_locks', 'relation', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'to_sql_specific_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'data_type', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_statio_user_tables', 'relid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_privileges', 'table_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stats', 'schemaname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sequences', 'maximum_value', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_indexes', 'relname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'user_defined_types', 'user_defined_type_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_trigger', 'tginitdeferred', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_server_options', 'option_value', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_statio_user_indexes', 'idx_blks_read', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sequences', 'numeric_scale', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'parameters', 'ordinal_position', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'attlen', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_wal_receiver', 'receive_start_lsn', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_analyze', 'ext_stats_computed', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'collation_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_replication', 'replay_lsn', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'as_locator', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_routine_grants', 'routine_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_index', 'indisunique', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggfinalmodify', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_user', 'useconfig', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stakind1', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_all_indexes', 'schemaname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_wal_receiver', 'last_msg_send_time', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_description', 'objoid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_tables', 'idx_blks_read', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_cursors', 'is_binary', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'domains', 'dtd_identifier', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'attnotnull', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_locks', 'virtualtransaction', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggers', 'action_reference_new_table', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database', 'tup_deleted', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_trigger', 'tgnewtable', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_sequences', 'min_value', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_data_wrapper_options', 'option_value', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_depend', 'objsubid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_sequences', 'cache_size', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shseclabel', 'provider', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_replication', 'sync_priority', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'scope_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'view_column_usage', 'view_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'triggers', 'trigger_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_extension', 'extconfig', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_tables', 'toast_blks_read', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'specific_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_user_mappings', 'foreign_server_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_index', 'indisprimary', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_operator', 'oprcode', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'collation_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_mapping_options', 'authorization_identifier', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_parser', 'prsstart', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_wal_receiver', 'received_tli', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_policy', 'polcmd', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'idx_tup_fetch', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'seq_tup_read', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_indexes', 'relname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_domain_usage', 'domain_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_data_wrapper_options', 'option_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_operator', 'oprname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'is_nullable', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_user', 'usebypassrls', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_slru', 'blks_written', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'key_column_usage', 'ordinal_position', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_replication', 'reply_time', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_policies', 'permissive', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_partitioned_table', 'partclass', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_column_grants', 'is_grantable', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_range', 'rngsubopc', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_publication', 'pubowner', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_publication', 'pubviaroot', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_sequence', 'seqcache', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_locks', 'locktype', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relpages', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_foreign_data_wrapper', 'fdwoptions', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'scope_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'character_octet_length', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'usage_privileges', 'object_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_data_wrappers', 'foreign_data_wrapper_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_replication_origin', 'roname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_conversion', 'conname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relhasindex', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_depend', 'deptype', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'n_ins_since_vacuum', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'collation_character_set_applicability', 'character_set_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'views', 'view_definition', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'dtd_identifier', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'collation_character_set_applicability', 'collation_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typarray', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database', 'tup_updated', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_column_grants', 'table_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'schemata', 'sql_path', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_rules', 'tablename', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'collation_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'attacl', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_default_acl', 'defaclnamespace', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_matviews', 'schemaname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_foreign_data_wrapper', 'fdwname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_activity', 'datid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'views', 'is_trigger_updatable', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_operator', 'oprcode', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sql_features', 'sub_feature_id', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'prosecdef', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_table_grants', 'grantor', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'referential_constraints', 'match_option', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_amop', 'amopstrategy', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_analyze', 'sample_blks_total', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_indexes', 'idx_scan', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'attributes', 'dtd_identifier', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_tables', 'foreign_table_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_wal_receiver', 'receive_start_tli', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database', 'checksum_last_failure', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'scope_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats_ext', 'most_common_base_freqs', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_vacuum', 'heap_blks_scanned', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_extension', 'extname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'data_type', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_sequences', 'relid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'oid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_xact_user_tables', 'seq_scan', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stacoll4', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sequences', 'data_type', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'interval_precision', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_sequences', 'schemaname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_roles', 'rolcreatedb', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_activity', 'pid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'referential_constraints', 'update_rule', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database', 'xact_rollback', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_tables', 'heap_blks_hit', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_sequences', 'blks_read', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_udt_usage', 'table_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'autoanalyze_count', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'views', 'is_updatable', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'character_set_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_operator', 'oprrest', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_user_tables', 'idx_tup_fetch', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_indexes', 'idx_tup_read', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_seclabels', 'objname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'proowner', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'confdeltype', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'key_column_usage', 'constraint_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_index', 'indnatts', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'table_privileges', 'grantor', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_tables', 'schemaname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'element_types', 'object_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_database', 'oid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'collation_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_indexes', 'indexrelid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_all_tables', 'seq_scan', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_mapping_options', 'option_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'character_set_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_conversion', 'conowner', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_privileges', 'table_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_tables', 'tidx_blks_read', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_database', 'datlastsysoid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'character_octet_length', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_operator', 'oprcom', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'character_sets', 'character_set_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'character_set_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_from_data_type', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_sequence', 'seqcache', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_sequences', 'min_value', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shadow', 'passwd', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_locks', 'locktype', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_roles', 'rolreplication', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_ssl', 'version', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'character_octet_length', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'conexclop', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'routine_body', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_ssl', 'issuer_dn', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_bgwriter', 'checkpoint_write_time', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_usage_grants', 'grantee', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_activity', 'backend_xid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_sequences', 'data_type', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'last_vacuum', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_hba_file_rules', 'type', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_analyze', 'relid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_constraint', 'confupdtype', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_rewrite', 'ev_class', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'user_defined_type_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'autovacuum_count', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'domains', 'domain_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_tablespace', 'spcacl', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic_ext', 'stxrelid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_partitioned_table', 'partrelid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_statio_all_tables', 'tidx_blks_read', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_subscription', 'subdbid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routine_privileges', 'specific_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_user_tables', 'relid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routines', 'udt_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic_ext', 'stxkind', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_seclabels', 'provider', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_index', 'indpred', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database', 'numbackends', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggers', 'action_orientation', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_subscription', 'received_lsn', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats_ext', 'schemaname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_udt_usage', 'table_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_seclabel', 'objoid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_activity', 'usename', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_roles', 'oid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_activity', 'client_addr', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'columns', 'collation_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'prolang', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_xact_all_tables', 'seq_tup_read', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stavalues2', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'triggered_update_columns', 'event_object_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'specific_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_indexes', 'relname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_hba_file_rules', 'address', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic_ext', 'stxkeys', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'user_defined_types', 'interval_type', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_cluster', 'datid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_settings', 'extra_desc', 'UPDATE', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'interval_type', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_class', 'relhassubclass', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_sys_tables', 'seq_tup_read', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'character_set_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_amop', 'amopmethod', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_template', 'tmplname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_table_grants', 'table_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relchecks', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggers', 'event_object_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_publication', 'pubtruncate', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_type', 'typmodout', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_default_acl', 'defaclrole', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggers', 'action_statement', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'n_tup_del', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'conppeqop', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_subscription_rel', 'srsubid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typsend', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'schemata', 'default_character_set_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_available_extensions', 'comment', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'parameters', 'character_set_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_all_tables', 'n_tup_ins', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'collation_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_collation', 'collctype', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'role_table_grants', 'grantee', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_settings', 'setting', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_depend', 'objsubid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'table_privileges', 'grantee', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_trigger', 'tgrelid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_cursors', 'is_holdable', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_cast', 'castcontext', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_foreign_data_wrapper', 'fdwowner', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_replication_origin', 'roident', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_roles', 'rolname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_policies', 'with_check', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_wal_receiver', 'written_lsn', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sequences', 'start_value', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_column_grants', 'privilege_type', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_locks', 'tuple', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routine_privileges', 'grantor', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_description', 'objsubid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_publication_rel', 'oid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_collation_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_depend', 'classid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'udt_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_collation_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routine_privileges', 'routine_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'tables', 'commit_action', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_replication_origin', 'roident', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routines', 'result_cast_dtd_identifier', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_config_map', 'mapseqno', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_index', 'indisunique', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_locks', 'virtualxid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_indexes', 'indexdef', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_enum', 'oid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'triggers', 'action_reference_old_table', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'character_set_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'type_udt_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_database', 'tup_returned', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'udt_privileges', 'privilege_type', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_sequence', 'seqmin', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'autoanalyze_count', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'numeric_precision', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_indexes', 'idx_blks_hit', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'datetime_precision', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_progress_analyze', 'sample_blks_scanned', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'attlen', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_auth_members', 'roleid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_activity', 'state_change', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'udt_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'parameters', 'collation_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'udt_privileges', 'grantee', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'view_table_usage', 'table_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_database', 'datdba', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'triggers', 'action_statement', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_class', 'relacl', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_cast', 'oid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_all_tables', 'idx_tup_fetch', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'idx_scan', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database', 'xact_commit', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggnumdirectargs', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_user', 'passwd', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_bgwriter', 'buffers_backend', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database', 'tup_returned', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'character_set_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'last_autoanalyze', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relam', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_routine_grants', 'routine_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_shseclabel', 'provider', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_numeric_precision', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_replication_slots', 'wal_status', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_tables', 'idx_blks_read', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shadow', 'usebypassrls', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_analyze', 'child_tables_done', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_database', 'datfrozenxid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_tables', 'tablespace', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_locks', 'virtualxid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routines', 'routine_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sequences', 'sequence_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_numeric_precision', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shseclabel', 'objoid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'transforms', 'transform_type', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_type', 'typlen', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'scope_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_proc', 'proargmodes', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'transforms', 'specific_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_replication', 'backend_xmin', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_cast', 'castfunc', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_seclabel', 'label', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_basebackup', 'backup_streamed', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_wal_receiver', 'latest_end_time', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shdepend', 'objsubid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_all_tables', 'idx_scan', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'conkey', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_matviews', 'hasindexes', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'provolatile', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_sequences', 'blks_hit', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_range', 'rngcollation', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_user_mappings', 'umid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_user_tables', 'n_tup_ins', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'applicable_roles', 'role_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_available_extension_versions', 'installed', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_publication', 'pubupdate', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_indexes', 'indexrelname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_sequence', 'seqmin', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_servers', 'foreign_server_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_amop', 'oid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_config_map', 'mapdict', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_sequences', 'schemaname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stats', 'most_common_elem_freqs', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_data_wrappers', 'foreign_data_wrapper_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_opclass', 'opcmethod', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_tables', 'toast_blks_read', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_event_trigger', 'evtname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'interval_precision', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typdefaultbin', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'vacuum_count', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_routine_grants', 'routine_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sql_sizing', 'comments', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_available_extensions', 'default_version', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_xact_all_tables', 'seq_scan', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_group', 'groname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_trigger', 'tgqual', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typmodout', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_roles', 'rolcreatedb', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'domain_default', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_matviews', 'ispopulated', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sql_parts', 'comments', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_largeobject', 'loid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_privileges', 'grantor', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_user_mappings', 'umuser', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'parameters', 'parameter_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_partitioned_table', 'partclass', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_trigger', 'tgconstrrelid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_seclabel', 'provider', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_all_tables', 'n_tup_hot_upd', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_basebackup', 'backup_streamed', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'domain_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_operator', 'oprrest', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sequences', 'sequence_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggers', 'trigger_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_user_tables', 'seq_scan', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_domain_usage', 'domain_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routines', 'result_cast_interval_precision', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_cast', 'oid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relpartbound', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_attribute', 'atthasmissing', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database_conflicts', 'datname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats_ext', 'most_common_vals', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_settings', 'category', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relallvisible', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_analyze', 'relid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_privileges', 'table_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'tables', 'table_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_trigger', 'tgfoid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'check_constraint_routine_usage', 'specific_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'character_set_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_wal_receiver', 'status', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'collations', 'collation_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'scope_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_functions', 'total_time', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database_conflicts', 'confl_lock', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_default_acl', 'defaclacl', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_replication_slots', 'slot_type', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_sequence', 'seqcache', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_wal_receiver', 'pid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typcategory', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'interval_precision', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_locks', 'virtualxid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_description', 'description', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_mapping_options', 'option_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shdescription', 'objoid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_sequences', 'schemaname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domain_constraints', 'domain_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'scope_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_column_grants', 'table_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'analyze_count', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'scope_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggered_update_columns', 'trigger_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_mapping_options', 'foreign_server_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_dict', 'oid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_create_index', 'tuples_total', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routines', 'to_sql_specific_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database', 'blk_read_time', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shmem_allocations', 'off', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_locks', 'granted', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_event_trigger', 'evtenabled', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'is_self_referencing', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_analyze', 'current_child_table_relid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_indexes', 'indexrelname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'referential_constraints', 'constraint_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stanumbers2', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_index', 'indpred', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attrdef', 'adnum', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_sequences', 'schemaname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'datetime_precision', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_tables', 'foreign_table_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_bgwriter', 'buffers_clean', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_data_wrappers', 'library_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_language', 'lanacl', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic_ext', 'stxkind', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_file_settings', 'name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database', 'datid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_auth_members', 'grantor', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'table_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'character_octet_length', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_user_functions', 'self_time', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_privileges', 'table_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'collation_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_create_index', 'partitions_done', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'element_types', 'character_octet_length', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'staop3', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_depend', 'objid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_timezone_names', 'utc_offset', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_subscription', 'received_lsn', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'user_defined_types', 'ordering_routine_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_progress_cluster', 'heap_tuples_written', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'character_maximum_length', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_seclabels', 'objname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'udt_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_foreign_server', 'srvacl', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'last_analyze', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'n_tup_del', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_available_extensions', 'installed_version', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggered_update_columns', 'event_object_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_routine_grants', 'routine_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_attribute', 'atttypid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_authid', 'rolconnlimit', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_activity', 'pid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'referential_constraints', 'constraint_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shadow', 'usesysid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'interval_type', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'max_dynamic_result_sets', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relkind', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_collation', 'oid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_indexes', 'schemaname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stakind4', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_column_grants', 'table_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_create_index', 'datid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_replication', 'client_port', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_hba_file_rules', 'options', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_all_indexes', 'indexrelname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'view_column_usage', 'table_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_data_wrapper_options', 'option_value', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'collation_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_hba_file_rules', 'error', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'view_routine_usage', 'table_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'numeric_scale', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_locks', 'virtualtransaction', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'columns', 'is_nullable', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_opfamily', 'opfowner', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_gssapi', 'principal', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'autovacuum_count', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_proc', 'prosecdef', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_cursors', 'is_holdable', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'usage_privileges', 'object_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_seclabels', 'provider', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_seclabel', 'label', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_partitioned_table', 'partnatts', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_config_map', 'mapcfg', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_language', 'lanpltrusted', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relfrozenxid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_depend', 'deptype', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_sequences', 'sequencename', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'parameter_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'conname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_user_tables', 'seq_scan', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'oid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_settings', 'vartype', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_amproc', 'amproclefttype', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'n_tup_ins', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_collation', 'collversion', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'maximum_cardinality', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_language', 'lanispl', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_replication', 'client_port', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_activity', 'backend_xmin', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'interval_precision', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_foreign_table', 'ftrelid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'collation_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'relname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_domain_usage', 'domain_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats_ext', 'statistics_schemaname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_amop', 'amopfamily', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'maximum_cardinality', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'table_privileges', 'privilege_type', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_sys_tables', 'n_tup_hot_upd', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sequences', 'sequence_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relisshared', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_namespace', 'nspowner', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_largeobject_metadata', 'lomowner', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'character_set_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'scope_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_subscription_rel', 'srsublsn', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routine_privileges', 'specific_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_server_options', 'foreign_server_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_settings', 'vartype', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_tables', 'schemaname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'transforms', 'specific_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'n_dead_tup', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_range', 'rngsubtype', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database_conflicts', 'confl_snapshot', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_basebackup', 'phase', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routine_privileges', 'routine_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'foreign_data_wrapper_options', 'foreign_data_wrapper_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_bgwriter', 'checkpoints_timed', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'scope_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_ssl', 'pid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'attmissingval', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_locks', 'granted', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_largeobject_metadata', 'oid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_am', 'amname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_tables', 'hastriggers', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_statio_user_sequences', 'schemaname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database', 'tup_returned', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'udt_privileges', 'udt_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'collation_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_rewrite', 'ev_class', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'referential_constraints', 'update_rule', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_indexes', 'relname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_data_wrappers', 'foreign_data_wrapper_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_matviews', 'definition', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_table_grants', 'grantee', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shdepend', 'objsubid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_locks', 'transactionid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_wal_receiver', 'status', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'last_vacuum', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'domain_udt_usage', 'udt_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_timezone_names', 'utc_offset', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_tables', 'ftoptions', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_am', 'oid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_init_privs', 'initprivs', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_ssl', 'compression', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_user', 'userepl', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic_ext_data', 'stxdmcv', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_archiver', 'last_archived_wal', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_locks', 'transactionid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'role_usage_grants', 'privilege_type', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_indexes', 'idx_tup_fetch', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_constraint', 'conname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shdepend', 'dbid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'attalign', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_conversion', 'connamespace', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'data_type_privileges', 'dtd_identifier', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'udt_privileges', 'grantor', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_opclass', 'opcnamespace', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'collation_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_sys_tables', 'idx_tup_fetch', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database', 'xact_commit', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_create_index', 'tuples_done', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'schemaname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_policy', 'polqual', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_progress_analyze', 'pid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_am', 'amtype', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domain_udt_usage', 'udt_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'key_column_usage', 'table_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_database', 'xact_rollback', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_user', 'valuntil', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'last_autovacuum', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database', 'deadlocks', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_servers', 'authorization_identifier', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_replication_origin_status', 'local_id', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_privileges', 'column_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'view_column_usage', 'view_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stavalues3', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_opclass', 'opcmethod', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'type_udt_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_language', 'lanispl', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shadow', 'usesuper', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'identity_start', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'referential_constraints', 'unique_constraint_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'character_set_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_foreign_server', 'srvtype', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_depend', 'objid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'last_autovacuum', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_archiver', 'stats_reset', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_ts_config_map', 'mapdict', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_description', 'objsubid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_options', 'option_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_replication', 'sent_lsn', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'udt_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'tables', 'user_defined_type_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'referential_constraints', 'unique_constraint_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typoutput', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'scope_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shadow', 'usename', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_sequences', 'last_value', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'relid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sql_sizing', 'sizing_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typarray', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_file_settings', 'sourceline', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_indexes', 'idx_tup_fetch', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_basebackup', 'tablespaces_streamed', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_settings', 'category', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'data_type', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'attcacheoff', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'attributes', 'udt_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'foreign_table_options', 'foreign_table_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggers', 'trigger_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_locks', 'mode', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'collation_character_set_applicability', 'collation_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_parser', 'prsnamespace', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'character_set_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_indexes', 'indexdef', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_xact_user_functions', 'funcname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggsortop', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'domain_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'numeric_scale', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_tables', 'tidx_blks_hit', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_slru', 'name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_type', 'typsend', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_database', 'datid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'attribute_udt_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'n_tup_ins', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_indexes', 'idx_tup_fetch', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_amop', 'amopstrategy', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'dtd_identifier', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_user', 'usesuper', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_user_mapping', 'oid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'proretset', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_matviews', 'ispopulated', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_extension', 'extname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_indexes', 'tablename', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_settings', 'setting', 'UPDATE', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'view_column_usage', 'table_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'is_user_defined_cast', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggers', 'trigger_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'attribute_default', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'scope_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_subscription', 'oid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_subscription', 'subname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relisshared', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_constraint', 'confmatchtype', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'tables', 'is_insertable_into', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_index', 'indcheckxmin', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_activity', 'backend_type', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_partitioned_table', 'partclass', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database', 'tup_updated', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_rules', 'tablename', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_analyze', 'datname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'created', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_sequences', 'relid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'user_defined_types', 'ordering_form', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'numeric_precision', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_opclass', 'oid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_user', 'usesysid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'attisdropped', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_data_wrappers', 'foreign_data_wrapper_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_locks', 'locktype', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shadow', 'passwd', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'character_sets', 'form_of_use', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'reltoastrelid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_indexes', 'schemaname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_column_usage', 'table_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggmfinalmodify', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_indexes', 'indexrelname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'maximum_cardinality', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'domains', 'data_type', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_sequences', 'increment_by', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_data_wrappers', 'authorization_identifier', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stanumbers1', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_database', 'dattablespace', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domain_udt_usage', 'udt_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routine_privileges', 'is_grantable', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'tables', 'table_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'usage_privileges', 'object_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'key_column_usage', 'table_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shmem_allocations', 'size', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_locks', 'objsubid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_trigger', 'tgtype', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'ordinal_position', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_vacuum', 'index_vacuum_count', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_numeric_precision_radix', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_available_extensions', 'default_version', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_indexes', 'indexrelname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_opfamily', 'opfowner', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'column_domain_usage', 'column_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'vacuum_count', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'condeferred', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_roles', 'rolbypassrls', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_statio_all_tables', 'relid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_all_tables', 'idx_tup_fetch', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_amproc', 'amproc', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_indexes', 'schemaname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic_ext_data', 'stxdndistinct', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_hba_file_rules', 'auth_method', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stanumbers5', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_routine_grants', 'is_grantable', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_indexes', 'schemaname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'character_set_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'staop2', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relhassubclass', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_slru', 'truncates', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic_ext', 'stxstattarget', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_analyze', 'datid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'tables', 'table_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_activity', 'client_port', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'udt_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_sys_tables', 'seq_scan', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domain_udt_usage', 'udt_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_servers', 'foreign_server_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_rewrite', 'ev_class', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_trigger', 'tgnewtable', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_partitioned_table', 'partstrat', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'table_constraints', 'enforced', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_indexes', 'schemaname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'column_privileges', 'table_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_tables', 'foreign_server_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'transforms', 'udt_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_class', 'relispopulated', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_usage_grants', 'is_grantable', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'user_defined_type_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stakind1', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_locks', 'fastpath', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_indexes', 'schemaname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_sys_tables', 'seq_tup_read', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_activity', 'usename', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'data_type_privileges', 'object_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_dict', 'dicttemplate', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_roles', 'rolvaliduntil', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_bgwriter', 'buffers_backend', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_replication', 'usename', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'columns', 'is_updatable', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_publication', 'oid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_user_mappings', 'umoptions', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_user', 'useconfig', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'collations', 'collation_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shdepend', 'dbid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_subscription_rel', 'srsublsn', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'object_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'numeric_scale', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_language', 'lanname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_constraint', 'conkey', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_bgwriter', 'buffers_checkpoint', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'n_mod_since_analyze', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_parser', 'prsend', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggtransspace', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_publication', 'oid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_rules', 'rulename', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'external_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_attribute', 'attnotnull', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggers', 'trigger_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_index', 'indisclustered', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggtransspace', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_table_grants', 'privilege_type', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_options', 'table_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'last_autovacuum', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_config', 'cfgowner', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domain_udt_usage', 'domain_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_tablespace', 'spcacl', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_options', 'option_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggered_update_columns', 'event_object_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'triggered_update_columns', 'trigger_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_servers', 'foreign_server_type', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'reloptions', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'udt_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_operator', 'oprkind', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'scope_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_conversion', 'conproc', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_index', 'indexrelid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_operator', 'oprname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggmfinalextra', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_replication_slots', 'datoid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'n_tup_del', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_user_tables', 'relname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'interval_precision', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'n_tup_ins', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_attribute', 'attacl', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'staattnum', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_tables', 'relid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_activity', 'datid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_publication', 'puballtables', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typstorage', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_user', 'usesysid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_policies', 'schemaname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggminitval', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_indexes', 'relname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'usage_privileges', 'is_grantable', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'data_type', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_views', 'viewowner', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'numeric_precision', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'character_sets', 'character_set_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stakind1', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'interval_precision', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_foreign_server', 'srvowner', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'views', 'table_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_xact_user_tables', 'idx_scan', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_opclass', 'oid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'oid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_column_grants', 'is_grantable', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_rewrite', 'oid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_timezone_names', 'is_dst', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'domain_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shdepend', 'classid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_wal_receiver', 'pid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_usage_grants', 'object_type', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_proc', 'proallargtypes', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_database', 'datname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_create_index', 'datname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_char_set_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats_ext', 'tablename', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_timezone_names', 'name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'character_set_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_user', 'valuntil', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typnotnull', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'staop3', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'view_routine_usage', 'table_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_range', 'rngtypid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_depend', 'refclassid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_archiver', 'failed_count', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_operator', 'oprleft', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_data_wrappers', 'foreign_data_wrapper_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_trigger', 'oid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_wal_receiver', 'last_msg_receipt_time', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typbyval', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'table_privileges', 'table_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'collation_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'view_table_usage', 'view_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_opclass', 'opcfamily', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_index', 'indisready', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routines', 'routine_body', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_indexes', 'indexrelid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'key_column_usage', 'table_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'character_maximum_length', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'character_set_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'scope_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'role_udt_grants', 'privilege_type', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_sequence', 'seqcycle', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'views', 'check_option', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_tables', 'heap_blks_hit', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggcombinefn', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_db_role_setting', 'setconfig', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_servers', 'foreign_server_type', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_indexes', 'indexrelid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_tables', 'schemaname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_trigger', 'tgattr', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routine_privileges', 'grantor', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'columns', 'character_set_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'sequences', 'sequence_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_cursors', 'is_binary', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'tables', 'reference_generation', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'schemaname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_user_mappings', 'authorization_identifier', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_progress_create_index', 'tuples_done', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'as_locator', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typbyval', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'tables', 'table_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'check_constraints', 'constraint_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_column_grants', 'grantor', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'column_udt_usage', 'column_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'tables', 'user_defined_type_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_collation', 'collversion', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_matviews', 'schemaname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_tables', 'idx_blks_read', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_cluster', 'index_rebuild_count', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routine_privileges', 'grantee', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_tables', 'idx_blks_read', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_trigger', 'tgenabled', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_replication_origin_status', 'local_lsn', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_privileges', 'table_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database_conflicts', 'confl_snapshot', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_all_tables', 'n_tup_ins', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggfnoid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'ordinal_position', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_tables', 'idx_blks_read', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_progress_analyze', 'relid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'character_maximum_length', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_progress_analyze', 'child_tables_done', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_amop', 'amopsortfamily', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'check_constraint_routine_usage', 'constraint_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_amproc', 'amprocfamily', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_rewrite', 'is_instead', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shdepend', 'refclassid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_sequence', 'seqmax', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domain_udt_usage', 'domain_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_indexes', 'relid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_replication', 'sent_lsn', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'conrelid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggmtransspace', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'collation_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_data_wrappers', 'fdwoptions', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats', 'most_common_elems', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'tables', 'table_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relchecks', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_server_options', 'foreign_server_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'constraint_table_usage', 'table_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'seq_scan', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_scope_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domain_constraints', 'constraint_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_roles', 'rolsuper', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'udt_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_activity', 'backend_xmin', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_indexes', 'relid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_foreign_server', 'srvtype', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database', 'datname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shadow', 'usecreatedb', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'table_constraints', 'enforced', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'administrable_role_authorizations', 'grantee', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_amproc', 'amprocfamily', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_user_functions', 'schemaname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_roles', 'rolpassword', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_servers', 'foreign_server_type', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'views', 'table_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggered_update_columns', 'event_object_table', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shadow', 'userepl', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_default_acl', 'defaclobjtype', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats_ext', 'statistics_owner', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'referential_constraints', 'constraint_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_sys_tables', 'seq_scan', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggers', 'action_order', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'conpfeqop', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'proargnames', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'protrftypes', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_foreign_data_wrapper', 'fdwvalidator', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_foreign_table', 'ftrelid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_seclabel', 'provider', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_mappings', 'authorization_identifier', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'identity_maximum', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_vacuum', 'heap_blks_total', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'table_privileges', 'table_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'seq_tup_read', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_trigger', 'tgattr', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_tables', 'relname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_replication', 'backend_start', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_user_tables', 'n_tup_ins', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats_ext', 'statistics_schemaname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_tables', 'idx_blks_hit', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'attstorage', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shdepend', 'refclassid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_cursors', 'is_holdable', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_class', 'relhasindex', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typsend', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'referential_constraints', 'unique_constraint_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'attidentity', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_settings', 'boot_val', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database', 'tup_inserted', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'character_set_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats', 'schemaname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routines', 'result_cast_type_udt_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'user_mappings', 'foreign_server_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'table_constraints', 'table_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_settings', 'reset_val', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'identity_start', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_slru', 'truncates', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_collation', 'collname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'scope_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_publication', 'pubtruncate', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_parser', 'prsheadline', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats', 'avg_width', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'view_table_usage', 'view_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_cursors', 'is_scrollable', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_tables', 'heap_blks_read', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_database', 'dattablespace', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic_ext_data', 'stxdmcv', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'views', 'is_insertable_into', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database', 'temp_bytes', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relacl', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'interval_precision', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'object_type', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_privileges', 'table_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'n_ins_since_vacuum', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_gssapi', 'encrypted', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_bgwriter', 'buffers_checkpoint', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'role_column_grants', 'privilege_type', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_partitioned_table', 'partnatts', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'enabled_roles', 'role_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggminitval', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_foreign_data_wrapper', 'oid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'columns', 'scope_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_depend', 'objid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_activity', 'client_port', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_replication_slots', 'plugin', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stacoll4', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'numeric_precision', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'attributes', 'scope_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_options', 'table_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_servers', 'foreign_data_wrapper_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typbyval', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_default_acl', 'defaclobjtype', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'collation_character_set_applicability', 'character_set_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routines', 'character_set_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_attrdef', 'adrelid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'data_type', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'foreign_data_wrappers', 'authorization_identifier', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_operator', 'oprcode', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_tables', 'relname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routines', 'routine_type', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'foreign_server_options', 'option_value', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typarray', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_template', 'tmpllexize', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_all_tables', 'idx_tup_fetch', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'views', 'table_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'usage_privileges', 'grantor', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_sequence', 'seqstart', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'datetime_precision', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'n_tup_hot_upd', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_locks', 'relation', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_tables', 'tidx_blks_read', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_constraint', 'connamespace', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_config', 'setting', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'character_set_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_usage_grants', 'object_type', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_all_indexes', 'relid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_activity', 'client_port', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_indexes', 'indexrelid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'numeric_scale', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_slru', 'blks_written', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'prosrc', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_partitioned_table', 'partexprs', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'staop1', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_available_extension_versions', 'name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_foreign_data_wrapper', 'oid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_collation', 'collnamespace', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'scope_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'domain_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_cluster', 'phase', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_indexes', 'indexrelname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_analyze', 'relid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggers', 'trigger_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_activity', 'datid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_timezone_abbrevs', 'abbrev', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'udt_privileges', 'udt_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_foreign_server', 'srvversion', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_indexes', 'relname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggers', 'trigger_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'n_tup_ins', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_privileges', 'privilege_type', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typtypmod', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'attcollation', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'last_analyze', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'udt_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_replication_origin_status', 'local_lsn', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_activity', 'xact_start', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_extension', 'extname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_range', 'rngcollation', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_indexes', 'relname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_matviews', 'definition', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_hba_file_rules', 'line_number', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_wal_receiver', 'latest_end_time', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_type_udt_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'data_type', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_cast', 'castfunc', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database_conflicts', 'datid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_am', 'amhandler', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'generation_expression', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_views', 'viewname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'key_column_usage', 'constraint_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_table_options', 'foreign_table_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'character_set_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_domain_usage', 'domain_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sequences', 'numeric_precision_radix', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'view_table_usage', 'table_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'character_octet_length', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_cluster', 'datname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_sequences', 'relname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'connamespace', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'column_options', 'option_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'constraint_column_usage', 'constraint_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'prorows', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_tables', 'heap_blks_hit', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_indexes', 'idx_blks_read', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_views', 'schemaname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_matviews', 'matviewowner', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typstorage', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_settings', 'max_val', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_sequences', 'max_value', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'proacl', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats', 'most_common_elem_freqs', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routine_privileges', 'specific_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_available_extension_versions', 'relocatable', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_views', 'viewname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'sql_data_access', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_numeric_precision_radix', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_create_index', 'pid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'object_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'column_options', 'column_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_timezone_abbrevs', 'abbrev', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_vacuum', 'heap_blks_total', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_replication_slots', 'active', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_table_grants', 'grantee', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'domains', 'scope_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_opfamily', 'opfowner', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sql_implementation_info', 'character_value', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_constraint', 'oid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_seclabels', 'objname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'administrable_role_authorizations', 'is_grantable', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'domains', 'udt_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'data_type_privileges', 'object_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relreplident', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_archiver', 'stats_reset', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_policy', 'polqual', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_user_tables', 'n_tup_del', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_table_options', 'option_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_create_index', 'index_relid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_replication_origin_status', 'local_id', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggers', 'trigger_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_privileges', 'column_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'ordering_routine_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'character_set_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggers', 'action_reference_old_row', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typstorage', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'character_sets', 'character_set_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'scope_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_ssl', 'ssl', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_collation', 'collcollate', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_database', 'datconnlimit', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'is_derived_reference_attribute', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'atttypmod', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'column_column_usage', 'table_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'numeric_scale', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relam', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_cursors', 'name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'key_column_usage', 'table_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'columns', 'character_maximum_length', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_create_index', 'index_relid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_sequences', 'relid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'is_result', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'table_privileges', 'grantee', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_wal_receiver', 'receive_start_lsn', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggered_update_columns', 'trigger_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_subscription', 'relid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_bgwriter', 'buffers_clean', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_numeric_precision', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_activity', 'query_start', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'sql_features', 'feature_id', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_activity', 'wait_event_type', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'n_tup_hot_upd', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_analyze', 'phase', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'table_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggfinalfn', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_amop', 'amopfamily', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_all_indexes', 'idx_scan', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_basebackup', 'pid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'attname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_progress_cluster', 'datid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stats', 'correlation', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_udt_grants', 'udt_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_bgwriter', 'buffers_checkpoint', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'constraint_column_usage', 'constraint_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_seclabel', 'provider', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'scope_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_indexes', 'relid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_ssl', 'ssl', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_sys_tables', 'idx_tup_fetch', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_indexes', 'idx_scan', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'element_types', 'maximum_cardinality', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_sequences', 'relname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_language', 'lanowner', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_timezone_abbrevs', 'utc_offset', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sql_parts', 'feature_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_indexes', 'relname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_available_extensions', 'name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_xact_all_tables', 'relid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_replication', 'replay_lag', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_event_trigger', 'evtowner', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_xact_sys_tables', 'seq_scan', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'character_sets', 'default_collate_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_database', 'tup_deleted', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_sequence', 'seqcache', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'role_table_grants', 'with_hierarchy', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_sequences', 'relname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_operator', 'oprresult', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_table_grants', 'table_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_foreign_table', 'ftrelid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'generation_expression', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_opclass', 'opcfamily', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'n_tup_hot_upd', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggsortop', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'constraint_column_usage', 'column_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'table_constraints', 'table_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typdefaultbin', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_indexes', 'idx_scan', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relrowsecurity', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_user_mapping', 'oid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_operator', 'oid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_replication_slots', 'slot_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_table_columns', 'attname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_indexes', 'indexrelid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'character_sets', 'default_collate_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_depend', 'refobjsubid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_privileges', 'table_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'udt_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'domain_constraints', 'constraint_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'sql_data_access', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database', 'blk_read_time', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_bgwriter', 'maxwritten_clean', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'parameter_default', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typanalyze', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_depend', 'refclassid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'autoanalyze_count', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'interval_type', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_replication_slots', 'slot_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_statio_all_sequences', 'blks_read', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'role_udt_grants', 'grantee', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_opclass', 'opcowner', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database', 'tup_deleted', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shmem_allocations', 'name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_index', 'indexrelid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_event_trigger', 'evttags', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_sequences', 'schemaname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_init_privs', 'classoid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_all_tables', 'n_tup_ins', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'applicable_roles', 'grantee', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_statio_all_tables', 'toast_blks_hit', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_column_grants', 'column_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_analyze', 'datname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domain_constraints', 'domain_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'view_table_usage', 'table_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_largeobject_metadata', 'oid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_udt_usage', 'udt_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_activity', 'datname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_cluster', 'heap_blks_total', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'character_octet_length', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_tables', 'heap_blks_hit', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_amop', 'amopmethod', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_publication_rel', 'prpubid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_amop', 'amopmethod', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_policies', 'tablename', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routine_privileges', 'routine_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_create_index', 'pid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'views', 'is_insertable_into', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'table_privileges', 'is_grantable', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_operator', 'oprname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'n_tup_del', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_roles', 'rolcreaterole', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'numeric_scale', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_largeobject_metadata', 'lomacl', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'relid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'tables', 'is_insertable_into', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_policy', 'polcmd', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_wal_receiver', 'sender_host', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'oid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'character_set_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'numeric_precision_radix', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_user', 'usesuper', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_archiver', 'last_failed_wal', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_privileges', 'grantor', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_domain_usage', 'table_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'key_column_usage', 'constraint_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'table_privileges', 'table_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_user_functions', 'funcname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_as_locator', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sql_features', 'sub_feature_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_opfamily', 'oid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'specific_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_table_columns', 'attname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'character_set_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_publication_rel', 'prpubid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'pronargs', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_policies', 'qual', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_options', 'option_value', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_roles', 'rolsuper', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_user_functions', 'calls', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'conffeqop', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'triggers', 'action_order', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'table_constraints', 'table_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_collation', 'collversion', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domain_constraints', 'is_deferrable', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggered_update_columns', 'event_object_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_publication_rel', 'prpubid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_timezone_names', 'name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'column_options', 'table_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_operator', 'oprnegate', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_mappings', 'authorization_identifier', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'is_user_defined_cast', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_timezone_names', 'name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relrewrite', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggers', 'action_statement', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_dict', 'dictnamespace', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'character_maximum_length', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'transforms', 'specific_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'attbyval', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sql_implementation_info', 'character_value', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'domains', 'maximum_cardinality', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggered_update_columns', 'trigger_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'views', 'view_definition', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'numeric_precision_radix', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'user_mapping_options', 'option_value', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_settings', 'category', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'vacuum_count', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_conversion', 'conowner', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'prorettype', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sequences', 'sequence_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'last_autoanalyze', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'collation_character_set_applicability', 'character_set_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'applicable_roles', 'role_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_data_wrapper_options', 'foreign_data_wrapper_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic_ext', 'stxowner', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shdescription', 'objoid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'relid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'schemata', 'schema_owner', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'view_column_usage', 'view_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'collation_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'domains', 'collation_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats', 'tablename', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_seclabels', 'classoid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'applicable_roles', 'grantee', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_cast', 'castcontext', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'ordering_routine_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routine_privileges', 'specific_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database_conflicts', 'confl_tablespace', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats', 'correlation', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'n_ins_since_vacuum', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_event_trigger', 'evtevent', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggtransfn', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_functions', 'calls', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routines', 'created', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_progress_create_index', 'lockers_done', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_user_indexes', 'relid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_class', 'reltype', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_replication_slots', 'datoid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_replication_slots', 'plugin', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'attributes', 'attribute_default', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_policies', 'schemaname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'vacuum_count', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_parser', 'prsheadline', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'parameter_style', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'numeric_scale', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_udt_usage', 'table_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_indexes', 'idx_blks_read', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'schemata', 'default_character_set_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_conversion', 'connamespace', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'usage_privileges', 'privilege_type', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_roles', 'rolname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_description', 'classoid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'columns', 'numeric_precision', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'maximum_cardinality', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_data_wrappers', 'oid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_rules', 'schemaname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_replication_slots', 'temporary', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sequences', 'sequence_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_policy', 'polcmd', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_routine_grants', 'specific_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_tables', 'heap_blks_read', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_user_tables', 'schemaname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'data_type', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sequences', 'minimum_value', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relhasindex', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database', 'conflicts', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routines', 'to_sql_specific_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'proleakproof', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'udt_privileges', 'udt_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_foreign_data_wrapper', 'fdwname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_policies', 'policyname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_sequences', 'relid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_wal_receiver', 'received_tli', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stats', 'avg_width', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_tables', 'schemaname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_progress_cluster', 'pid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'relid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'data_type_privileges', 'dtd_identifier', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'condeferrable', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'column_privileges', 'grantor', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_create_index', 'relid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'element_types', 'interval_precision', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'identity_increment', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_range', 'rngcanonical', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_partitioned_table', 'partclass', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_replication_slots', 'safe_wal_size', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_amproc', 'amprocnum', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routines', 'data_type', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_sys_tables', 'n_tup_del', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_proc', 'proname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggmfinalfn', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_cast', 'oid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggered_update_columns', 'event_object_column', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_all_tables', 'n_tup_upd', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_bgwriter', 'buffers_backend', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_data_wrappers', 'foreign_data_wrapper_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_trigger', 'tgtype', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'referential_constraints', 'constraint_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'last_autovacuum', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'autoanalyze_count', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_tables', 'idx_blks_read', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_gssapi', 'principal', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_default_acl', 'defaclobjtype', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domain_udt_usage', 'udt_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relisshared', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_udt_usage', 'table_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_tables', 'foreign_table_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'views', 'is_updatable', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'object_type', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_server_options', 'option_value', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'columns', 'datetime_precision', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_operator', 'oid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'is_nullable', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'user_defined_type_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_index', 'indimmediate', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_dict', 'oid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_all_tables', 'seq_scan', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stakind5', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_trigger', 'tgnewtable', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_am', 'amname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_opclass', 'opckeytype', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_init_privs', 'privtype', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_depend', 'refclassid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_replication_origin', 'roident', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'atthasmissing', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'last_vacuum', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relispopulated', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'vacuum_count', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_largeobject_metadata', 'oid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggmfinalextra', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'view_column_usage', 'view_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_subscription', 'subslotname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'attribute_udt_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'interval_precision', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_policies', 'policyname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_hba_file_rules', 'database', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routine_privileges', 'specific_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typmodin', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'columns', 'scope_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'view_column_usage', 'column_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_opclass', 'opcowner', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_wal_receiver', 'written_lsn', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_auth_members', 'admin_option', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_publication', 'pubowner', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_publication_rel', 'prrelid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routines', 'is_null_call', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'table_privileges', 'grantee', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggers', 'action_timing', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_scope_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_routine_grants', 'specific_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_partitioned_table', 'partdefid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stats_ext', 'most_common_freqs', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_hba_file_rules', 'user_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_ssl', 'version', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_prepared_statements', 'name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relpersistence', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_auth_members', 'admin_option', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_udt_usage', 'udt_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_roles', 'rolconnlimit', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_seclabel', 'objoid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relnatts', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'specific_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'n_mod_since_analyze', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routines', 'result_cast_char_max_length', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'udt_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'atthasdef', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shdepend', 'objsubid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_options', 'option_value', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'parameters', 'dtd_identifier', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_tables', 'heap_blks_read', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_database', 'datacl', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_collation', 'collctype', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_replication_slots', 'restart_lsn', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'datetime_precision', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_type', 'typowner', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_statio_sys_tables', 'toast_blks_read', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_column_grants', 'table_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'attacl', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_tables', 'tidx_blks_read', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'data_type', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggered_update_columns', 'trigger_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sql_parts', 'feature_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_constraint', 'conffeqop', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_statio_all_indexes', 'indexrelid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_seclabels', 'label', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_indexes', 'idx_tup_fetch', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_trigger', 'tgdeferrable', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_collation', 'oid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'seq_scan', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_timezone_names', 'utc_offset', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_ssl', 'client_dn', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_config', 'oid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_tables', 'relname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stanumbers4', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_tables', 'relname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_progress_basebackup', 'backup_streamed', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_collation', 'collnamespace', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_language', 'lanpltrusted', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_class', 'relnamespace', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'tables', 'table_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routines', 'sql_data_access', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_foreign_server', 'srvfdw', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'last_autoanalyze', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_depend', 'deptype', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_collation_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_opclass', 'opcintype', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_dict', 'dictinitoption', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database', 'temp_bytes', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'ref_dtd_identifier', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_user_functions', 'self_time', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_slru', 'blks_read', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_statio_user_tables', 'heap_blks_read', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_tablespace', 'spcowner', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_settings', 'setting', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_indexes', 'idx_tup_read', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_ssl', 'ssl', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'interval_type', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'triggered_update_columns', 'trigger_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_options', 'column_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_routine_grants', 'privilege_type', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_table_columns', 'attfdwoptions', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggdeserialfn', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_partitioned_table', 'partexprs', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'character_set_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routines', 'character_set_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_activity', 'usename', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_event_trigger', 'evtowner', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_prepared_statements', 'parameter_types', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'check_constraint_routine_usage', 'constraint_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'table_constraints', 'constraint_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_cursors', 'statement', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'last_analyze', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_class', 'oid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'parameters', 'collation_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_tablespace', 'spcname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'autoanalyze_count', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_server_options', 'foreign_server_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_replication', 'state', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_sequences', 'data_type', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'character_sets', 'character_set_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'constraint_column_usage', 'table_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_group', 'grosysid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routines', 'specific_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database', 'blks_read', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_cluster', 'datname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'is_instantiable', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stanumbers3', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'relid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_publication_tables', 'schemaname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_trigger', 'tgrelid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'element_types', 'udt_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_am', 'amname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_create_index', 'blocks_total', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_user_indexes', 'relname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_archiver', 'last_failed_wal', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'reference_type', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_prepared_statements', 'prepare_time', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_file_settings', 'setting', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'is_implicitly_invocable', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_index', 'indnkeyatts', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relhasrules', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'security_type', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domain_constraints', 'domain_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_rules', 'rulename', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_udt_grants', 'grantee', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'object_type', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_available_extensions', 'default_version', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_locks', 'classid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_index', 'indoption', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_tables', 'idx_blks_hit', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'ref_dtd_identifier', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_conversion', 'conowner', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'collection_type_identifier', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_servers', 'foreign_server_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_bgwriter', 'stats_reset', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_table_grants', 'table_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'module_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'connoinherit', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_database', 'tup_updated', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'transforms', 'udt_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'table_privileges', 'table_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_sequences', 'schemaname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_am', 'oid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_data_wrappers', 'library_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sequences', 'start_value', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_options', 'table_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_file_settings', 'error', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_available_extensions', 'name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_subscription', 'subpublications', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'referential_constraints', 'unique_constraint_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'seq_scan', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'dtd_identifier', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic_ext', 'oid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'identity_generation', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'seq_scan', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_table_options', 'option_value', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_basebackup', 'tablespaces_total', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'staop1', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_amproc', 'amproclefttype', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_bgwriter', 'maxwritten_clean', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_seclabel', 'objsubid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'atttypmod', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'scope_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_locks', 'objid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domain_constraints', 'domain_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'table_constraints', 'constraint_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typcollation', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'n_ins_since_vacuum', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_statio_sys_sequences', 'relid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_timezone_names', 'abbrev', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_column_usage', 'table_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sequences', 'numeric_precision_radix', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_operator', 'oprresult', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'columns', 'udt_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'key_column_usage', 'column_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_trigger', 'tgdeferrable', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_conversion', 'condefault', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'view_routine_usage', 'specific_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'element_types', 'collation_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_vacuum', 'datname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_database', 'datallowconn', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_largeobject_metadata', 'oid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'n_tup_hot_upd', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'autoanalyze_count', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'table_privileges', 'is_grantable', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'constraint_table_usage', 'table_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'transforms', 'specific_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_event_trigger', 'oid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shdepend', 'refobjid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_am', 'amhandler', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'collation_character_set_applicability', 'collation_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'table_constraints', 'is_deferrable', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'attributes', 'character_set_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_ts_template', 'oid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'udt_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_tables', 'schemaname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_largeobject_metadata', 'lomacl', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_views', 'schemaname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_vacuum', 'heap_blks_scanned', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_cast', 'castsource', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_vacuum', 'phase', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'views', 'table_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_vacuum', 'max_dead_tuples', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_progress_vacuum', 'phase', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_all_tables', 'n_tup_hot_upd', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_indexes', 'schemaname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routines', 'type_udt_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sql_features', 'is_verified_by', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stats_ext', 'most_common_vals', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_sequences', 'schemaname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'connamespace', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggers', 'action_timing', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database_conflicts', 'datname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_sequences', 'blks_read', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_numeric_scale', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'last_vacuum', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_database', 'datminmxid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routines', 'specific_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'interval_precision', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_available_extensions', 'name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_servers', 'foreign_data_wrapper_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_publication', 'puballtables', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sql_implementation_info', 'implementation_info_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'administrable_role_authorizations', 'grantee', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_tables', 'toast_blks_hit', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_index', 'indislive', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_tables', 'idx_blks_read', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_replication', 'reply_time', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'character_set_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_amproc', 'oid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'udt_privileges', 'udt_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_char_max_length', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_default_acl', 'defaclrole', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typlen', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'idx_tup_fetch', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_subscription', 'latest_end_time', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'sql_features', 'is_supported', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'numeric_precision', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_tablespace', 'spcname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_rewrite', 'ev_qual', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_tables', 'foreign_table_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_statio_all_tables', 'toast_blks_read', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domain_constraints', 'constraint_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_replication_slots', 'confirmed_flush_lsn', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'routine_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_activity', 'client_addr', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_event_trigger', 'evttags', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_sequences', 'data_type', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_statio_all_indexes', 'schemaname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'idx_tup_fetch', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_sys_indexes', 'relname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_extension', 'extnamespace', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_user', 'usesuper', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'view_routine_usage', 'specific_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'proargdefaults', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_range', 'rngsubtype', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stanullfrac', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_bgwriter', 'checkpoint_write_time', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'table_constraints', 'table_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_routine_grants', 'routine_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'n_mod_since_analyze', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_tables', 'tidx_blks_hit', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_user_mappings', 'oid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routines', 'result_cast_collation_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_tables', 'heap_blks_read', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_indexes', 'indexrelname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_tables', 'tablespace', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'conislocal', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_am', 'oid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'character_set_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_db_role_setting', 'setdatabase', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'character_set_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'relname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_proc', 'oid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attrdef', 'adbin', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_sequences', 'max_value', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'module_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'idx_scan', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_table_grants', 'with_hierarchy', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_conversion', 'conproc', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_database', 'dattablespace', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic_ext', 'stxname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'view_column_usage', 'table_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_index', 'indrelid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'key_column_usage', 'constraint_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'proname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'character_set_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_bgwriter', 'buffers_alloc', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_create_index', 'tuples_total', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_user_tables', 'relid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_usage_grants', 'object_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_event_trigger', 'evtfoid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'proargdefaults', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_constraint', 'conbin', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'proargmodes', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_matviews', 'schemaname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'ordering_category', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typtype', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stakind2', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_depend', 'refobjsubid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'connamespace', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_sequence', 'seqmin', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_transform', 'oid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_tables', 'rowsecurity', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_attribute', 'attbyval', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'key_column_usage', 'column_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_user_functions', 'schemaname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routines', 'maximum_cardinality', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shdescription', 'classoid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'role_usage_grants', 'is_grantable', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_servers', 'foreign_data_wrapper_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'interval_precision', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_sequence', 'seqmax', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stavalues2', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_available_extension_versions', 'version', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_activity', 'query_start', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_indexes', 'relname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_tables', 'toast_blks_hit', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'constraint_table_usage', 'constraint_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stakind5', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'check_constraint_routine_usage', 'specific_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_constraint', 'conindid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stacoll3', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'max_dynamic_result_sets', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_sequences', 'sequenceowner', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'schemaname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_indexes', 'relid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'schemata', 'default_character_set_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database', 'tup_deleted', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'columns', 'ordinal_position', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'coninhcount', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'columns', 'numeric_precision_radix', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_activity', 'query', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_tables', 'toast_blks_read', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_matviews', 'hasindexes', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_progress_analyze', 'ext_stats_computed', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'columns', 'domain_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_ts_config_map', 'maptokentype', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_create_index', 'datname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'collation_character_set_applicability', 'character_set_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_user_mappings', 'umoptions', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_ssl', 'client_serial', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'routine_definition', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_tables', 'tidx_blks_read', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'character_set_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_collation_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_settings', 'extra_desc', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_language', 'lanowner', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic_ext', 'stxkind', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_hba_file_rules', 'auth_method', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic_ext_data', 'stxoid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_database', 'datconnlimit', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_settings', 'enumvals', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'key_column_usage', 'column_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_transform', 'trflang', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'collation_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_column_usage', 'dependent_column', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_collation', 'collisdeterministic', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_xact_user_tables', 'relid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_activity', 'datname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'role_table_grants', 'grantor', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relminmxid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_column_grants', 'privilege_type', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_policies', 'tablename', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_config_map', 'maptokentype', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_tables', 'schemaname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_settings', 'max_val', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_collation_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_available_extension_versions', 'superuser', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'relname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'numeric_precision', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'interval_precision', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'autovacuum_count', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'character_octet_length', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_index', 'indisclustered', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'n_dead_tup', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'last_vacuum', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_from_data_type', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_attribute', 'attlen', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_class', 'reltablespace', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'relname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_wal_receiver', 'pid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'staop5', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database', 'tup_fetched', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'role_table_grants', 'table_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_prepared_statements', 'from_sql', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'schemata', 'schema_owner', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_indexes', 'relid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'attribute_udt_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_operator', 'oprresult', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'view_column_usage', 'table_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'specific_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_slru', 'blks_written', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'character_set_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_servers', 'foreign_data_wrapper_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_roles', 'rolsuper', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_config', 'cfgnamespace', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats', 'most_common_freqs', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_seclabels', 'objtype', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'attstattarget', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggtranstype', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggfinalmodify', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_amop', 'amoplefttype', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_file_settings', 'applied', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_gssapi', 'principal', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_tablespace', 'spcoptions', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_tables', 'toast_blks_hit', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_replication', 'usename', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'contypid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relfilenode', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'sequences', 'increment', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'transforms', 'specific_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_transform', 'trftosql', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'domain_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_settings', 'short_desc', 'UPDATE', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_subscription', 'received_lsn', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_replication_slots', 'plugin', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_column_usage', 'column_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'role_routine_grants', 'specific_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typndims', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_basebackup', 'tablespaces_streamed', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_usage_grants', 'grantee', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'prorows', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic_ext', 'stxnamespace', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_opfamily', 'opfname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'convalidated', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shadow', 'userepl', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_collation', 'collcollate', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_bgwriter', 'checkpoints_req', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domain_udt_usage', 'domain_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_scope_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_activity', 'query', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_create_index', 'phase', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggkind', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_rewrite', 'ev_action', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_tables', 'heap_blks_hit', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_bgwriter', 'checkpoints_timed', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'convalidated', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_authid', 'rolcanlogin', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routines', 'as_locator', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_opfamily', 'opfowner', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_description', 'objoid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'character_octet_length', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'udt_privileges', 'udt_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_options', 'table_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_usage_grants', 'object_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_gssapi', 'pid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_column_grants', 'is_grantable', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_char_octet_length', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_all_tables', 'n_tup_del', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'transforms', 'group_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggmfinalmodify', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_user_indexes', 'schemaname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typanalyze', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_seclabels', 'objsubid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_sequence', 'seqcycle', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_wal_receiver', 'flushed_lsn', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_wal_receiver', 'latest_end_time', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_functions', 'schemaname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_mappings', 'foreign_server_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_proc', 'procost', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_config_map', 'mapdict', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats_ext', 'most_common_base_freqs', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stavalues4', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'usage_privileges', 'is_grantable', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'view_table_usage', 'view_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_privileges', 'table_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'interval_precision', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'maximum_cardinality', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'column_column_usage', 'table_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_user_tables', 'n_tup_hot_upd', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'attribute_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'scope_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'user_defined_types', 'ordering_routine_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_char_set_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'transforms', 'udt_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_options', 'option_value', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_transform', 'trflang', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relispopulated', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_cluster', 'command', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_tables', 'rowsecurity', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_routine_grants', 'grantee', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'ref_dtd_identifier', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'constraint_column_usage', 'constraint_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_wal_receiver', 'last_msg_receipt_time', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'staop4', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_user_mapping', 'umuser', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'protrftypes', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_tables', 'schemaname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'n_dead_tup', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_database_conflicts', 'confl_deadlock', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'interval_type', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'view_routine_usage', 'table_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_indexes', 'idx_blks_read', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_all_tables', 'n_tup_del', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'is_deterministic', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_default_acl', 'defaclrole', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'dtd_identifier', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'atthasmissing', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_indexes', 'tablespace', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'element_types', 'interval_type', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relrowsecurity', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_available_extension_versions', 'comment', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'key_column_usage', 'position_in_unique_constraint', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_language', 'lanname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_trigger', 'tgoldtable', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_prepared_statements', 'prepare_time', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'numeric_scale', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_class', 'relpartbound', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_cursors', 'statement', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'udt_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_activity', 'query', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_ts_dict', 'oid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'tables', 'user_defined_type_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_extension', 'extname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_collation', 'collowner', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_locks', 'virtualxid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'role_routine_grants', 'specific_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'proparallel', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'administrable_role_authorizations', 'grantee', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_as_locator', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_seclabel', 'label', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'check_constraints', 'constraint_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'relid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'is_derived_reference_attribute', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'analyze_count', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_cluster', 'heap_blks_total', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_data_wrappers', 'fdwoptions', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_ssl', 'ssl', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_user_tables', 'relname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_progress_vacuum', 'heap_blks_total', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_mapping_options', 'option_value', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typisdefined', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'columns', 'identity_maximum', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'scope_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_sequence', 'seqcycle', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'role_column_grants', 'table_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'oid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_data_wrappers', 'fdwowner', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'analyze_count', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_domain_usage', 'domain_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_enum', 'enumtypid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_table_grants', 'table_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_class', 'relchecks', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_locks', 'pid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_servers', 'foreign_server_version', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typcollation', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_tables', 'tidx_blks_read', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_vacuum', 'max_dead_tuples', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'element_types', 'object_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typnotnull', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_policy', 'polrelid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_tables', 'toast_blks_read', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'datetime_precision', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_ssl', 'client_dn', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'routine_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_roles', 'rolcreaterole', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_conversion', 'conname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_activity', 'datname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_largeobject_metadata', 'oid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_publication', 'oid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'table_privileges', 'table_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'character_set_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'table_constraints', 'table_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats', 'elem_count_histogram', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_rewrite', 'ev_qual', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_user_tables', 'idx_tup_fetch', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_authid', 'rolvaliduntil', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'attstorage', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_udt_grants', 'udt_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'conffeqop', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_opfamily', 'opfname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_opclass', 'opckeytype', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'referential_constraints', 'match_option', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relhassubclass', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_servers', 'foreign_server_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_operator', 'oprkind', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_proc', 'pronargs', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_indexes', 'indexrelname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routine_privileges', 'routine_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'object_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_gssapi', 'encrypted', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'table_constraints', 'constraint_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'user_defined_type_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_replication_slots', 'xmin', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routine_privileges', 'specific_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_sequence', 'seqmax', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'dtd_identifier', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggsortop', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_activity', 'backend_start', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routines', 'result_cast_from_data_type', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'idx_scan', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'referential_constraints', 'unique_constraint_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_subscription_rel', 'srsubid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'scope_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_create_index', 'partitions_total', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'numeric_scale', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'ordering_routine_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'numeric_precision_radix', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_foreign_data_wrapper', 'oid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_bgwriter', 'checkpoint_sync_time', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_database', 'datname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_user_mappings', 'srvowner', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sql_parts', 'feature_id', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'table_constraints', 'initially_deferred', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic_ext', 'stxname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_data_wrappers', 'authorization_identifier', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_replication_origin', 'roident', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_cluster', 'datid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggers', 'action_reference_old_table', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'domain_default', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'view_routine_usage', 'table_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'attributes', 'numeric_precision', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'scope_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'proacl', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_tablespace', 'spcacl', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_user_tables', 'seq_tup_read', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'table_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_event_trigger', 'oid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_auth_members', 'admin_option', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_functions', 'funcname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'view_table_usage', 'table_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_template', 'oid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'data_type', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_collation', 'oid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_replication', 'pid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_rules', 'schemaname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'attstattarget', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_conversion', 'conname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_data_wrappers', 'library_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'external_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_transform', 'trftype', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'tables', 'table_type', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database', 'blk_write_time', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'atttypid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'oid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_tables', 'relname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_database', 'datcollate', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_namespace', 'nspname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_udt_grants', 'is_grantable', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typrelid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'numeric_scale', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_ts_config', 'cfgowner', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'to_sql_specific_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_timezone_names', 'abbrev', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'numeric_precision_radix', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'role_column_grants', 'grantor', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database_conflicts', 'datname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_parser', 'prsheadline', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_amop', 'amopfamily', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_foreign_data_wrapper', 'fdwacl', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'character_maximum_length', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stakind5', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sql_implementation_info', 'integer_value', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_trigger', 'tgparentid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shadow', 'usebypassrls', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'udt_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_file_settings', 'sourcefile', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shadow', 'valuntil', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sequences', 'numeric_precision', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_indexes', 'idx_tup_read', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_indexes', 'idx_scan', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'table_constraints', 'is_deferrable', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_policy', 'polpermissive', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_replication', 'usesysid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_publication_tables', 'tablename', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_ssl', 'client_serial', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_policies', 'tablename', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stakind3', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domain_constraints', 'domain_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'domains', 'character_set_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'last_analyze', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_create_index', 'partitions_total', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'triggers', 'event_object_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'contype', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'character_octet_length', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_replication_slots', 'active_pid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'confupdtype', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stacoll1', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_rewrite', 'ev_class', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_seclabels', 'objtype', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'foreign_servers', 'foreign_server_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_operator', 'oprcom', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_event_trigger', 'evttags', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_extension', 'extconfig', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'view_table_usage', 'view_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_cursors', 'is_holdable', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'element_types', 'domain_default', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'udt_privileges', 'grantee', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'referential_constraints', 'delete_rule', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_trigger', 'tgargs', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_column_usage', 'table_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relreplident', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domain_constraints', 'initially_deferred', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_cast', 'castmethod', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_trigger', 'tgparentid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_trigger', 'tgname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'is_updatable', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_publication', 'pubname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routine_privileges', 'specific_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'pronargdefaults', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'attributes', 'numeric_scale', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'column_default', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_archiver', 'failed_count', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'attlen', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_seclabel', 'objoid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'relname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_user_mappings', 'foreign_server_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'user_mapping_options', 'foreign_server_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'udt_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'check_constraint_routine_usage', 'constraint_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_privileges', 'is_grantable', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_wal_receiver', 'conninfo', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'element_types', 'character_maximum_length', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggers', 'action_reference_new_row', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'character_set_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'table_privileges', 'table_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'view_column_usage', 'table_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'character_set_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'user_defined_type_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'numeric_scale', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stacoll3', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_policies', 'cmd', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sequences', 'minimum_value', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_table_columns', 'nspname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'foreign_tables', 'foreign_table_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_sequences', 'sequencename', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_table_options', 'foreign_table_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'transforms', 'specific_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'starelid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats', 'most_common_vals', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_scope_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'analyze_count', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_language', 'lanname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'character_maximum_length', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_type', 'typcollation', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_views', 'definition', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_publication', 'pubdelete', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'parameters', 'scope_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_indexes', 'indexrelname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'n_tup_ins', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_amop', 'amoplefttype', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_seclabels', 'objnamespace', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database_conflicts', 'confl_lock', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'last_vacuum', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_proc', 'prokind', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_index', 'indcheckxmin', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_prepared_xacts', 'owner', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_subscription', 'subdbid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'view_routine_usage', 'specific_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shseclabel', 'provider', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_privileges', 'privilege_type', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_cursors', 'is_binary', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_user_mapping', 'oid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_seclabels', 'label', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_description', 'description', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'udt_privileges', 'udt_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_vacuum', 'relid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'tables', 'reference_generation', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_foreign_table', 'ftserver', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_activity', 'leader_pid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_subscription', 'pid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_opclass', 'opcnamespace', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_progress_vacuum', 'relid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_partitioned_table', 'partnatts', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_class', 'reloftype', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shadow', 'usesysid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_vacuum', 'datname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_column_grants', 'table_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_servers', 'foreign_data_wrapper_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stainherit', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_timezone_names', 'abbrev', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database', 'datid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_policies', 'schemaname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_index', 'indpred', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_views', 'viewowner', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sql_parts', 'comments', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'data_type_privileges', 'object_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats', 'most_common_elem_freqs', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'view_table_usage', 'table_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'table_constraints', 'is_deferrable', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_trigger', 'tgargs', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_bgwriter', 'buffers_backend_fsync', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_conversion', 'oid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_config', 'cfgname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggers', 'action_reference_old_table', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_cluster', 'cluster_index_relid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'last_autovacuum', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_user_mappings', 'oid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_publication_tables', 'tablename', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relpartbound', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_xact_sys_tables', 'n_tup_hot_upd', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_tables', 'relid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_replication', 'reply_time', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_servers', 'srvoptions', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_foreign_server', 'srvname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'probin', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'domain_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_sequences', 'last_value', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database', 'numbackends', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_user', 'userepl', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'attinhcount', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggers', 'action_reference_new_table', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attrdef', 'oid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database', 'xact_commit', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_data_wrappers', 'authorization_identifier', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routines', 'scope_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'attribute_udt_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_template', 'tmplname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_gssapi', 'pid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'user_defined_type_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'as_locator', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_settings', 'setting', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_numeric_precision_radix', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggered_update_columns', 'event_object_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_tables', 'toast_blks_read', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sql_parts', 'is_supported', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_opfamily', 'opfowner', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_domain_usage', 'table_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'table_constraints', 'is_deferrable', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'constraint_column_usage', 'table_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_dict', 'dictinitoption', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_archiver', 'failed_count', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_user_mappings', 'umuser', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggers', 'event_object_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_class', 'relforcerowsecurity', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typnamespace', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_interval_type', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'last_autoanalyze', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'tables', 'table_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_largeobject', 'pageno', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typelem', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'table_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'provolatile', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_subscription', 'subenabled', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'n_tup_upd', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_attribute', 'attname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_index', 'indimmediate', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'n_tup_ins', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_indexes', 'indexrelid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'referential_constraints', 'unique_constraint_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_trigger', 'tgrelid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'attislocal', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'n_tup_del', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_udt_grants', 'is_grantable', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shadow', 'userepl', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'check_constraint_routine_usage', 'constraint_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_partitioned_table', 'partnatts', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_ssl', 'bits', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_language', 'laninline', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_trigger', 'tgoldtable', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_policy', 'polwithcheck', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shdepend', 'objid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggsortop', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_opfamily', 'opfname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_cast', 'oid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_transform', 'trflang', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'views', 'table_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_functions', 'calls', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'scope_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'usage_privileges', 'object_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_file_settings', 'seqno', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_group', 'grolist', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_indexes', 'indexrelid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'foreign_table_options', 'option_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_settings', 'category', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_subscription', 'subsynccommit', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggers', 'action_reference_old_row', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'view_table_usage', 'table_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_parser', 'prsstart', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'view_routine_usage', 'specific_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_extension', 'extcondition', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'tables', 'reference_generation', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggfinalextra', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'role_routine_grants', 'grantor', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'views', 'is_trigger_deletable', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_replication', 'pid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_seclabel', 'objsubid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'table_privileges', 'with_hierarchy', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'collation_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'user_defined_type_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats_ext', 'kinds', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_parser', 'prsend', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'is_implicitly_invocable', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_hba_file_rules', 'netmask', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_authid', 'rolcreaterole', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggmtransfn', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_progress_basebackup', 'tablespaces_streamed', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_data_wrapper_options', 'foreign_data_wrapper_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_indexes', 'indexrelname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'transforms', 'udt_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_user_tables', 'n_tup_hot_upd', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_language', 'lanpltrusted', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'numeric_precision_radix', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_config', 'cfgnamespace', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sequences', 'cycle_option', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_available_extension_versions', 'comment', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'generation_expression', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'numeric_precision_radix', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_replication_origin', 'roident', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_extension', 'extowner', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'reloptions', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_prepared_xacts', 'database', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_indexes', 'indexrelid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_user_tables', 'seq_tup_read', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stainherit', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'transforms', 'group_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats', 'histogram_bounds', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_basebackup', 'tablespaces_streamed', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_analyze', 'current_child_table_relid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domain_udt_usage', 'domain_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_index', 'indisreplident', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'data_type_privileges', 'object_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_am', 'oid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'collations', 'collation_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_all_indexes', 'relname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_database', 'datistemplate', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats_ext', 'most_common_freqs', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typoutput', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_indexes', 'schemaname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggsortop', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_type_udt_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_database', 'tup_inserted', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'routine_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_opclass', 'oid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'check_constraint_routine_usage', 'specific_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_replication_slots', 'xmin', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_shdepend', 'deptype', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_opfamily', 'opfname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_partitioned_table', 'partexprs', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_tablespace', 'spcoptions', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_replication', 'state', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggers', 'action_reference_old_row', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_wal_receiver', 'conninfo', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relhasindex', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats_ext', 'statistics_schemaname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'max_dynamic_result_sets', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_ts_parser', 'prsend', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'staop5', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_subscription_rel', 'srsubid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'schemata', 'default_character_set_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_transform', 'trftype', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_group', 'groname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attrdef', 'adrelid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_sys_tables', 'n_tup_del', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggserialfn', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'external_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_wal_receiver', 'status', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_event_trigger', 'evttags', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_rewrite', 'ev_type', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_sys_tables', 'seq_scan', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'dtd_identifier', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'n_tup_ins', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'reloftype', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_cast', 'castcontext', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'information_schema_catalog_name', 'catalog_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'collation_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_tables', 'authorization_identifier', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_rewrite', 'ev_action', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'scope_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_statio_sys_sequences', 'blks_read', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'constraint_column_usage', 'constraint_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'is_generated', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_available_extensions', 'default_version', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_settings', 'reset_val', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_subscription', 'subenabled', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_cast', 'casttarget', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_range', 'rngsubdiff', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_index', 'indisvalid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'collation_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_rules', 'tablename', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domain_constraints', 'domain_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggers', 'action_reference_old_row', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'provolatile', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'collation_character_set_applicability', 'collation_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sql_parts', 'comments', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shmem_allocations', 'allocated_size', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_servers', 'foreign_server_type', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_foreign_data_wrapper', 'fdwacl', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_tables', 'idx_blks_read', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_sys_indexes', 'idx_tup_read', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'character_sets', 'character_set_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'view_table_usage', 'view_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_matviews', 'schemaname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'specific_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_user_functions', 'funcid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_db_role_setting', 'setdatabase', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'view_column_usage', 'view_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic_ext', 'stxstattarget', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_timezone_abbrevs', 'is_dst', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'specific_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'view_table_usage', 'view_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_dict', 'dictowner', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'check_constraints', 'constraint_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sql_parts', 'feature_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'table_privileges', 'grantor', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_config', 'cfgname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'n_tup_ins', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'parameters', 'character_maximum_length', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typdefault', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'attisdropped', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_inherits', 'inhparent', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_parser', 'oid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'seq_tup_read', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'table_constraints', 'enforced', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_amproc', 'amproc', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_archiver', 'archived_count', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'referential_constraints', 'unique_constraint_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'collation_character_set_applicability', 'character_set_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_default_acl', 'defaclnamespace', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_replication', 'state', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'is_updatable', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_udt_grants', 'udt_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_opclass', 'opcmethod', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_archiver', 'last_archived_time', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'pronamespace', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'datetime_precision', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_xact_all_tables', 'n_tup_ins', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shdescription', 'objoid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_opclass', 'opcfamily', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_replication_origin', 'roname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_tables', 'heap_blks_hit', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database_conflicts', 'confl_bufferpin', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_user_mappings', 'authorization_identifier', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'n_mod_since_analyze', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_parser', 'prstoken', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_activity', 'leader_pid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_usage_grants', 'object_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_extension', 'extrelocatable', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_index', 'indkey', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'provariadic', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_opclass', 'opcdefault', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'udt_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_domain_usage', 'table_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'collation_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'n_mod_since_analyze', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'attributes', 'data_type', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_operator', 'oprjoin', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_indexes', 'schemaname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_wal_receiver', 'last_msg_receipt_time', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_class', 'relfilenode', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'scope_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_subscription_rel', 'srsubstate', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_cursors', 'creation_time', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_foreign_server', 'oid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stacoll2', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_settings', 'source', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_publication', 'pubviaroot', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_slru', 'blks_exists', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_basebackup', 'tablespaces_total', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_trigger', 'tgdeferrable', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_wal_receiver', 'last_msg_send_time', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'provariadic', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_privileges', 'table_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_authid', 'rolpassword', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_maximum_cardinality', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'is_identity', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'domain_constraints', 'domain_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_type', 'typdefaultbin', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_subscription_rel', 'srsublsn', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'datetime_precision', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'udt_privileges', 'udt_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats_ext', 'statistics_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_timezone_names', 'is_dst', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routines', 'sql_path', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_indexes', 'indexrelid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_rewrite', 'oid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_publication', 'pubupdate', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_foreign_server', 'srvacl', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_partitioned_table', 'partattrs', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'collation_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_views', 'viewowner', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats', 'n_distinct', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_wal_receiver', 'last_msg_receipt_time', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_replication_origin_status', 'external_id', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_tables', 'tidx_blks_read', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'check_constraint_routine_usage', 'constraint_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'user_defined_types', 'interval_precision', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database', 'datname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_trigger', 'tgnewtable', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'n_dead_tup', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_routine_grants', 'grantor', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'udt_privileges', 'is_grantable', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_user_mappings', 'srvowner', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'udt_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'proargnames', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_ts_template', 'tmplnamespace', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_replication', 'pid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_sys_tables', 'n_tup_ins', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'element_types', 'object_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'referential_constraints', 'unique_constraint_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'character_maximum_length', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_replication', 'client_port', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routines', 'result_cast_char_octet_length', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_conversion', 'conname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_attrdef', 'adnum', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stacoll1', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_ssl', 'cipher', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'role_usage_grants', 'object_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'tables', 'user_defined_type_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_settings', 'reset_val', 'UPDATE', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_wal_receiver', 'sender_host', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_routine_grants', 'grantor', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_collation', 'collname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats', 'elem_count_histogram', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'udt_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_views', 'viewname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'attribute_udt_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domain_constraints', 'domain_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggered_update_columns', 'event_object_column', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_settings', 'setting', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_mappings', 'foreign_server_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_database', 'datctype', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_indexes', 'indexname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_locks', 'objsubid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database', 'tup_fetched', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_settings', 'context', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'character_sets', 'default_collate_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'datetime_precision', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'starelid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats', 'n_distinct', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_type', 'typinput', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'role_usage_grants', 'object_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_analyze', 'sample_blks_scanned', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_tables', 'heap_blks_hit', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'view_column_usage', 'table_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shadow', 'passwd', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_user_tables', 'idx_tup_fetch', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats_ext', 'most_common_freqs', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routines', 'routine_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_create_index', 'tuples_total', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stanumbers5', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_prepared_xacts', 'owner', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'source_dtd_identifier', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_tables', 'toast_blks_hit', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domain_udt_usage', 'domain_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routine_privileges', 'routine_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_amproc', 'amprocrighttype', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_activity', 'application_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_replication', 'application_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_locks', 'database', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'character_octet_length', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_user', 'valuntil', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'table_privileges', 'is_grantable', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'constraint_table_usage', 'constraint_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_collation', 'collencoding', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_available_extension_versions', 'requires', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_publication', 'puballtables', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'collation_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'table_privileges', 'grantee', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'udt_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_servers', 'foreign_data_wrapper_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_depend', 'refobjid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'procost', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_prepared_xacts', 'database', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'numeric_precision', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'attacl', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_prepared_xacts', 'database', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'contypid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats_ext', 'most_common_vals', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_xact_user_tables', 'n_tup_upd', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_progress_analyze', 'child_tables_total', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_vacuum', 'num_dead_tuples', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'scope_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'atthasdef', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_dict', 'dictname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_roles', 'rolinherit', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_table_options', 'foreign_table_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_amop', 'amopopr', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_opclass', 'opcmethod', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'starelid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shdescription', 'description', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_foreign_server', 'oid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'columns', 'identity_cycle', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_statio_all_tables', 'relname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_sys_tables', 'seq_tup_read', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_activity', 'client_addr', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_subscription', 'subname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_replication_slots', 'wal_status', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sequences', 'minimum_value', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_cast', 'castcontext', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_statio_all_indexes', 'relname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'identity_increment', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_class', 'reloptions', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'schemaname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'numeric_scale', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggers', 'action_orientation', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shadow', 'userepl', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_indexes', 'idx_blks_hit', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'udt_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_tables', 'foreign_server_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_statio_all_indexes', 'idx_blks_read', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'routine_type', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_init_privs', 'classoid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stacoll5', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'attributes', 'is_nullable', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'view_column_usage', 'view_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_hba_file_rules', 'line_number', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'atthasmissing', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_database', 'datcollate', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'udt_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stavalues4', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'pronamespace', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_cluster', 'heap_tuples_scanned', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_opfamily', 'oid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_template', 'tmplinit', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'user_defined_types', 'numeric_precision_radix', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'character_set_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_wal_receiver', 'sender_port', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_publication', 'pubdelete', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shmem_allocations', 'size', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'element_types', 'numeric_precision_radix', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'last_altered', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_routine_grants', 'specific_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_privileges', 'grantee', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'parameter_mode', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'views', 'check_option', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggfinalfn', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'foreign_data_wrapper_options', 'foreign_data_wrapper_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_xact_all_tables', 'idx_tup_fetch', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'schemata', 'default_character_set_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_operator', 'oprjoin', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typcategory', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_extension', 'extnamespace', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'character_sets', 'default_collate_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'idx_tup_fetch', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_activity', 'datid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_locks', 'objsubid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_replication', 'usename', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_domain_usage', 'domain_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_statio_user_sequences', 'blks_read', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'proretset', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'n_live_tup', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_mappings', 'authorization_identifier', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'attributes', 'udt_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'role_column_grants', 'table_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_analyze', 'ext_stats_total', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routine_privileges', 'grantee', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_namespace', 'nspowner', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'collation_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_tables', 'toast_blks_hit', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'character_set_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_all_tables', 'relname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_trigger', 'oid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'referential_constraints', 'delete_rule', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'is_implicitly_invocable', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_authid', 'rolname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_locks', 'fastpath', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_trigger', 'oid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typrelid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggmtranstype', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_trigger', 'tgdeferrable', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_index', 'indkey', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'ordering_category', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'identity_maximum', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_tables', 'ftoptions', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_class', 'relisshared', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_operator', 'oprleft', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'attribute_udt_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'usage_privileges', 'object_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_create_index', 'current_locker_pid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'numeric_scale', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'user_defined_types', 'ordering_routine_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stanullfrac', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'idx_scan', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_vacuum', 'heap_blks_vacuumed', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'n_live_tup', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'scope_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'enabled_roles', 'role_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_trigger', 'tgconstrindid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_replication_origin_status', 'remote_lsn', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'udt_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats', 'attname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'table_privileges', 'privilege_type', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'datetime_precision', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_transform', 'trftosql', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'data_type', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'n_tup_upd', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_sys_indexes', 'idx_scan', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_data_wrapper_options', 'option_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_sys_tables', 'n_tup_hot_upd', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_group', 'grolist', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_data_wrapper_options', 'foreign_data_wrapper_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_settings', 'name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_index', 'indisvalid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_analyze', 'pid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_event_trigger', 'evtowner', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_proc', 'provariadic', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_class', 'reltuples', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_database', 'datfrozenxid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relminmxid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_settings', 'sourcefile', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_operator', 'oprnamespace', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_user_tables', 'schemaname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_tables', 'relname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'character_sets', 'default_collate_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'user_defined_type_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_seclabels', 'objtype', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'key_column_usage', 'table_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_char_set_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_sequences', 'cache_size', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats_ext', 'most_common_val_nulls', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_tables', 'relid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_column_usage', 'dependent_column', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_udt_usage', 'table_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_statio_all_tables', 'tidx_blks_hit', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_tables', 'foreign_table_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_tables', 'foreign_table_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'table_constraints', 'table_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_tables', 'hasrules', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggers', 'event_manipulation', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_constraint', 'confdeltype', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_tables', 'foreign_server_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_language', 'lanowner', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_hba_file_rules', 'error', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'collation_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_table_columns', 'attname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_cluster', 'command', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_class', 'relminmxid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_subscription', 'last_msg_receipt_time', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stats_ext', 'most_common_val_nulls', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'usage_privileges', 'privilege_type', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sequences', 'numeric_precision_radix', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_opclass', 'opcowner', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'n_tup_del', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_rules', 'rulename', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'character_sets', 'form_of_use', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_index', 'indpred', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'character_set_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'user_defined_type_category', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'proconfig', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_column_usage', 'table_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_cluster', 'cluster_index_relid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_udt_grants', 'grantor', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_sequences', 'max_value', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'created', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_policy', 'polpermissive', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_hba_file_rules', 'type', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_user_mappings', 'umoptions', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'column_domain_usage', 'domain_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typcollation', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_config', 'setting', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stakind4', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_foreign_table', 'ftoptions', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_tables', 'schemaname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_cluster', 'heap_blks_scanned', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_subscription_rel', 'srsubid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'views', 'is_trigger_deletable', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'attribute_default', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'character_sets', 'character_set_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_policy', 'polwithcheck', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_available_extension_versions', 'requires', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'sql_implementation_info', 'implementation_info_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_opclass', 'opcnamespace', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'n_mod_since_analyze', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stats', 'attname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_udt_grants', 'grantee', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_collation', 'collctype', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_opfamily', 'oid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stavalues2', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_routine_grants', 'privilege_type', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'last_autovacuum', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_subscription', 'received_lsn', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'data_type_privileges', 'object_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'to_sql_specific_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_indexes', 'idx_tup_read', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'is_nullable', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_usage_grants', 'is_grantable', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_tables', 'foreign_table_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_foreign_data_wrapper', 'oid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_foreign_table', 'ftoptions', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'columns', 'interval_type', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_sequences', 'last_value', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_archiver', 'archived_count', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_data_wrappers', 'oid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'character_set_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typdefaultbin', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'datetime_precision', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggmfinalmodify', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_language', 'lanplcallfoid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_xact_sys_tables', 'seq_tup_read', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_activity', 'usesysid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_subscription', 'last_msg_send_time', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_locks', 'fastpath', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'constraint_column_usage', 'constraint_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'view_column_usage', 'table_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_tables', 'foreign_server_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_ssl', 'issuer_dn', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stawidth', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stakind3', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'connoinherit', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_subscription_rel', 'srsubstate', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_available_extension_versions', 'schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_usage_grants', 'privilege_type', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_routine_grants', 'grantee', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_indexes', 'indexrelname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_basebackup', 'backup_streamed', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'numeric_scale', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typtype', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_policy', 'polwithcheck', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'constraint_table_usage', 'constraint_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'tables', 'user_defined_type_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggers', 'event_manipulation', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_sequences', 'blks_hit', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database_conflicts', 'confl_lock', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_user', 'valuntil', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_sys_tables', 'n_tup_ins', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'prokind', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_publication', 'pubinsert', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'identity_generation', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_interval_precision', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'udt_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'foreign_servers', 'foreign_data_wrapper_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'interval_precision', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'referential_constraints', 'delete_rule', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'connoinherit', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_replication_slots', 'wal_status', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'view_table_usage', 'table_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_user_mapping', 'umoptions', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_index', 'indislive', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'view_column_usage', 'view_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggcombinefn', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_replication', 'flush_lag', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_auth_members', 'roleid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_amop', 'amopstrategy', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_opfamily', 'oid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sql_features', 'feature_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_user', 'usename', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_index', 'indisvalid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relrewrite', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_namespace', 'oid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_tables', 'hasindexes', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_servers', 'foreign_server_type', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'last_autoanalyze', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'character_maximum_length', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_column_grants', 'is_grantable', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sql_features', 'sub_feature_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_database', 'datacl', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_user_mapping', 'umserver', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_operator', 'oprrest', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stakind2', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_activity', 'pid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'sequences', 'sequence_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_settings', 'unit', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_collation_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'autovacuum_count', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_publication_tables', 'schemaname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_sequences', 'schemaname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'check_constraints', 'constraint_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_timezone_names', 'is_dst', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'n_tup_ins', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_tablespace', 'oid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_activity', 'datname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_statio_sys_tables', 'toast_blks_hit', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_description', 'description', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_conversion', 'oid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats_ext', 'most_common_vals', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'schemata', 'default_character_set_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_user', 'usebypassrls', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_available_extension_versions', 'installed', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relispopulated', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'table_constraints', 'constraint_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_amop', 'amoppurpose', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_locks', 'page', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats', 'most_common_elem_freqs', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'ordinal_position', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_foreign_data_wrapper', 'fdwname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'constraint_table_usage', 'constraint_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_indexes', 'schemaname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'usage_privileges', 'privilege_type', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_config_map', 'mapseqno', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_activity', 'backend_type', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'column_domain_usage', 'table_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sequences', 'data_type', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_parser', 'prsstart', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_indexes', 'relid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_char_octet_length', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'udt_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'dtd_identifier', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_cluster', 'datname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_amproc', 'amproclefttype', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_attribute', 'atttypmod', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_mappings', 'authorization_identifier', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_available_extension_versions', 'version', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stadistinct', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_authid', 'rolpassword', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'routine_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_sequence', 'seqcache', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_domain_usage', 'column_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_event_trigger', 'evtowner', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_tables', 'foreign_server_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'schemata', 'schema_owner', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relowner', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'agginitval', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_locks', 'database', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_replication', 'client_hostname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'udt_privileges', 'grantor', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'collation_character_set_applicability', 'collation_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'ordinal_position', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_type_udt_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_user_tables', 'n_tup_del', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_basebackup', 'phase', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_indexes', 'relid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_column_usage', 'table_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'sequences', 'numeric_precision', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'table_constraints', 'table_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_tables', 'idx_blks_read', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'user_defined_types', 'user_defined_type_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_statio_user_indexes', 'relname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_trigger', 'tgnargs', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_attribute', 'attstattarget', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_indexes', 'tablespace', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats', 'n_distinct', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_indexes', 'schemaname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_range', 'rngtypid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'interval_precision', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attrdef', 'adbin', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_policies', 'qual', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'udt_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shdescription', 'objoid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_transform', 'trffromsql', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'last_vacuum', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database', 'blks_read', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'data_type', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_subscription', 'subowner', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'seq_tup_read', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_transform', 'oid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'probin', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'scope_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'scope_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_database', 'datdba', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'numeric_scale', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_database', 'encoding', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_all_tables', 'relname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'columns', 'interval_precision', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_subscription', 'oid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_tables', 'idx_blks_hit', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_slru', 'truncates', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routines', 'result_cast_scope_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'schemaname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_domain_usage', 'table_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relforcerowsecurity', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_cluster', 'pid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'attfdwoptions', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_file_settings', 'sourceline', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'role_table_grants', 'table_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_rewrite', 'ev_action', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_tables', 'schemaname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routines', 'type_udt_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_user_indexes', 'idx_tup_read', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'collation_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_subscription', 'latest_end_lsn', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'character_sets', 'form_of_use', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_policy', 'polroles', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_authid', 'rolsuper', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'usage_privileges', 'grantee', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'idx_tup_fetch', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domain_udt_usage', 'domain_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_index', 'indexprs', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_sequences', 'blks_hit', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_subscription_rel', 'srsubstate', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_settings', 'sourceline', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_indexes', 'indexrelid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_extension', 'extversion', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_foreign_data_wrapper', 'fdwvalidator', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_analyze', 'ext_stats_total', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_shdepend', 'dbid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_parser', 'oid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'character_set_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sql_sizing', 'sizing_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_am', 'amtype', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'reltype', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attrdef', 'adnum', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_statio_sys_sequences', 'schemaname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggdeserialfn', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_class', 'relhasrules', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_class', 'relispartition', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_user_mappings', 'srvname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggmfinalextra', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_matviews', 'matviewname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_user_functions', 'funcid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_publication_tables', 'pubname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_user_mappings', 'umoptions', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_udt_usage', 'table_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'user_defined_types', 'user_defined_type_category', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_replication', 'usename', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routines', 'schema_level_routine', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic_ext', 'stxname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_database', 'numbackends', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'collation_character_set_applicability', 'character_set_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'character_set_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'staop4', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relacl', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_transform', 'trftosql', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_activity', 'client_hostname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'is_deterministic', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_all_tables', 'n_tup_upd', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'column_udt_usage', 'table_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_replication', 'usesysid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'attgenerated', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'attcacheoff', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'columns', 'udt_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_policy', 'polrelid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domain_constraints', 'constraint_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_cluster', 'heap_blks_scanned', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'table_constraints', 'table_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'tables', 'table_type', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'conexclop', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_bgwriter', 'buffers_backend_fsync', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'constraint_table_usage', 'table_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_gssapi', 'pid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routines', 'result_cast_char_set_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_usage_grants', 'grantee', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_foreign_data_wrapper', 'fdwowner', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_replication_slots', 'active_pid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database', 'numbackends', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'check_constraints', 'constraint_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_constraint', 'condeferrable', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic_ext_data', 'stxddependencies', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_statio_user_indexes', 'indexrelid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'character_sets', 'default_collate_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routine_privileges', 'routine_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'conffeqop', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_replication_slots', 'confirmed_flush_lsn', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'udt_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'sql_sizing', 'comments', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_archiver', 'last_failed_time', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'constraint_column_usage', 'table_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routine_privileges', 'grantee', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_data_wrappers', 'foreign_data_wrapper_language', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'attndims', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_tables', 'idx_blks_hit', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_replication_slots', 'slot_type', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_domain_usage', 'domain_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_extension', 'oid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_namespace', 'nspacl', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'type_udt_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_all_tables', 'idx_scan', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'referential_constraints', 'unique_constraint_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_opfamily', 'opfmethod', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_group', 'groname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'view_column_usage', 'table_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_operator', 'oprrest', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_init_privs', 'objoid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'n_tup_hot_upd', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_sequences', 'start_value', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attrdef', 'adbin', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'convalidated', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'collations', 'pad_attribute', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'numeric_precision_radix', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routines', 'result_cast_datetime_precision', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sql_parts', 'feature_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_template', 'tmpllexize', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'collation_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_extension', 'extnamespace', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'last_autoanalyze', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_db_role_setting', 'setrole', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_wal_receiver', 'slot_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'enabled_roles', 'role_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shdepend', 'objid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_vacuum', 'num_dead_tuples', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'attribute_default', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_udt_usage', 'column_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_data_wrapper_options', 'foreign_data_wrapper_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_config', 'cfgnamespace', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_replication_slots', 'catalog_xmin', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_ts_dict', 'dictowner', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_user_functions', 'self_time', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_xact_user_tables', 'idx_tup_fetch', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'conbin', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_event_trigger', 'evtenabled', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'table_privileges', 'with_hierarchy', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_settings', 'boot_val', 'UPDATE', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_statio_sys_sequences', 'blks_hit', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats_ext', 'dependencies', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'last_autovacuum', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_user_functions', 'self_time', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_hba_file_rules', 'database', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_trigger', 'tgdeferrable', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_subscription', 'latest_end_lsn', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_indexes', 'indexrelid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_user', 'usesysid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'n_mod_since_analyze', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_activity', 'usesysid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'character_sets', 'character_set_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_replication', 'write_lag', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_sequence', 'seqtypid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_partitioned_table', 'partrelid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_available_extension_versions', 'requires', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'dtd_identifier', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_subscription', 'latest_end_time', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_tables', 'toast_blks_hit', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_subscription', 'last_msg_receipt_time', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_database', 'dattablespace', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats', 'null_frac', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_maximum_cardinality', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'triggers', 'event_object_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_prepared_xacts', 'gid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_config', 'cfgparser', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_replication', 'sync_priority', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_foreign_table', 'ftserver', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'attributes', 'attribute_udt_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_parser', 'prslextype', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'table_privileges', 'privilege_type', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'analyze_count', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'character_maximum_length', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'routine_body', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'datetime_precision', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_foreign_data_wrapper', 'fdwacl', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'n_tup_del', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_user_mappings', 'srvname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'scope_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'new_savepoint_level', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_indexes', 'relid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_matviews', 'hasindexes', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'key_column_usage', 'constraint_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'routine_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stanumbers2', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'idx_scan', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_replication', 'client_addr', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggmtransfn', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'numeric_precision_radix', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_enum', 'enumlabel', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_wal_receiver', 'receive_start_lsn', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'numeric_precision', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_index', 'indclass', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stats_ext', 'attnames', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'constraint_column_usage', 'table_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'usage_privileges', 'is_grantable', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_constraint', 'convalidated', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_replication_slots', 'plugin', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'data_type', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'character_set_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_ssl', 'client_serial', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_foreign_data_wrapper', 'fdwhandler', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_event_trigger', 'evtname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_create_index', 'phase', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggserialfn', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'attributes', 'interval_precision', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_operator', 'oprcanhash', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggers', 'event_object_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'routine_type', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_functions', 'funcname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_extension', 'oid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_indexes', 'indexrelname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'role_usage_grants', 'grantee', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sql_parts', 'is_supported', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'data_type', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'applicable_roles', 'is_grantable', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routines', 'numeric_precision', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'vacuum_count', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_database', 'datacl', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'udt_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_type', 'typtypmod', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relkind', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_prepared_statements', 'name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_trigger', 'tgnargs', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_char_octet_length', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_domain_usage', 'table_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'sql_path', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_parser', 'prstoken', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'column_default', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routine_privileges', 'grantor', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_group', 'groname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shdepend', 'objsubid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_indexes', 'relid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_mapping_options', 'authorization_identifier', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'attributes', 'character_set_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_config', 'name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_am', 'amhandler', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_xact_all_tables', 'relname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_privileges', 'is_grantable', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_settings', 'sourcefile', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_mappings', 'foreign_server_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_char_set_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_bgwriter', 'checkpoints_timed', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_largeobject', 'loid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic_ext', 'stxrelid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_locks', 'mode', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'scope_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'atthasdef', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_operator', 'oprnamespace', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_index', 'indexrelid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_user_tables', 'n_tup_ins', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_user_mapping', 'umserver', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats', 'avg_width', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'seq_scan', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggtranstype', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_policies', 'with_check', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relpages', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'administrable_role_authorizations', 'is_grantable', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'tables', 'table_type', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_default_acl', 'oid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_transform', 'trftype', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shadow', 'useconfig', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database', 'tup_fetched', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_wal_receiver', 'sender_port', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_user_functions', 'funcname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'attfdwoptions', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'administrable_role_authorizations', 'is_grantable', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_database', 'stats_reset', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'identity_start', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_bgwriter', 'maxwritten_clean', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_roles', 'rolreplication', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_create_index', 'tuples_done', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sequences', 'maximum_value', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_char_set_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typinput', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_data_wrappers', 'foreign_data_wrapper_language', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_create_index', 'index_relid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'autoanalyze_count', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'connamespace', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_available_extension_versions', 'name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_init_privs', 'objsubid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_create_index', 'lockers_total', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_cursors', 'is_binary', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggfnoid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_proc', 'prosupport', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'udt_privileges', 'is_grantable', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_udt_grants', 'udt_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_indexes', 'relid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_replication_slots', 'active_pid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'user_defined_types', 'is_final', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'user_defined_types', 'numeric_precision', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats_ext', 'dependencies', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stats', 'most_common_freqs', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'check_constraint_routine_usage', 'constraint_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_sys_tables', 'idx_scan', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_parser', 'prsnamespace', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_tables', 'tidx_blks_read', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_sequences', 'schemaname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'character_set_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_create_index', 'partitions_total', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_indexes', 'schemaname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_settings', 'extra_desc', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_indexes', 'relid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_type', 'typtype', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_template', 'tmplinit', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_roles', 'rolvaliduntil', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_config', 'cfgparser', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'user_defined_types', 'character_maximum_length', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routine_privileges', 'routine_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_prepared_xacts', 'prepared', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_rewrite', 'rulename', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_progress_vacuum', 'max_dead_tuples', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_user_functions', 'funcname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_rules', 'definition', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_operator', 'oprcode', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_roles', 'rolpassword', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'staop3', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_index', 'indisprimary', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_authid', 'rolname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'column_privileges', 'privilege_type', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_sequences', 'relid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_extension', 'extrelocatable', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'user_defined_types', 'numeric_scale', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'usage_privileges', 'object_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_locks', 'locktype', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_attribute', 'attisdropped', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'ordering_routine_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_column_usage', 'dependent_column', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_tables', 'authorization_identifier', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'schemaname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_file_settings', 'name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_cluster', 'index_rebuild_count', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'interval_type', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_index', 'indisready', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_indexes', 'idx_tup_read', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'scope_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'schemata', 'catalog_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relkind', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggminvtransfn', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_database_conflicts', 'confl_tablespace', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shdepend', 'objid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sql_implementation_info', 'implementation_info_id', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_basebackup', 'tablespaces_total', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'tables', 'table_type', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'numeric_precision', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typlen', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_subscription', 'subname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'pronargdefaults', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attrdef', 'oid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_index', 'indisclustered', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'reference_type', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sequences', 'increment', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'key_column_usage', 'ordinal_position', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stanumbers3', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_depend', 'refobjsubid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'table_constraints', 'constraint_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relowner', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_opfamily', 'opfnamespace', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_collation_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'identity_minimum', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'tables', 'user_defined_type_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typtype', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_sequences', 'data_type', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggered_update_columns', 'trigger_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_scope_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'parameter_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_available_extension_versions', 'schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_operator', 'oprcanmerge', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_usage_grants', 'object_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'ordering_form', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_cursors', 'creation_time', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggers', 'action_reference_new_table', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_privileges', 'grantor', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typcategory', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shmem_allocations', 'name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_ts_config', 'cfgnamespace', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'is_instantiable', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_opfamily', 'opfname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_conversion', 'oid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_table_grants', 'with_hierarchy', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_parser', 'oid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_amproc', 'amprocrighttype', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_sequences', 'relid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'seq_scan', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_locks', 'transactionid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_sequences', 'cache_size', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_indexes', 'indexdef', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'domain_udt_usage', 'udt_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_table_options', 'foreign_table_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'referential_constraints', 'update_rule', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_progress_create_index', 'partitions_total', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_database', 'datistemplate', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_routine_grants', 'privilege_type', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'interval_precision', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_settings', 'short_desc', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggers', 'action_timing', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_replication_slots', 'confirmed_flush_lsn', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'datetime_precision', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_file_settings', 'name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'is_null_call', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_replication_origin', 'roname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_functions', 'funcid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_user_mappings', 'authorization_identifier', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_sequences', 'cycle', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_largeobject', 'data', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_replication_slots', 'active_pid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_prepared_statements', 'name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'referential_constraints', 'unique_constraint_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_largeobject', 'pageno', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_matviews', 'ispopulated', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_init_privs', 'initprivs', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_timezone_names', 'abbrev', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'udt_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'numeric_scale', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_trigger', 'tgconstraint', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_bgwriter', 'buffers_checkpoint', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_indexes', 'indexrelname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'constraint_table_usage', 'table_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_ssl', 'compression', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_group', 'groname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'numeric_scale', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routines', 'module_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_policies', 'roles', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_ssl', 'version', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_routine_grants', 'routine_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'key_column_usage', 'table_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'view_table_usage', 'view_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'constraint_table_usage', 'constraint_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_auth_members', 'grantor', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stakind2', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_views', 'schemaname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'n_tup_hot_upd', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggers', 'action_reference_old_table', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_foreign_data_wrapper', 'fdwacl', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_rewrite', 'oid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_partitioned_table', 'partattrs', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shadow', 'usesuper', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats_ext', 'attnames', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domain_constraints', 'is_deferrable', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'character_maximum_length', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats_ext', 'most_common_val_nulls', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'referential_constraints', 'constraint_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'schemata', 'default_character_set_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_all_tables', 'relname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_scope_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_indexes', 'relid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'usage_privileges', 'object_type', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_tables', 'tablename', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_language', 'lanispl', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_authid', 'rolcreaterole', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_activity', 'client_port', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routine_privileges', 'specific_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sequences', 'numeric_precision', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_file_settings', 'seqno', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'collation_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_sequences', 'blks_read', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_language', 'lanispl', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_indexes', 'schemaname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_inherits', 'inhseqno', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'attnum', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_activity', 'usename', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_config_map', 'maptokentype', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database_conflicts', 'confl_deadlock', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_settings', 'vartype', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_servers', 'authorization_identifier', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'character_set_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'key_column_usage', 'column_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'sql_path', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_user_mappings', 'umoptions', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_sequence', 'seqmax', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'user_defined_types', 'character_set_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_language', 'laninline', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_largeobject_metadata', 'lomacl', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_xact_user_functions', 'schemaname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_all_tables', 'schemaname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_amop', 'oid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_sequence', 'seqtypid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_database', 'checksum_failures', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_user_mappings', 'umid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_policies', 'roles', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'key_column_usage', 'table_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_activity', 'wait_event_type', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'element_types', 'character_set_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'n_dead_tup', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_class', 'relnatts', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_replication', 'sent_lsn', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'referential_constraints', 'constraint_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_transform', 'oid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_timezone_abbrevs', 'is_dst', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relispopulated', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typsend', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic_ext', 'stxrelid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_tables', 'heap_blks_hit', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'user_defined_type_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_data_wrappers', 'authorization_identifier', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_numeric_scale', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'table_privileges', 'table_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_indexes', 'idx_blks_hit', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_activity', 'state_change', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'reltuples', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_sequences', 'relname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_cast', 'casttarget', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relminmxid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_routine_grants', 'specific_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_indexes', 'relname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_analyze', 'child_tables_total', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'referential_constraints', 'constraint_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_ts_dict', 'dicttemplate', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_inherits', 'inhrelid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'views', 'table_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'view_column_usage', 'view_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_type', 'typnamespace', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_indexes', 'indexrelname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_template', 'oid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domain_constraints', 'constraint_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_user', 'usecreatedb', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_user_functions', 'self_time', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'conindid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_hba_file_rules', 'address', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'idx_scan', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_tables', 'relid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'attgenerated', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_authid', 'rolreplication', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'constraint_table_usage', 'table_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'tables', 'table_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_config', 'cfgowner', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats_ext', 'most_common_base_freqs', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shmem_allocations', 'off', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_servers', 'foreign_server_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'type_udt_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'proisstrict', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_data_wrappers', 'foreign_data_wrapper_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'table_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_foreign_server', 'srvversion', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'view_column_usage', 'view_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_user_functions', 'funcid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_cluster', 'heap_blks_scanned', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_tables', 'idx_blks_hit', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'datetime_precision', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_user', 'usesysid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_publication', 'oid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_dict', 'dictowner', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_conversion', 'conproc', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_views', 'schemaname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_foreign_data_wrapper', 'fdwname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'foreign_servers', 'authorization_identifier', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_ssl', 'cipher', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routine_privileges', 'specific_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_activity', 'backend_start', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'transforms', 'group_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_operator', 'oprright', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_language', 'laninline', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_slru', 'stats_reset', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_init_privs', 'initprivs', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_activity', 'state_change', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'check_constraint_routine_usage', 'specific_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'key_column_usage', 'column_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'referential_constraints', 'unique_constraint_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_analyze', 'pid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'character_set_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stanumbers5', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_roles', 'rolreplication', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relpersistence', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database_conflicts', 'datid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_progress_analyze', 'datname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'collation_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_tablespace', 'spcname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'idx_tup_fetch', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_settings', 'context', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_sequences', 'blks_hit', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'staop4', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_bgwriter', 'checkpoints_timed', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_trigger', 'tgargs', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggered_update_columns', 'trigger_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_slru', 'stats_reset', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'columns', 'domain_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_analyze', 'child_tables_total', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_subscription', 'last_msg_send_time', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_extension', 'extcondition', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'collations', 'collation_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'parameters', 'parameter_default', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_sequences', 'min_value', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_bgwriter', 'stats_reset', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_subscription', 'subenabled', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_proc', 'prosrc', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_available_extensions', 'installed_version', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_rewrite', 'ev_enabled', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggtranstype', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_progress_create_index', 'command', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggers', 'created', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_subscription', 'subsynccommit', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'collation_character_set_applicability', 'character_set_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'security_type', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attrdef', 'adrelid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_usage_grants', 'privilege_type', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_prepared_xacts', 'prepared', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'table_constraints', 'constraint_type', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database_conflicts', 'datid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'collation_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database', 'stats_reset', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_user_mappings', 'oid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stanumbers1', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'specific_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_routine_grants', 'specific_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_table_grants', 'privilege_type', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'conexclop', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'character_set_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'attnum', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'columns', 'table_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_opclass', 'opcintype', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_replication', 'pid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_usage_grants', 'object_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_index', 'indisreplident', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'attgenerated', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'n_ins_since_vacuum', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typdefault', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_tables', 'tableowner', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'domains', 'datetime_precision', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'key_column_usage', 'table_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_settings', 'short_desc', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_usage_grants', 'object_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_am', 'oid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_timezone_names', 'utc_offset', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_index', 'indcollation', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_sequences', 'relname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'schema_level_routine', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_opclass', 'opckeytype', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_type', 'typalign', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_xact_all_tables', 'schemaname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'role_column_grants', 'table_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_operator', 'oprnamespace', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_collation', 'collnamespace', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shadow', 'usebypassrls', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'user_defined_types', 'user_defined_type_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'scope_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'table_privileges', 'table_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_sequences', 'max_value', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_database_conflicts', 'confl_lock', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_archiver', 'last_archived_time', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_progress_analyze', 'phase', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'key_column_usage', 'table_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_sequences', 'relname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'collation_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'collation_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_tables', 'hastriggers', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_usage_grants', 'is_grantable', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_foreign_data_wrapper', 'fdwvalidator', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_class', 'relfrozenxid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'numeric_precision_radix', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'object_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'interval_type', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_parser', 'prsheadline', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'interval_type', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_table_columns', 'relname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_database', 'datctype', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'n_tup_upd', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_operator', 'oprnegate', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'numeric_scale', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'prosupport', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_servers', 'foreign_data_wrapper_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_available_extension_versions', 'name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_table_grants', 'grantor', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_publication', 'pubinsert', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_activity', 'query_start', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'usage_privileges', 'object_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_database', 'deadlocks', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routine_privileges', 'routine_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_enum', 'oid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_namespace', 'nspowner', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats', 'schemaname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'seq_tup_read', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_range', 'rngcanonical', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_settings', 'category', 'UPDATE', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'sql_features', 'sub_feature_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_proc', 'proleakproof', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_extension', 'oid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_amproc', 'amproc', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_indexes', 'idx_scan', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domain_constraints', 'initially_deferred', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'relname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_roles', 'rolcanlogin', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_activity', 'client_hostname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_user_mapping', 'umoptions', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats', 'tablename', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routines', 'max_dynamic_result_sets', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'user_defined_type_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_indexes', 'indexrelname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'tables', 'table_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'character_octet_length', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'prosecdef', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'key_column_usage', 'table_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'interval_precision', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_subscription', 'last_msg_send_time', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database', 'tup_returned', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'character_sets', 'default_collate_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_gssapi', 'gss_authenticated', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'tables', 'reference_generation', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_activity', 'backend_xmin', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_authid', 'rolconnlimit', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database_conflicts', 'confl_bufferpin', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_data_wrappers', 'foreign_data_wrapper_language', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'collation_character_set_applicability', 'character_set_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_sequences', 'schemaname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stavalues4', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_database', 'datlastsysoid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_sequences', 'blks_read', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'parameters', 'scope_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domain_constraints', 'domain_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_config', 'cfgowner', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'views', 'is_trigger_deletable', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_collation', 'collname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_indexes', 'indexrelname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'n_ins_since_vacuum', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domain_constraints', 'constraint_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_tables', 'schemaname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'collation_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_foreign_table', 'ftserver', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_char_octet_length', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_user_tables', 'seq_scan', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_vacuum', 'num_dead_tuples', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_sequences', 'blks_read', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'constraint_column_usage', 'column_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggmfinalfn', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'interval_precision', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_sequences', 'relname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_servers', 'foreign_data_wrapper_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domain_udt_usage', 'domain_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'n_tup_hot_upd', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_roles', 'rolinherit', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_trigger', 'tginitdeferred', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_conversion', 'oid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_depend', 'classid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_opclass', 'opcfamily', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_mappings', 'foreign_server_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_options', 'table_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'to_sql_specific_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_column_usage', 'column_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggminvtransfn', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sql_sizing', 'sizing_id', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_available_extension_versions', 'relocatable', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggers', 'action_order', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_authid', 'rolvaliduntil', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_available_extension_versions', 'schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_foreign_table', 'ftoptions', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_trigger', 'tgisinternal', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_locks', 'virtualtransaction', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'key_column_usage', 'constraint_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggers', 'action_timing', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routine_privileges', 'specific_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'view_table_usage', 'table_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_sys_tables', 'seq_tup_read', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'udt_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_database', 'blks_read', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_udt_usage', 'udt_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_seclabels', 'objnamespace', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_trigger', 'tgnargs', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_servers', 'authorization_identifier', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_replication_origin_status', 'local_lsn', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'usage_privileges', 'object_type', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_all_tables', 'relid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_timezone_abbrevs', 'utc_offset', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_column_grants', 'grantor', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domain_constraints', 'constraint_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'object_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'scope_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_xact_all_tables', 'n_tup_hot_upd', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_replication_slots', 'slot_type', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_ts_parser', 'oid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_database', 'datconnlimit', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_locks', 'relation', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_type', 'typarray', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_slru', 'name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routines', 'collation_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_depend', 'objsubid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'udt_privileges', 'udt_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_roles', 'rolbypassrls', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_seclabels', 'classoid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stanumbers1', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_default_acl', 'defaclnamespace', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'check_constraints', 'constraint_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routines', 'result_cast_maximum_cardinality', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_prepared_statements', 'statement', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_subscription', 'subname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggered_update_columns', 'event_object_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats_ext', 'kinds', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'n_tup_upd', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'udt_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'n_ins_since_vacuum', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routines', 'interval_precision', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'tables', 'commit_action', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_all_tables', 'idx_tup_fetch', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_column_usage', 'table_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_tablespace', 'spcowner', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'is_final', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_locks', 'locktype', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_replication_slots', 'slot_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'last_autoanalyze', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'sql_features', 'is_verified_by', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_publication_tables', 'tablename', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_statio_all_sequences', 'relname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_available_extension_versions', 'installed', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'parameters', 'datetime_precision', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_policies', 'schemaname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relminmxid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_progress_create_index', 'pid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'check_constraint_routine_usage', 'constraint_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'vacuum_count', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_mapping_options', 'foreign_server_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'attoptions', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_database', 'blk_read_time', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_foreign_server', 'oid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_settings', 'sourceline', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_privileges', 'grantee', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_usage_grants', 'object_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_options', 'column_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attrdef', 'adrelid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'column_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_interval_precision', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'proargmodes', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_maximum_cardinality', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sql_parts', 'is_supported', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_shdescription', 'classoid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_sys_tables', 'idx_scan', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_dict', 'dicttemplate', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_routine_grants', 'specific_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'schemata', 'default_character_set_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_index', 'indisprimary', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_template', 'tmplnamespace', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_policies', 'policyname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_create_index', 'index_relid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'schemata', 'schema_owner', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_statio_user_tables', 'idx_blks_read', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_authid', 'rolcreatedb', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'administrable_role_authorizations', 'role_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_all_tables', 'relid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_user_functions', 'total_time', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats_ext', 'most_common_freqs', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_dict', 'dictnamespace', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_class', 'relkind', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'attstattarget', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database', 'xact_rollback', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_namespace', 'nspacl', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_subscription', 'subsynccommit', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'routine_definition', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_ts_template', 'tmpllexize', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_statistic_ext', 'stxstattarget', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_statio_all_tables', 'schemaname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'data_type_privileges', 'object_type', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_roles', 'rolreplication', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'views', 'is_insertable_into', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'agginitval', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'last_vacuum', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_matviews', 'tablespace', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_locks', 'granted', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_activity', 'application_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'numeric_precision', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_replication_slots', 'xmin', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_language', 'oid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'tables', 'user_defined_type_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_constraint', 'contypid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_table_grants', 'is_grantable', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_depend', 'refobjid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_tables', 'foreign_table_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_sequences', 'blks_read', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_tables', 'idx_blks_hit', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_matviews', 'matviewname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'role_table_grants', 'table_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_user_mappings', 'srvid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'udt_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggers', 'event_object_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'character_octet_length', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'information_schema_catalog_name', 'catalog_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_tables', 'tidx_blks_hit', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routines', 'parameter_style', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'element_types', 'scope_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'character_sets', 'character_repertoire', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'columns', 'identity_generation', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'seq_scan', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_options', 'option_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic_ext', 'oid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats_ext', 'schemaname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'transforms', 'group_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relreplident', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_sequence', 'seqcycle', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_ts_config_map', 'mapseqno', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_replication', 'backend_start', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_user_functions', 'total_time', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'attcollation', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_available_extension_versions', 'requires', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_servers', 'authorization_identifier', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'transforms', 'transform_type', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_index', 'indcheckxmin', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'schemaname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'sequences', 'numeric_precision_radix', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'maximum_cardinality', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'attcacheoff', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_sys_tables', 'relname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic_ext', 'stxnamespace', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'n_dead_tup', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_cluster', 'relid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_file_settings', 'setting', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sequences', 'increment', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_data_wrapper_options', 'option_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_trigger', 'tgtype', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_hba_file_rules', 'error', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'views', 'is_updatable', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'character_maximum_length', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'reltoastrelid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'usage_privileges', 'object_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'parameters', 'udt_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_policy', 'polname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_opfamily', 'opfmethod', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'maximum_cardinality', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_hba_file_rules', 'netmask', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typbyval', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_analyze', 'current_child_table_relid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'tables', 'is_typed', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'user_defined_types', 'datetime_precision', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_wal_receiver', 'conninfo', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_statio_user_tables', 'tidx_blks_hit', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_activity', 'xact_start', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_file_settings', 'name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'character_set_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_locks', 'pid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_domain_usage', 'column_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_collation', 'collisdeterministic', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'module_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_event_trigger', 'evtname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sequences', 'sequence_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_rewrite', 'rulename', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_ssl', 'pid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_servers', 'oid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'data_type_privileges', 'object_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_trigger', 'tgconstraint', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'attfdwoptions', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_user_mappings', 'umuser', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routine_privileges', 'grantee', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_routine_grants', 'is_grantable', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'collation_character_set_applicability', 'collation_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_create_index', 'partitions_total', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routines', 'to_sql_specific_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats', 'histogram_bounds', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_settings', 'name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_file_settings', 'setting', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'autovacuum_count', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_domain_usage', 'domain_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggers', 'trigger_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_column_grants', 'table_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_wal_receiver', 'sender_host', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_db_role_setting', 'setrole', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routines', 'udt_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'key_column_usage', 'table_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relhasindex', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_subscription', 'latest_end_lsn', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_settings', 'boot_val', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'last_vacuum', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_proc', 'protrftypes', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_proc', 'proargdefaults', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggers', 'action_reference_new_table', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'vacuum_count', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'pronamespace', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'referential_constraints', 'delete_rule', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'sql_sizing', 'sizing_id', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_bgwriter', 'maxwritten_clean', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'foreign_tables', 'foreign_server_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'identity_start', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_scope_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_udt_grants', 'is_grantable', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_foreign_data_wrapper', 'fdwoptions', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_attribute', 'attstorage', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_sequence', 'seqtypid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'routine_body', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shseclabel', 'classoid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'attributes', 'maximum_cardinality', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_opfamily', 'opfnamespace', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'interval_type', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_basebackup', 'backup_total', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_settings', 'min_val', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'attributes', 'datetime_precision', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_scope_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'attnotnull', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_amop', 'amoplefttype', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routines', 'security_type', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_user_indexes', 'indexrelname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'collation_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_tables', 'schemaname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'last_vacuum', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_user_mappings', 'srvowner', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database', 'temp_files', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_vacuum', 'heap_blks_scanned', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sql_features', 'feature_id', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domain_udt_usage', 'domain_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_sys_tables', 'idx_tup_fetch', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats', 'correlation', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_analyze', 'child_tables_done', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_indexes', 'schemaname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typelem', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggserialfn', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_index', 'indisreplident', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routine_privileges', 'is_grantable', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_sys_tables', 'idx_scan', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_rules', 'definition', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sql_features', 'is_verified_by', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typowner', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'staattnum', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'idx_scan', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_progress_cluster', 'command', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_available_extension_versions', 'requires', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_tables', 'tidx_blks_hit', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_domain_usage', 'column_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database', 'stats_reset', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'domains', 'domain_default', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'module_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'columns', 'column_default', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_operator', 'oprleft', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routine_privileges', 'specific_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'collation_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_constraint', 'confrelid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'referential_constraints', 'match_option', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_replication', 'flush_lag', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'triggers', 'action_orientation', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'proallargtypes', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_roles', 'rolconnlimit', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_sequences', 'relname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_authid', 'rolsuper', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_amop', 'amoprighttype', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_config_map', 'mapcfg', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_settings', 'sourceline', 'UPDATE', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_replication_origin_status', 'remote_lsn', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_attribute', 'attalign', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_statio_sys_indexes', 'indexrelid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_tables', 'toast_blks_hit', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_sequences', 'schemaname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_domain_usage', 'domain_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'data_type_privileges', 'object_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'interval_type', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_depend', 'refobjid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stats', 'null_frac', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_collation', 'collprovider', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'view_routine_usage', 'table_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_ts_config', 'oid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'n_live_tup', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'role_column_grants', 'grantee', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_file_settings', 'applied', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_views', 'definition', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_conversion', 'contoencoding', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_tables', 'authorization_identifier', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'domain_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_database', 'datallowconn', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_locks', 'database', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'attnum', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_replication_slots', 'slot_type', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_database', 'blks_hit', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_policy', 'polname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'n_tup_upd', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'n_dead_tup', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_amop', 'oid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'parameter_mode', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'sql_features', 'feature_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_event_trigger', 'evtname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_data_wrapper_options', 'foreign_data_wrapper_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_create_index', 'partitions_done', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'key_column_usage', 'constraint_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_operator', 'oprnamespace', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_amop', 'amopopr', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database_conflicts', 'confl_snapshot', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_trigger', 'tgconstraint', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routines', 'external_language', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'parameter_style', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_opclass', 'opcdefault', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_transform', 'trffromsql', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_wal_receiver', 'flushed_lsn', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_replication_origin_status', 'local_lsn', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_bgwriter', 'checkpoint_sync_time', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'attstattarget', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'column_column_usage', 'table_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_user_mappings', 'umid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_mappings', 'foreign_server_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stanumbers5', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_user_tables', 'n_tup_hot_upd', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'data_type_privileges', 'object_type', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_conversion', 'contoencoding', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relpersistence', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'analyze_count', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typtypmod', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'data_type_privileges', 'object_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_subscription_rel', 'srsubid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'referential_constraints', 'constraint_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_indexes', 'schemaname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'conffeqop', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_user_mappings', 'srvid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_attrdef', 'oid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_functions', 'self_time', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'n_tup_upd', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'foreign_tables', 'foreign_table_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_opclass', 'opcmethod', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'collation_character_set_applicability', 'collation_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domain_udt_usage', 'domain_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_replication', 'client_hostname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_timezone_names', 'name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'check_constraint_routine_usage', 'specific_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_user_mappings', 'srvname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_functions', 'schemaname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'collations', 'collation_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'condeferred', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'check_constraint_routine_usage', 'constraint_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'tables', 'user_defined_type_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_sequences', 'last_value', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'check_constraint_routine_usage', 'constraint_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'is_deterministic', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_replication', 'client_addr', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_index', 'indrelid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic_ext', 'stxowner', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_timezone_abbrevs', 'is_dst', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'table_constraints', 'constraint_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'tables', 'table_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_trigger', 'tgparentid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_usage_grants', 'object_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_routine_grants', 'specific_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'interval_type', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'constraint_column_usage', 'constraint_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database', 'stats_reset', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_tables', 'foreign_server_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_event_trigger', 'evtfoid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sql_sizing', 'sizing_id', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_authid', 'rolinherit', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_vacuum', 'heap_blks_scanned', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'pronargs', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'last_vacuum', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'data_type', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'numeric_precision_radix', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_amproc', 'amprocnum', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_publication_tables', 'tablename', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_inherits', 'inhparent', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_subscription', 'latest_end_lsn', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'object_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_table_grants', 'with_hierarchy', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'user_defined_types', 'collation_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'conppeqop', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'user_defined_type_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_range', 'rngcanonical', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_attribute', 'attidentity', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_user_mappings', 'foreign_server_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shdepend', 'refobjid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'udt_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'sql_implementation_info', 'implementation_info_id', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'udt_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_hba_file_rules', 'type', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'table_privileges', 'privilege_type', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'view_column_usage', 'table_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shadow', 'useconfig', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'tables', 'is_typed', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_activity', 'leader_pid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sql_sizing', 'supported_value', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_indexes', 'schemaname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'numeric_precision', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'last_vacuum', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_as_locator', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_tables', 'schemaname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_archiver', 'failed_count', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'usage_privileges', 'grantee', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'reltablespace', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_indexes', 'indexname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats_ext', 'dependencies', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database', 'tup_returned', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'udt_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'udt_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'transforms', 'udt_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_hba_file_rules', 'options', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shmem_allocations', 'size', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_amproc', 'amprocnum', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_xact_all_tables', 'n_tup_del', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_conversion', 'conowner', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routines', 'result_cast_as_locator', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_activity', 'client_addr', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggers', 'action_condition', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_foreign_table', 'ftoptions', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'check_constraints', 'check_clause', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_settings', 'min_val', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'check_constraints', 'constraint_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'referential_constraints', 'match_option', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggfinalmodify', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_analyze', 'child_tables_total', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_auth_members', 'grantor', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_amop', 'amopmethod', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_ssl', 'compression', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_policy', 'oid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'column_udt_usage', 'udt_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_authid', 'oid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_publication', 'pubname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'collations', 'collation_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_range', 'rngsubopc', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'table_constraints', 'constraint_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'view_column_usage', 'column_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'user_mappings', 'foreign_server_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_sequences', 'cycle', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_subscription', 'subowner', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_index', 'indisexclusion', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_transform', 'trftype', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'character_octet_length', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggers', 'created', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'interval_precision', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_index', 'indnkeyatts', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_index', 'indpred', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'proretset', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_wal_receiver', 'pid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'oid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_settings', 'short_desc', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'numeric_precision_radix', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_data_wrappers', 'oid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'proargnames', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_type_udt_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_sequences', 'blks_read', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'scope_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_policies', 'permissive', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'numeric_precision_radix', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_sequence', 'seqtypid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_tables', 'idx_blks_hit', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_cluster', 'heap_tuples_written', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggers', 'event_object_table', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_replication_slots', 'database', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'collation_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_inherits', 'inhseqno', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'ordering_routine_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_user', 'usecreatedb', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_index', 'indoption', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'interval_type', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_prepared_statements', 'parameter_types', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'last_analyze', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'character_set_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_type', 'typreceive', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database', 'numbackends', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_cast', 'castfunc', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_replication', 'reply_time', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'table_constraints', 'enforced', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_foreign_server', 'srvowner', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'transforms', 'udt_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_tables', 'tidx_blks_hit', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic_ext', 'stxkeys', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stavalues5', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_conversion', 'condefault', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_range', 'rngcanonical', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_subscription', 'latest_end_lsn', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'referential_constraints', 'constraint_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'proleakproof', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_timezone_abbrevs', 'is_dst', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'udt_privileges', 'grantee', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_namespace', 'oid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_seclabels', 'classoid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sql_implementation_info', 'integer_value', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_sequences', 'relname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_user', 'usesuper', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_shdescription', 'objoid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_wal_receiver', 'slot_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'usage_privileges', 'grantee', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_available_extension_versions', 'schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_subscription', 'subenabled', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'triggers', 'action_reference_new_row', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_index', 'indnkeyatts', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_indexes', 'relid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_indexes', 'relid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_udt_usage', 'column_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_usage_grants', 'grantor', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_database_conflicts', 'datid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_database', 'datctype', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'user_defined_types', 'ref_dtd_identifier', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_shdepend', 'classid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_language', 'lanowner', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggfinalmodify', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_prepared_statements', 'parameter_types', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_trigger', 'oid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_statio_all_tables', 'heap_blks_hit', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_amproc', 'amprocnum', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'specific_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'maximum_cardinality', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'sequences', 'cycle_option', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stacoll1', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_operator', 'oprname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_range', 'rngsubdiff', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_privileges', 'column_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_collation', 'collversion', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'n_tup_del', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'attalign', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_ssl', 'compression', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'numeric_scale', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_user_functions', 'total_time', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_depend', 'refobjsubid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'oid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_rules', 'schemaname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'view_table_usage', 'view_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'proargtypes', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_user_mappings', 'foreign_server_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'character_sets', 'character_set_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_extension', 'extversion', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_activity', 'wait_event', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_tables', 'schemaname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'attisdropped', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_table_grants', 'grantor', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_roles', 'rolpassword', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_bgwriter', 'checkpoints_req', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_collation', 'oid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'proretset', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_tables', 'foreign_table_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_user_functions', 'total_time', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggers', 'event_object_table', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'interval_type', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_replication_origin', 'roname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'data_type', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'prokind', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_policy', 'oid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'udt_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'schemaname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_analyze', 'relid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_vacuum', 'datname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_all_tables', 'seq_tup_read', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_am', 'amtype', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_statio_sys_tables', 'heap_blks_hit', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_table_columns', 'nspname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'is_final', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'confkey', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'seq_scan', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'character_octet_length', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggmtransfn', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_table_grants', 'grantor', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_index', 'indisclustered', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_slru', 'flushes', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'attinhcount', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_subscription_rel', 'srrelid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database', 'stats_reset', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_operator', 'oprright', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_foreign_server', 'srvoptions', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typacl', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_hba_file_rules', 'address', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'key_column_usage', 'constraint_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_prepared_xacts', 'owner', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_udt_usage', 'udt_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'triggered_update_columns', 'event_object_column', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic_ext', 'stxstattarget', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_publication_rel', 'prpubid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stanumbers1', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'sql_features', 'sub_feature_id', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'foreign_servers', 'foreign_data_wrapper_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats', 'most_common_vals', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'parameter_default', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routine_privileges', 'specific_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'data_type_privileges', 'object_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_operator', 'oprright', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'routine_body', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typsend', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_statio_sys_indexes', 'idx_blks_hit', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_operator', 'oid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_activity', 'backend_xid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'last_analyze', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_progress_cluster', 'phase', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'referential_constraints', 'constraint_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_database', 'datfrozenxid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'udt_privileges', 'is_grantable', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_subscription', 'latest_end_time', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_views', 'definition', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_cast', 'casttarget', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_privileges', 'table_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_type', 'typdefault', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_functions', 'funcname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'proargdefaults', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'collation_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_tablespace', 'spcowner', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'role_routine_grants', 'routine_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'character_octet_length', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sql_sizing', 'sizing_id', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'datetime_precision', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'parameter_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_table_options', 'foreign_table_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_policy', 'polrelid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_indexes', 'indexname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_tables', 'relname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'udt_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relowner', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_roles', 'rolcanlogin', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_replication_slots', 'safe_wal_size', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_vacuum', 'pid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'collation_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'usage_privileges', 'object_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typdelim', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_replication', 'client_hostname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_replication_slots', 'temporary', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_inherits', 'inhseqno', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routine_privileges', 'privilege_type', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_usage_grants', 'object_type', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'data_type', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_locks', 'granted', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_available_extension_versions', 'name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_replication', 'reply_time', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'domain_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_default_acl', 'defaclobjtype', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'user_mapping_options', 'option_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'attributes', 'scope_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'constraint_table_usage', 'constraint_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'parameters', 'character_set_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'constraint_column_usage', 'table_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'tables', 'is_insertable_into', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_seclabels', 'objoid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_slru', 'blks_hit', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'interval_type', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_cursors', 'creation_time', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_subscription', 'subid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'collation_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'schemata', 'sql_path', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'idx_tup_fetch', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'collations', 'collation_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_extension', 'extcondition', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_file_settings', 'seqno', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_activity', 'query_start', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'numeric_precision', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_user_mapping', 'umserver', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'usage_privileges', 'privilege_type', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_replication', 'sent_lsn', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relchecks', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stats_ext', 'statistics_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'collation_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_cursors', 'name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'tables', 'user_defined_type_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_class', 'relam', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_table_grants', 'grantee', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_column_grants', 'column_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_foreign_data_wrapper', 'fdwhandler', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_ssl', 'client_dn', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_scope_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relrewrite', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_template', 'tmplname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'column_privileges', 'table_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_all_indexes', 'idx_tup_fetch', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_database', 'oid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'attributes', 'character_set_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_available_extension_versions', 'relocatable', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routines', 'new_savepoint_level', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_basebackup', 'backup_total', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_amproc', 'oid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_parser', 'prsend', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_namespace', 'nspname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'dtd_identifier', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'scope_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'maximum_cardinality', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'n_tup_upd', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_activity', 'application_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'sequences', 'maximum_value', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'collation_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_sequences', 'relid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stats_ext', 'statistics_owner', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_publication_tables', 'pubname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'domains', 'character_set_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_policy', 'polcmd', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_all_tables', 'seq_tup_read', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_ssl', 'cipher', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_interval_type', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'view_column_usage', 'view_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'table_constraints', 'table_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_cast', 'castfunc', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_extension', 'extowner', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_indexes', 'relid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_largeobject', 'data', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'column_privileges', 'grantee', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_database', 'datfrozenxid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'relname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'table_constraints', 'initially_deferred', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'relname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats_ext', 'n_distinct', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_table_grants', 'privilege_type', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_xact_user_tables', 'n_tup_hot_upd', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_ts_parser', 'prsstart', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'pronargdefaults', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sql_parts', 'comments', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_user', 'usename', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_ts_template', 'tmplinit', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_usage_grants', 'object_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_parser', 'prsname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typalign', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggered_update_columns', 'event_object_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_tables', 'relname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_opclass', 'opcname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'attname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_subscription', 'subid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_archiver', 'last_failed_wal', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_options', 'option_value', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_wal_receiver', 'last_msg_send_time', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'scope_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_usage_grants', 'grantee', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_bgwriter', 'maxwritten_clean', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'n_tup_upd', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sql_parts', 'feature_id', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'is_nullable', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'collation_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic_ext_data', 'stxdndistinct', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_extension', 'extcondition', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domain_constraints', 'domain_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_init_privs', 'objoid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_opclass', 'opckeytype', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'constraint_table_usage', 'constraint_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'parameters', 'numeric_precision_radix', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_sequences', 'blks_hit', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'n_live_tup', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_servers', 'foreign_server_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_default_acl', 'defaclnamespace', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'foreign_tables', 'foreign_table_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typbasetype', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic_ext', 'oid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_cursors', 'name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_authid', 'rolcreatedb', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_tablespace', 'oid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_proc', 'prolang', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_tables', 'tableowner', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_cursors', 'creation_time', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'sql_features', 'comments', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'ordering_form', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_transform', 'trffromsql', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'check_constraint_routine_usage', 'constraint_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'parameters', 'as_locator', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_hba_file_rules', 'user_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'applicable_roles', 'is_grantable', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_dict', 'oid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domain_constraints', 'is_deferrable', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'table_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domain_udt_usage', 'udt_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'last_autoanalyze', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_config_map', 'mapdict', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'is_derived_reference_attribute', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_sequences', 'schemaname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'sql_path', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_mapping_options', 'foreign_server_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'conindid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_activity', 'backend_type', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_policies', 'permissive', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shseclabel', 'label', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'data_type', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_settings', 'vartype', 'UPDATE', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_seclabels', 'provider', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stacoll1', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_authid', 'rolvaliduntil', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relacl', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_progress_analyze', 'datid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_database', 'datdba', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_replication_slots', 'temporary', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'n_tup_hot_upd', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'views', 'view_definition', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_authid', 'rolbypassrls', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_publication', 'pubname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database_conflicts', 'confl_deadlock', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_roles', 'rolconnlimit', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_activity', 'backend_type', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stadistinct', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_indexes', 'idx_blks_hit', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'role_usage_grants', 'object_type', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_amproc', 'oid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'attstorage', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_timezone_abbrevs', 'utc_offset', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_gssapi', 'principal', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'numeric_precision', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_column_grants', 'table_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'administrable_role_authorizations', 'grantee', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_sys_tables', 'relname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'udt_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_tables', 'foreign_table_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shdepend', 'refclassid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_progress_analyze', 'sample_blks_total', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_trigger', 'tgoldtable', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'seq_scan', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_attribute', 'attislocal', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sequences', 'sequence_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'attcacheoff', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_roles', 'rolbypassrls', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stats_ext', 'n_distinct', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_seclabels', 'label', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic_ext_data', 'stxddependencies', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'udt_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typlen', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'identity_increment', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_replication', 'client_port', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_tables', 'tablespace', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats_ext', 'statistics_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'tables', 'table_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'attoptions', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shseclabel', 'classoid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'dtd_identifier', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_event_trigger', 'evtowner', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'referential_constraints', 'constraint_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stats', 'inherited', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_user_functions', 'calls', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'role_column_grants', 'column_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_event_trigger', 'evtevent', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_trigger', 'tgisinternal', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_replication_slots', 'database', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_ssl', 'issuer_dn', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_foreign_server', 'srvowner', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'attndims', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_vacuum', 'pid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_vacuum', 'datid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'element_types', 'data_type', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'n_tup_del', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_functions', 'total_time', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_indexes', 'tablespace', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'numeric_precision_radix', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_cursors', 'statement', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sequences', 'data_type', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_operator', 'oprowner', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_bgwriter', 'buffers_backend_fsync', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats', 'inherited', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_template', 'tmplinit', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggserialfn', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_prepared_xacts', 'gid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'analyze_count', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_replication', 'write_lsn', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'tables', 'is_typed', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'udt_privileges', 'privilege_type', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'character_sets', 'default_collate_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_servers', 'foreign_server_version', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_matviews', 'matviewowner', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_trigger', 'tgqual', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggtransspace', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'check_constraint_routine_usage', 'specific_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'triggered_update_columns', 'event_object_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_ssl', 'pid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_server_options', 'foreign_server_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_ts_dict', 'dictinitoption', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'is_udt_dependent', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_aggregate', 'agginitval', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'user_defined_type_category', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'constraint_column_usage', 'table_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'probin', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_authid', 'rolvaliduntil', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_domain_usage', 'table_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic_ext_data', 'stxdmcv', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_cluster', 'phase', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'reference_type', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_prepared_statements', 'from_sql', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_tables', 'toast_blks_hit', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_cluster', 'datid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'proisstrict', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'key_column_usage', 'position_in_unique_constraint', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggered_update_columns', 'event_object_column', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'specific_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggered_update_columns', 'event_object_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_udt_grants', 'grantor', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'character_octet_length', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'to_sql_specific_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_slru', 'name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_indexes', 'relid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'check_constraints', 'constraint_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_default_acl', 'defaclacl', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_sequences', 'data_type', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database', 'tup_updated', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_index', 'indoption', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relispartition', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'character_set_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_table_columns', 'nspname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_indexes', 'relname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_roles', 'rolconfig', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_servers', 'foreign_server_version', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_replication', 'pid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_archiver', 'archived_count', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'constraint_table_usage', 'table_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_trigger', 'tgconstrrelid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_proc', 'prorettype', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_description', 'classoid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_sequences', 'sequenceowner', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_policies', 'schemaname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'columns', 'udt_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domain_udt_usage', 'domain_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'view_column_usage', 'view_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_language', 'oid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_user_tables', 'relid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'external_language', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typisdefined', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_partitioned_table', 'partdefid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_subscription_rel', 'srrelid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats', 'elem_count_histogram', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'collation_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'parameter_style', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_mapping_options', 'foreign_server_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_index', 'indimmediate', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'datetime_precision', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_attribute', 'attnum', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_conversion', 'contoencoding', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_wal_receiver', 'sender_host', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_replication_origin_status', 'local_id', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sql_parts', 'feature_id', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'character_set_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_options', 'table_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_sequences', 'schemaname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relallvisible', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_tablespace', 'spcoptions', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_replication', 'client_addr', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_collation_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_vacuum', 'relid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_maximum_cardinality', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_enum', 'enumsortorder', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic_ext', 'stxname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic_ext_data', 'stxoid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_cursors', 'is_scrollable', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_policy', 'polqual', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_create_index', 'tuples_done', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'dtd_identifier', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggdeserialfn', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_auth_members', 'member', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_servers', 'oid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_policy', 'polroles', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database', 'temp_bytes', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_authid', 'rolsuper', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_replication', 'client_addr', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_sys_tables', 'relid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_timezone_names', 'is_dst', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_user_mappings', 'umuser', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_wal_receiver', 'written_lsn', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'columns', 'generation_expression', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_tables', 'foreign_table_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relforcerowsecurity', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typanalyze', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'administrable_role_authorizations', 'is_grantable', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_amop', 'oid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typstorage', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'relid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'parameters', 'data_type', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_settings', 'max_val', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database', 'datname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'column_udt_usage', 'table_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_indexes', 'idx_blks_read', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routine_privileges', 'specific_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'ref_dtd_identifier', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggmfinalfn', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'routine_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_authid', 'rolsuper', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'constraint_column_usage', 'constraint_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'agginitval', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_replication_slots', 'database', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'views', 'check_option', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stats', 'tablename', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'n_live_tup', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_matviews', 'definition', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'maximum_cardinality', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_tables', 'foreign_server_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_dtd_identifier', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_operator', 'oid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'maximum_cardinality', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'routine_definition', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_servers', 'foreign_server_type', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'tables', 'table_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'collation_character_set_applicability', 'collation_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggmtranstype', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_sequences', 'schemaname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'confkey', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'view_routine_usage', 'table_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_trigger', 'tgconstrindid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'scope_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_depend', 'refclassid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_index', 'indislive', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_statio_sys_sequences', 'relname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'views', 'table_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_index', 'indexrelid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic_ext_data', 'stxdndistinct', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'interval_type', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_extension', 'extconfig', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relpartbound', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_indexes', 'indexrelid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'last_autovacuum', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_foreign_data_wrapper', 'fdwowner', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_trigger', 'tginitdeferred', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_statio_sys_tables', 'heap_blks_read', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_archiver', 'last_archived_wal', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_extension', 'oid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_user_tables', 'n_tup_upd', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_amop', 'amoppurpose', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'ordering_category', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggfinalextra', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'ordering_routine_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats_ext', 'n_distinct', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_sys_indexes', 'indexrelid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'views', 'table_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'foreign_server_options', 'option_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_sequence', 'seqstart', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shmem_allocations', 'name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_foreign_table', 'ftrelid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_user', 'valuntil', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'table_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'table_constraints', 'is_deferrable', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routines', 'scope_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relam', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'routine_type', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_prepared_xacts', 'transaction', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'numeric_precision_radix', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_bgwriter', 'checkpoint_write_time', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'is_nullable', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_foreign_server', 'srvtype', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_udt_grants', 'udt_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_index', 'indisclustered', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'attmissingval', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_policy', 'polroles', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'view_routine_usage', 'specific_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_indexes', 'relname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_progress_vacuum', 'pid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_roles', 'rolcreaterole', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_foreign_table', 'ftserver', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_archiver', 'last_failed_time', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stanumbers2', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_tables', 'ftoptions', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'confdeltype', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_locks', 'tuple', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shadow', 'useconfig', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_functions', 'calls', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routines', 'result_cast_interval_type', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sql_features', 'is_supported', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_progress_create_index', 'blocks_done', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_index', 'indrelid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_usage_grants', 'object_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_operator', 'oprcanhash', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_statio_user_sequences', 'relname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_slru', 'blks_hit', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic_ext', 'oid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'element_types', 'udt_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_timezone_names', 'name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_index', 'indkey', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_subscription_rel', 'srrelid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sql_features', 'feature_id', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_language', 'lanvalidator', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_seclabels', 'classoid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'usage_privileges', 'grantee', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_amop', 'amoplefttype', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats', 'null_frac', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_init_privs', 'classoid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_file_settings', 'error', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_analyze', 'sample_blks_total', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_data_wrappers', 'foreign_data_wrapper_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_analyze', 'sample_blks_scanned', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'usage_privileges', 'object_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_all_tables', 'schemaname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_index', 'indimmediate', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_tables', 'heap_blks_read', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_hba_file_rules', 'user_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_statio_user_tables', 'tidx_blks_read', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'table_privileges', 'grantor', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_slru', 'blks_read', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_index', 'indisexclusion', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_auth_members', 'roleid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'domains', 'character_octet_length', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_indexes', 'idx_scan', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_roles', 'rolvaliduntil', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_range', 'rngtypid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'interval_precision', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'role_routine_grants', 'routine_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_seclabels', 'label', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_database', 'xact_commit', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_available_extensions', 'installed_version', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'routine_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sql_implementation_info', 'integer_value', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_archiver', 'last_failed_time', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'udt_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typdelim', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typdefault', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'data_type', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_sequences', 'sequenceowner', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'transforms', 'udt_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_operator', 'oprcanmerge', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'autovacuum_count', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_all_tables', 'n_tup_del', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'domains', 'interval_precision', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'collation_character_set_applicability', 'collation_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_replication_slots', 'confirmed_flush_lsn', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_prepared_statements', 'prepare_time', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'character_sets', 'form_of_use', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_tables', 'hasrules', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'table_constraints', 'constraint_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_indexes', 'relname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_amop', 'amopsortfamily', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_archiver', 'archived_count', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stakind3', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'conparentid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'sql_implementation_info', 'integer_value', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'domains', 'character_maximum_length', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggcombinefn', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_tables', 'heap_blks_hit', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_wal_receiver', 'receive_start_tli', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database', 'deadlocks', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_table_options', 'option_value', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_event_trigger', 'evtfoid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'source_dtd_identifier', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_auth_members', 'member', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_transform', 'trftosql', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'n_tup_ins', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_tables', 'toast_blks_read', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_indexes', 'relname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_udt_grants', 'privilege_type', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_policies', 'cmd', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_tablespace', 'spcname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_cluster', 'phase', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggers', 'action_orientation', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_foreign_data_wrapper', 'fdwowner', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggminitval', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_publication', 'pubname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_table_grants', 'with_hierarchy', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_template', 'tmpllexize', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'analyze_count', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_statio_all_indexes', 'idx_blks_hit', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'is_generated', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_matviews', 'schemaname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_extension', 'extrelocatable', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_server_options', 'option_value', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database', 'checksum_failures', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_seclabels', 'objoid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'to_sql_specific_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_activity', 'pid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_settings', 'pending_restart', 'UPDATE', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_policies', 'with_check', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_subscription', 'subdbid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'collation_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_operator', 'oprcode', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_seclabels', 'objoid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'numeric_scale', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_cluster', 'heap_tuples_scanned', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sequences', 'data_type', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_collation', 'collprovider', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'table_privileges', 'with_hierarchy', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'foreign_servers', 'foreign_server_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_indexes', 'indexrelid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'interval_type', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_create_index', 'relid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggers', 'action_order', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'column_options', 'option_value', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_operator', 'oprresult', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_statistic_ext', 'stxkeys', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_enum', 'oid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shseclabel', 'objoid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_usage_grants', 'is_grantable', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_sequences', 'start_value', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_database', 'datminmxid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_settings', 'sourcefile', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_opfamily', 'opfnamespace', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_ts_dict', 'dictname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_activity', 'usesysid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_seclabel', 'objsubid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database_conflicts', 'confl_bufferpin', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_index', 'indnatts', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_authid', 'rolcanlogin', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sql_sizing', 'sizing_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_cluster', 'heap_tuples_written', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_all_tables', 'idx_scan', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_prepared_statements', 'prepare_time', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'scope_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_prepared_xacts', 'gid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'relid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_indexes', 'idx_blks_read', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sql_implementation_info', 'implementation_info_id', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_routine_grants', 'is_grantable', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'attmissingval', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'domain_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'external_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'character_octet_length', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'attcollation', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_rules', 'definition', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_progress_create_index', 'phase', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_column_grants', 'grantor', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_init_privs', 'objoid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stavalues1', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_replication_slots', 'database', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typowner', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_replication', 'usename', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'udt_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_tables', 'rowsecurity', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'conrelid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_database', 'datlastsysoid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_servers', 'foreign_data_wrapper_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_servers', 'foreign_server_type', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_policies', 'tablename', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_type', 'typndims', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_opfamily', 'opfmethod', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'domains', 'domain_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'tables', 'user_defined_type_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_trigger', 'tgattr', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'character_octet_length', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_tables', 'hasindexes', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'constraint_column_usage', 'table_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_hba_file_rules', 'user_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routine_privileges', 'specific_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_sequences', 'last_value', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'view_routine_usage', 'table_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'atttypid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'idx_tup_fetch', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'referential_constraints', 'unique_constraint_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_conversion', 'conforencoding', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'specific_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'conislocal', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_activity', 'client_hostname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routine_privileges', 'routine_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_archiver', 'last_failed_wal', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'collation_character_set_applicability', 'character_set_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggcombinefn', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_available_extension_versions', 'comment', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database', 'blks_hit', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_database', 'dattablespace', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'tables', 'self_referencing_column_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_slru', 'flushes', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_data_wrappers', 'fdwoptions', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_domain_usage', 'table_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_operator', 'oprleft', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'parameter_default', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_replication', 'application_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_usage_grants', 'privilege_type', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_bgwriter', 'buffers_clean', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_table_columns', 'attfdwoptions', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_tables', 'tablename', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'attributes', 'collation_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_wal_receiver', 'slot_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'relkind', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_replication', 'replay_lsn', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database', 'datname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_indexes', 'idx_tup_read', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggers', 'action_order', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'n_live_tup', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_enum', 'enumtypid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'identity_cycle', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_cast', 'castsource', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_locks', 'page', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'proowner', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'character_sets', 'character_set_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_event_trigger', 'evtname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'parameter_mode', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'view_column_usage', 'view_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'autoanalyze_count', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_tablespace', 'spcowner', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_user_tables', 'n_tup_upd', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_column_grants', 'column_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'sql_sizing', 'supported_value', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_replication', 'application_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'view_column_usage', 'view_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic_ext', 'stxnamespace', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'ordering_form', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'udt_privileges', 'grantee', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_cursors', 'statement', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'dtd_identifier', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_subscription', 'pid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_parser', 'prsname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_operator', 'oprkind', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'collation_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_statistic_ext', 'stxnamespace', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_subscription', 'last_msg_receipt_time', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_index', 'indcollation', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'autovacuum_count', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_ts_parser', 'prsnamespace', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats_ext', 'schemaname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_language', 'lanispl', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'interval_type', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'collection_type_identifier', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_functions', 'funcname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attrdef', 'oid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_init_privs', 'privtype', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_sys_tables', 'n_ins_since_vacuum', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'autoanalyze_count', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'foreign_table_options', 'foreign_table_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_progress_create_index', 'index_relid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_rules', 'tablename', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_enum', 'enumlabel', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typoutput', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_database', 'datistemplate', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'data_type_privileges', 'dtd_identifier', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_replication', 'flush_lsn', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_privileges', 'grantee', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sql_features', 'sub_feature_id', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'type_udt_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'condeferrable', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_column_usage', 'table_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_namespace', 'nspacl', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'collation_character_set_applicability', 'collation_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'schemaname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats_ext', 'statistics_schemaname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_opclass', 'opcname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'as_locator', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_locks', 'database', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'usage_privileges', 'object_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_xact_user_functions', 'funcid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'ordinal_position', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_rewrite', 'ev_qual', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_inherits', 'inhparent', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_available_extension_versions', 'version', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'applicable_roles', 'grantee', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'constraint_column_usage', 'table_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_indexes', 'indexname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_server_options', 'foreign_server_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'character_set_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_ts_dict', 'dictname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_roles', 'rolcreaterole', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_routine_grants', 'grantee', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_activity', 'usesysid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_publication_rel', 'oid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_sequence', 'seqincrement', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_user_tables', 'n_tup_del', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_config', 'name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'udt_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'ordinal_position', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'view_routine_usage', 'table_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'prorows', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_trigger', 'tgenabled', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'character_octet_length', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_database', 'temp_files', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_create_index', 'command', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_foreign_table', 'ftoptions', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_subscription', 'pid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'reloftype', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_trigger', 'tgqual', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_trigger', 'tgisinternal', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_available_extension_versions', 'trusted', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_create_index', 'relid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'check_constraints', 'constraint_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_seclabels', 'objsubid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_foreign_server', 'oid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_authid', 'rolcreatedb', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'interval_type', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'conname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_partitioned_table', 'partnatts', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_user_mappings', 'foreign_server_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_options', 'column_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_publication', 'pubdelete', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_user', 'usename', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'role_routine_grants', 'routine_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_statistic_ext', 'stxowner', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_auth_members', 'admin_option', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_locks', 'objid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'domain_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'reloptions', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_trigger', 'tgconstrindid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggers', 'event_manipulation', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'to_sql_specific_catalog', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_sys_tables', 'n_tup_upd', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_prepared_statements', 'parameter_types', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_all_tables', 'n_mod_since_analyze', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_operator', 'oprcom', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'character_set_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'staattnum', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_vacuum', 'index_vacuum_count', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'key_column_usage', 'constraint_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats_ext', 'statistics_owner', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'role_routine_grants', 'privilege_type', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_wal_receiver', 'slot_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'prosrc', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggered_update_columns', 'event_object_table', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_as_locator', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_table_columns', 'nspname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'character_sets', 'character_repertoire', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statistic', 'stavalues3', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_foreign_server', 'srvfdw', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_sequences', 'max_value', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shseclabel', 'classoid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shseclabel', 'classoid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'column_privileges', 'privilege_type', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_publication', 'pubdelete', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_aggregate', 'aggtransspace', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_available_extension_versions', 'superuser', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routines', 'is_deterministic', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_indexes', 'relname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggers', 'trigger_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'collation_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'provariadic', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'prokind', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_tables', 'hasindexes', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'schemata', 'default_character_set_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'transforms', 'specific_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_replication', 'write_lsn', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_data_wrappers', 'foreign_data_wrapper_catalog', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_servers', 'oid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_class', 'reloftype', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_collation', 'collisdeterministic', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_replication', 'backend_xmin', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'maximum_cardinality', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_tables', 'hasrules', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_foreign_server', 'srvowner', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_opclass', 'opcname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats', 'attname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'sequences', 'minimum_value', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'type_udt_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'column_privileges', 'table_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_bgwriter', 'buffers_backend_fsync', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'udt_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_user_mappings', 'umuser', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'applicable_roles', 'is_grantable', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'columns', 'collation_name', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_sequence', 'seqrelid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'domain_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_ts_config', 'cfgparser', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_tables', 'heap_blks_read', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_wal_receiver', 'latest_end_lsn', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_create_index', 'datname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_indexes', 'idx_blks_read', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_enum', 'enumlabel', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'user_mappings', 'authorization_identifier', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_settings', 'enumvals', 'UPDATE', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_replication', 'replay_lsn', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_hba_file_rules', 'type', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_indexes', 'indexdef', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'routine_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'module_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_publication_tables', 'schemaname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'table_constraints', 'table_schema', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_indexes', 'indexrelname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_depend', 'classid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typalign', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'attndims', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_user_mappings', 'umuser', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'type_udt_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_all_tables', 'schemaname', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'udt_privileges', 'udt_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routines', 'routine_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_all_indexes', 'relname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'views', 'is_trigger_updatable', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'data_type_privileges', 'object_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_description', 'objoid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_scope_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_activity', 'backend_start', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_replication', 'sync_state', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typisdefined', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_index', 'indislive', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_replication', 'sync_state', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'attributes', 'scope_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_slru', 'blks_hit', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'check_constraints', 'constraint_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_create_index', 'blocks_done', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_user_functions', 'calls', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_trigger', 'tgattr', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shmem_allocations', 'name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_sequences', 'relid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_sys_tables', 'toast_blks_hit', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_foreign_server', 'srvversion', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_proc', 'protrftypes', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'confupdtype', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sequences', 'sequence_schema', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'interval_type', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'element_types', 'object_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_sequence', 'seqcycle', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_roles', 'rolreplication', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_wal_receiver', 'pid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'numeric_scale', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'numeric_scale', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_tables', 'schemaname', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_vacuum', 'pid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_create_index', 'blocks_done', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'triggers', 'action_reference_old_table', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_ssl', 'cipher', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'usage_privileges', 'grantee', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_column_grants', 'privilege_type', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_ts_template', 'tmplname', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'views', 'table_name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_attribute', 'attcollation', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_depend', 'objid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_all_tables', 'relid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'constraint_table_usage', 'table_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_auth_members', 'member', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'identity_generation', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_type', 'typispreferred', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_collation', 'collcollate', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_progress_basebackup', 'tablespaces_total', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_database', 'datminmxid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'character_sets', 'character_set_catalog', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'specific_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_language', 'lanvalidator', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'parameters', 'interval_precision', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_user_mappings', 'umid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', '_pg_foreign_table_columns', 'relname', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_cluster', 'datid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_ts_parser', 'prsheadline', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_foreign_server', 'srvversion', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_sequences', 'sequencename', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'parameters', 'as_locator', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_constraint', 'conislocal', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'confupdtype', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_subscription', 'relid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stats_ext', 'most_common_vals', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_proc', 'proretset', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_constraint', 'confmatchtype', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_roles', 'oid', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'collations', 'collation_catalog', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'is_updatable', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_statio_user_sequences', 'blks_hit', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_progress_cluster', 'heap_blks_scanned', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_prepared_xacts', 'owner', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_xact_sys_tables', 'n_tup_hot_upd', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'referential_constraints', 'update_rule', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_transform', 'trftype', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'domains', 'scope_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_collation', 'collencoding', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_analyze', 'sample_blks_total', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shadow', 'useconfig', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_sys_indexes', 'idx_tup_read', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_bgwriter', 'buffers_backend_fsync', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_cluster', 'pid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'views', 'is_trigger_deletable', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shdescription', 'classoid', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_roles', 'rolcanlogin', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_opfamily', 'opfmethod', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_amproc', 'amprocfamily', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_roles', 'oid', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'column_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'routines', 'result_cast_type_udt_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'transforms', 'specific_name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_operator', 'oprnegate', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'attributes', 'scope_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_table_options', 'foreign_table_name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_roles', 'oid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_shadow', 'passwd', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_publication_rel', 'prpubid', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_activity', 'client_hostname', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'check_constraints', 'constraint_schema', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_gssapi', 'principal', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'domains', 'numeric_precision_radix', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'udt_privileges', 'grantee', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'columns', 'maximum_cardinality', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'view_routine_usage', 'specific_schema', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'routines', 'collation_catalog', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_operator', 'oprowner', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_statio_user_tables', 'relid', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_init_privs', 'initprivs', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_cluster', 'index_rebuild_count', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'foreign_server_options', 'foreign_server_name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'sql_sizing', 'comments', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'user_defined_type_schema', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'user_defined_types', 'is_final', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_progress_analyze', 'phase', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'pg_catalog', 'pg_stat_xact_all_tables', 'n_tup_upd', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_stat_ssl', 'compression', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'PUBLIC', 'sdb', 'information_schema', 'key_column_usage', 'position_in_unique_constraint', 'SELECT', 'NO');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'information_schema', 'role_column_grants', 'grantee', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('postgres', 'postgres', 'sdb', 'pg_catalog', 'pg_largeobject_metadata', 'lomacl', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'cart', 'order_date', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'bike', 'date', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'bike', 'id', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'bike', 'colour', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'cart', 'total', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'cart', 'id', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'bike', 'amount', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'cart', 'total', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'usr', 'id', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'bike', 'price', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'bike', 'colour', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'bike', 'date', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'cart_item', 'bike_id', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'cart', 'total', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'usr', 'username', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'cart_item', 'cart_id', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'bike', 'filename', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'user_role', 'roles', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'cart_item', 'amount', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'usr', 'active', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'cart', 'order_date', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'cart_item', 'price', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'cart', 'id', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'bike', 'amount', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'cart', 'status', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'cart', 'user_id', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'cart_item', 'cart_id', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'usr', 'id', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'bike', 'brand', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'cart', 'status', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'usr', 'username', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'user_role', 'roles', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'usr', 'active', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'usr', 'password', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'bike', 'category', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'usr', 'username', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'cart_item', 'bike_id', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'bike', 'description', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'usr', 'registration_date', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'cart_item', 'id', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'cart_item', 'cart_id', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'bike', 'name', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'bike', 'name', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'user_role', 'user_id', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'cart', 'status', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'bike', 'date', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'bike', 'category', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'bike', 'name', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'bike', 'description', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'bike', 'date', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'cart_item', 'id', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'user_role', 'roles', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'usr', 'registration_date', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'bike', 'colour', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'user_role', 'user_id', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'usr', 'password', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'bike', 'brand', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'bike', 'brand', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'cart', 'order_date', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'cart_item', 'amount', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'cart_item', 'id', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'bike', 'id', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'bike', 'amount', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'usr', 'active', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'bike', 'filename', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'bike', 'filename', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'cart_item', 'price', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'usr', 'registration_date', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'cart_item', 'id', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'bike', 'description', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'cart_item', 'cart_id', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'cart', 'user_id', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'bike', 'name', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'cart', 'order_date', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'bike', 'amount', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'usr', 'password', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'cart', 'user_id', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'bike', 'price', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'cart', 'id', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'bike', 'description', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'cart_item', 'amount', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'user_role', 'user_id', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'cart', 'id', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'cart_item', 'amount', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'usr', 'username', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'cart', 'user_id', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'cart_item', 'bike_id', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'usr', 'password', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'bike', 'category', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'bike', 'price', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'cart_item', 'price', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'bike', 'id', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'bike', 'price', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'bike', 'colour', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'cart', 'total', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'cart', 'status', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'bike', 'category', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'usr', 'id', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'usr', 'id', 'UPDATE', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'bike', 'id', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'bike', 'filename', 'REFERENCES', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'usr', 'active', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'cart_item', 'price', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'bike', 'brand', 'INSERT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'usr', 'registration_date', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'cart_item', 'bike_id', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'user_role', 'user_id', 'SELECT', 'YES');
INSERT INTO information_schema.role_column_grants (grantor, grantee, table_catalog, table_schema, table_name, column_name, privilege_type, is_grantable) VALUES ('toha', 'toha', 'sdb', 'public', 'user_role', 'roles', 'REFERENCES', 'YES');